<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Given a sequence of words, print all anagrams together | Set 1 - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/given-a-sequence-of-words-print-all-anagrams-together/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Given a sequence of words, print all anagrams together | Set 1 - GeeksforGeeks" />
<meta property="og:description" content="Given an array of words, print all anagrams together. For example, if the given array is {&#8220;cat&#8221;, &#8220;dog&#8221;, &#8220;tac&#8221;, &#8220;god&#8221;, &#8220;act&#8221;}, then output may be &#8220;cat tac act dog god&#8221;. A simple method is to create a Hash Table. Calculate the hash value of each word in such a way that all anagrams have the &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/given-a-sequence-of-words-print-all-anagrams-together/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:section" content="Strings" />
<meta property="article:published_time" content="2012-10-24T11:38:40+00:00" />
<meta property="article:modified_time" content="2012-10-24T13:32:14+00:00" />
<meta property="og:updated_time" content="2012-10-24T13:32:14+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.499 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417110975 125.16.138.141';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Given a sequence of words, print all anagrams together | Set 1</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Given an array of words, print all anagrams together.  For example, if the given array is {&#8220;cat&#8221;, &#8220;dog&#8221;, &#8220;tac&#8221;, &#8220;god&#8221;, &#8220;act&#8221;}, then output may be &#8220;cat tac act dog god&#8221;.<span id="more-26125"></span></p>
<p>A <strong>simple method</strong> is to create a Hash Table. Calculate the hash value of each word in such a way that all anagrams have the same hash value. Populate the Hash Table with these hash values. Finally, print those words together with same hash values.  A simple hashing mechanism can be modulo sum of all characters.  With modulo sum, two non-anagram words may have same hash value. This can be handled by matching individual characters.</p>
<p>Following is <strong>another method</strong> to print all anagrams together. Take two auxiliary arrays, index array and word array. Populate the word array with the given sequence of words. Sort each individual word of the word array. Finally, sort the word array and keep track of the corresponding indices. After sorting, all the anagrams cluster together. Use the index array to print the strings from the original array of strings.</p>
<p>Let us understand the steps with following input Sequence of Words:
<pre>"cat", "dog", "tac", "god", "act"</pre>
<p><strong>1)</strong> Create two auxiliary arrays index[] and words[].  Copy all given words to words[] and store the original indexes in index[]
<pre>
index[]:  0   1   2   3   4
words[]: cat dog tac god act</pre>
<p><strong>2)</strong> Sort individual words in words[].  Index array doesn&#8217;t change.
<pre>
index[]:   0    1    2    3    4
words[]:  act  dgo  act  dgo  act</pre>
<p><strong>3)</strong> Sort the words array.  Compare individual words using strcmp() to sort
<pre>
index:     0    2    4    1    3
words[]:  act  act  act  dgo  dgo</pre>
<p><strong>4)</strong> All anagrams come together. But words are changed in words array. To print the original words, take index from the index array and use it in the original array. We get
<pre>"cat tac act dog god"</pre>
<p>Following is C implementation of the above algorithm. In the following program, an array of structure &#8220;Word&#8221; is used to store both index and word arrays.  DupArray is another structure that stores array of structure &#8220;Word&#8221;.</p>
<pre class="brush: cpp; highlight: [56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77]; title: ; notranslate" title="">
// A program to print all anagarms together
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

// structure for each word of duplicate array
struct Word
{
    char* str;  // to store word itself
    int index; // index of the word in the original array
};

// structure to represent duplicate array.
struct DupArray
{
    struct Word* array;  // Array of words
    int size;   // Size of array
};

// Create a DupArray object that contains an array of Words
struct DupArray* createDupArray(char* str[], int size)
{
    // Allocate memory for dupArray and all members of it
    struct DupArray* dupArray =
              (struct DupArray*) malloc( sizeof(struct DupArray) );
    dupArray-&gt;size = size;
    dupArray-&gt;array =
              (struct Word*) malloc( dupArray-&gt;size * sizeof(struct Word) );

    // One by one copy words from the given wordArray to dupArray
    int i;
    for (i = 0; i &lt; size; ++i)
    {
        dupArray-&gt;array[i].index = i;
        dupArray-&gt;array[i].str = (char*) malloc( strlen(str[i]) + 1 );
        strcpy(dupArray-&gt;array[i].str, str[i] );
    }

    return dupArray;
}

// Compare two characters. Used in qsort() for sorting an array of characters (Word)
int compChar(const void* a, const void* b)
{
    return *(char*)a - *(char*)b;
}

// Compare two words. Used in qsort() for sorting an array of words
int compStr(const void* a, const void* b)
{
    struct Word* a1 = (struct Word *)a;
    struct Word* b1 = (struct Word *)b;
    return strcmp(a1-&gt;str, b1-&gt;str);
}

// Given a list of words in wordArr[],
void printAnagramsTogether(char* wordArr[], int size)
{
    // Step 1: Create a copy of all words present in given wordArr.
    // The copy will also have orignal indexes of words
    struct DupArray* dupArray = createDupArray(wordArr, size);

    // Step 2: Iterate through all words in dupArray and sort individual words.
    int i;
    for (i = 0; i &lt; size; ++i)
       qsort(dupArray-&gt;array[i].str,
             strlen(dupArray-&gt;array[i].str), sizeof(char), compChar);

    // Step 3: Now sort the array of words in dupArray
    qsort(dupArray-&gt;array, size, sizeof(dupArray-&gt;array[0]), compStr);

    // Step 4: Now all words in dupArray are together, but these words are
    // changed. Use the index member of word struct to get the corresponding 
    // original word
    for (i = 0; i &lt; size; ++i)
        printf(&quot;%s &quot;, wordArr[dupArray-&gt;array[i].index]);
}

// Driver program to test above functions
int main()
{
    char* wordArr[] = {&quot;cat&quot;, &quot;dog&quot;, &quot;tac&quot;, &quot;god&quot;, &quot;act&quot;};
    int size = sizeof(wordArr) / sizeof(wordArr[0]);
    printAnagramsTogether(wordArr, size);
    return 0;
}
</pre>
<p>Output:
<pre>act tac cat god dog</pre>
<p><em><strong>Time Complexity:</strong></em>  Let there be N words and each word has maximum M characters.  The upper bound is O(NMLogM + MNLogN).<br />
Step 2 takes O(NMLogM) time. Sorting a word takes maximum O(MLogM) time.  So sorting N words takes O(NMLogM) time.  step 3 takes O(MNLogN) Sorting array of words takes NLogN comparisons.  A comparison may take maximum O(M) time.  So time to sort array of words will be O(MNLogN).  </p>
<p>We will soon be publishing more efficient methods to solve this problem.  Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-5-longest-common-substring-2/" title="Suffix Tree Application 5 &#8211; Longest Common Substring">Suffix Tree Application 5 &#8211; Longest Common Substring</a></li><li><a href="http://www.geeksforgeeks.org/generalized-suffix-tree-1/" title="Generalized Suffix Tree 1">Generalized Suffix Tree 1</a></li><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-4-build-linear-time-suffix-array/" title="Suffix Tree Application 4 &#8211; Build Linear Time Suffix Array">Suffix Tree Application 4 &#8211; Build Linear Time Suffix Array</a></li><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-3-longest-repeated-substring/" title="Suffix Tree Application 3 &#8211; Longest Repeated Substring">Suffix Tree Application 3 &#8211; Longest Repeated Substring</a></li><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-2-searching-all-patterns/" title="Suffix Tree Application 2 &#8211; Searching All Patterns">Suffix Tree Application 2 &#8211; Searching All Patterns</a></li><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-1-substring-check/" title="Suffix Tree Application 1 &#8211; Substring Check">Suffix Tree Application 1 &#8211; Substring Check</a></li><li><a href="http://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-6/" title="Ukkonen&#8217;s Suffix Tree Construction &#8211; Part 6">Ukkonen&#8217;s Suffix Tree Construction &#8211; Part 6</a></li><li><a href="http://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-5/" title="Ukkonen&#8217;s Suffix Tree Construction &#8211; Part 5">Ukkonen&#8217;s Suffix Tree Construction &#8211; Part 5</a></li></ul>
<p></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fgiven-a-sequence-of-words-print-all-anagrams-together%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/given-a-sequence-of-words-print-all-anagrams-together/" data-text="Given a sequence of words, print all anagrams together | Set 1" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/given-a-sequence-of-words-print-all-anagrams-together/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-33125">
        <div id="dsq-comment-header-33125" class="dsq-comment-header">
            <cite id="dsq-cite-33125">
                <span id="dsq-author-user-33125">guest</span>
            </cite>
        </div>
        <div id="dsq-comment-body-33125" class="dsq-comment-body">
            <div id="dsq-comment-message-33125" class="dsq-comment-message"><p>modulo sum method as suggested initially wouldn&#8217;t be right because the sum got by adding two number may be as well got by adding any other set of numbers.. i</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-31834">
        <div id="dsq-comment-header-31834" class="dsq-comment-header">
            <cite id="dsq-cite-31834">
                <span id="dsq-author-user-31834">kanhaiya</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31834" class="dsq-comment-body">
            <div id="dsq-comment-message-31834" class="dsq-comment-message"><p>@geeksforgeeks why this code is giving error while compiling it as c++ code it says can&#8217;t convert DupArray* to DupArray* but why</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-31739">
        <div id="dsq-comment-header-31739" class="dsq-comment-header">
            <cite id="dsq-cite-31739">
                <span id="dsq-author-user-31739">Rajnish Garg</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31739" class="dsq-comment-body">
            <div id="dsq-comment-message-31739" class="dsq-comment-message"><p>import java.util.*;</p>
<p>public class PrintAllAnagramsTogether {<br />
    public HashMap&lt;String,ArrayList&gt; words = new HashMap&lt;String, ArrayList&gt;();</p>
<p>    public void seqWords(String[] arr) {<br />
        for(String word: arr) {<br />
            char[] c = word.toCharArray();<br />
            Arrays.sort(c);<br />
            String Sortedword = new String(c);<br />
            if(words.containsKey(Sortedword)) {<br />
                words.get(Sortedword).add(word);<br />
            }<br />
            else {<br />
                ArrayList ar = new ArrayList();<br />
                ar.add(word);<br />
                words.put(Sortedword, ar);<br />
            }<br />
        }<br />
    }<br />
    public void printWords() {</p>
<p>        for(Map.Entry&lt;String,ArrayList&gt; mp: words.entrySet()) {<br />
            for(String word: mp.getValue()) {<br />
                System.out.print(word+&#8221; &#8220;);<br />
            }<br />
        }</p>
<p>    }<br />
    public static void main(String[] args) {<br />
        String[] words = {&#8220;cat&#8221;, &#8220;dog&#8221;, &#8220;tac&#8221;, &#8220;god&#8221;, &#8220;act&#8221;};<br />
        PrintAllAnagramsTogether pa = new PrintAllAnagramsTogether();<br />
        pa.seqWords(words);<br />
        pa.printWords();<br />
    }</p>
<p>}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-29907">
        <div id="dsq-comment-header-29907" class="dsq-comment-header">
            <cite id="dsq-cite-29907">
                <span id="dsq-author-user-29907">Siddhartha Banerjee</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29907" class="dsq-comment-body">
            <div id="dsq-comment-message-29907" class="dsq-comment-message"><p>You can sort a word of characters in O(M) time using counting sort (instead of O(M logM) So complexity would be O(NM + MNlogN)</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-28748">
        <div id="dsq-comment-header-28748" class="dsq-comment-header">
            <cite id="dsq-cite-28748">
                <span id="dsq-author-user-28748">Sumit Monga</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28748" class="dsq-comment-body">
            <div id="dsq-comment-message-28748" class="dsq-comment-message"><p>Another solution using CountSort and then RadixSort to sort the individual characters from the right in the words.</p>
<p>#include</p>
<p>#include</p>
<p>#include</p>
<p>#include</p>
<p>using namespace std;</p>
<p>#define RANGE 255</p>
<p>typedef struct Word</p>
<p>{</p>
<p>    char * str;</p>
<p>    int ind;</p>
<p>}W;</p>
<p>void countSort(W *w,int len)</p>
<p>{</p>
<p>    // The output character array that will have sorted str</p>
<p>    char output[len];</p>
<p>    // Create a count array to store count of inidividul characters and</p>
<p>    // initialize count array as 0</p>
<p>    int count[RANGE + 1], i;</p>
<p>    memset(count, 0, sizeof(count));</p>
<p>    // Store count of each character</p>
<p>    for(i = 0; i &lt; len; ++i)</p>
<p>        ++count[(*w).str[i]];</p>
<p>    // Change count[i] so that count[i] now contains actual position of</p>
<p>    // this character in output array</p>
<p>    for (i = 1; i &lt;= RANGE; ++i)</p>
<p>        count[i] += count[i-1];</p>
<p>    // Build the output character array</p>
<p>    for (i = 0; i &lt; len; ++i)</p>
<p>    {</p>
<p>        output[count[(*w).str[i]]-1] = (*w).str[i];</p>
<p>        &#8211;count[(*w).str[i]];</p>
<p>    }</p>
<p>    // Copy the output array to str, so that str now</p>
<p>    // contains sorted characters</p>
<p>    for (i = 0; i &lt; len; ++i)</p>
<p>        (*w).str[i] = output[i];</p>
<p>}</p>
<p>void count_Sort(W *w,int index,int size)</p>
<p>{</p>
<p>    // The output character array that will have sorted str</p>
<p>    W output[size];</p>
<p>    // Create a count array to store count of inidividul characters and</p>
<p>    // initialize count array as 0</p>
<p>    int count[RANGE + 1], i;</p>
<p>    memset(count, 0, sizeof(count));</p>
<p>    // Store count of each character</p>
<p>    for(i = 0; i &lt; size ; ++i)</p>
<p>        ++count[w[i].str[index]];</p>
<p>    // Change count[i] so that count[i] now contains actual position of</p>
<p>    // this character in output array</p>
<p>    for (i = 1; i = 0 ; i&#8211;)</p>
<p>    {</p>
<p>        output[count[w[i].str[index]]-1] = w[i];</p>
<p>        &#8211;count[w[i].str[index]];</p>
<p>    }</p>
<p>    // Copy the output array to str, so that str now</p>
<p>    // contains sorted characters</p>
<p>    for (i = 0; i &lt; size; ++i)</p>
<p>        w[i] = output[i];</p>
<p>}</p>
<p>void print_anagram(char * s[],int len,int n)</p>
<p>{</p>
<p>    W *word = (W *)malloc(sizeof(W) * n);</p>
<p>    int i;</p>
<p>    for(i = 0; i &lt; n; i++)</p>
<p>    {</p>
<p>        word[i].str = (char *)malloc(sizeof(char)*(len+1));</p>
<p>        strcpy(word[i].str,s[i]);</p>
<p>        word[i].ind = i;</p>
<p>    }</p>
<p>    for(i = 0; i = 0; i&#8211;)</p>
<p>    count_Sort(word,i,n);</p>
<p>    for(i = 0; i &lt; n; i++)</p>
<p>    printf(&quot; %s &quot;,s[word[i].ind]);</p>
<p>}</p>
<p>int main()</p>
<p>{</p>
<p>    char * str[] = {&quot;cat&quot;, &quot;dog&quot;, &quot;tac&quot;, &quot;god&quot;, &quot;act&quot;};</p>
<p>    print_anagram(str,3,5);</p>
<p>}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-27617">
        <div id="dsq-comment-header-27617" class="dsq-comment-header">
            <cite id="dsq-cite-27617">
                <span id="dsq-author-user-27617">Kalyani</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27617" class="dsq-comment-body">
            <div id="dsq-comment-message-27617" class="dsq-comment-message"><p>I didn&#8217;t get hw this qsort will work exactly.. I got the overall idea of the logic., but want to see d exact implementation of function qsort()</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-gargsanjay even thread-even depth-1" id="dsq-comment-21571">
        <div id="dsq-comment-header-21571" class="dsq-comment-header">
            <cite id="dsq-cite-21571">
                <span id="dsq-author-user-21571">gargsanjay</span>
            </cite>
        </div>
        <div id="dsq-comment-body-21571" class="dsq-comment-body">
            <div id="dsq-comment-message-21571" class="dsq-comment-message"><p>array is a pointer to word struct still we are using array[i].word<br />
isn&#8217;t this wrong??</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-pritybhudolia odd alt thread-odd thread-alt depth-1" id="dsq-comment-18672">
        <div id="dsq-comment-header-18672" class="dsq-comment-header">
            <cite id="dsq-cite-18672">
                <span id="dsq-author-user-18672">pritybhudolia</span>
            </cite>
        </div>
        <div id="dsq-comment-body-18672" class="dsq-comment-body">
            <div id="dsq-comment-message-18672" class="dsq-comment-message"><p>The idea that I have used here is similar to method 1.The sum of each letter in a word is found, and same words will have same sumvalue.</p>
<pre> <code language="C">
/* 
#include&lt;stdio.h&gt;
#include&lt;conio.h&gt;
void printAnagramsTogether(char* wordArr[], int size) 
{
     int i=0,j=0,k=0,temp,index;
    int sum[10][10]={0};
    //here sum is a 2d array that contains the  letter in each word and the index of word in wordArr
    for(i=0;i&lt;size;i++)
    {
                  
        for(j=0;wordArr[i][j]!='&#92;&#48;';j++)
         {  
                                         
                                        sum[k][0]=sum[k][0]+(int)wordArr[i][j];
                                        sum[k][1]=i;
         }
         k++;
     }
     //using INSERTION SORT the values in sum[][] are sorted
     for(i=1;i&lt;k;i++)
     {
      temp=sum[i][0];
      index=sum[i][1];
      j=i-1;
      while((temp&lt;sum[j][0])&amp;&amp;(j&gt;=0))
      {
      sum[j+1][0]=sum[j][0];
      sum[j+1][1]=sum[j][1];
      j=j-1;
      }
      sum[j+1][0]=temp;
      sum[j+1][1]=index;
      } 
      //finally based on the index in the sum[][] the values at same index in wordArr is printed 
      for(i=0;i&lt;k;i++)
      {
      j=sum[i][1];
      printf(&quot; %s&quot;,wordArr[j]); 
     } 
}                  
 
int main()
{
    int i=0;
    char* wordArr[] = {&quot;cat&quot;, &quot;dog&quot;, &quot;tac&quot;, &quot;god&quot;, &quot;act&quot;,&quot;odg&quot;};
    int size = sizeof(wordArr) / sizeof(wordArr[0]);
    printAnagramsTogether(wordArr, size);
    getch();
    return 0;
}
*/
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-27294">
        <div id="dsq-comment-header-27294" class="dsq-comment-header">
            <cite id="dsq-cite-27294">
                <span id="dsq-author-user-27294">Amit Agnihotri</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27294" class="dsq-comment-body">
            <div id="dsq-comment-message-27294" class="dsq-comment-message"><p>not necessarily<br />
ex: &#8220;aabc&#8221;  and &#8220;bbc&#8221; will have same sum.<br />
similary  &#8220;abc&#8221;  and &#8220;aad&#8221;&#8230;&#8230;&#8230;&#8230;&#8230;</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-abhishek08aug odd alt thread-even depth-1" id="dsq-comment-18001">
        <div id="dsq-comment-header-18001" class="dsq-comment-header">
            <cite id="dsq-cite-18001">
                <span id="dsq-author-user-18001">abhishek08aug</span>
            </cite>
        </div>
        <div id="dsq-comment-body-18001" class="dsq-comment-body">
            <div id="dsq-comment-message-18001" class="dsq-comment-message"><p>Intelligent <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_biggrin.gif" alt=":D" class="wp-smiley" /></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-12027">
        <div id="dsq-comment-header-12027" class="dsq-comment-header">
            <cite id="dsq-cite-12027">
                <span id="dsq-author-user-12027">atul</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12027" class="dsq-comment-body">
            <div id="dsq-comment-message-12027" class="dsq-comment-message"><p>another approach:-<br />
1) sort the input<br />
2) insert sorted input in trie<br />
3) &#8220;at the end of word&#8221; node of trie..maintain linked list which contain actual word.<br />
4) if already present then append to the linked list maintained.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-14599">
        <div id="dsq-comment-header-14599" class="dsq-comment-header">
            <cite id="dsq-cite-14599">
                <span id="dsq-author-user-14599">monika</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14599" class="dsq-comment-body">
            <div id="dsq-comment-message-14599" class="dsq-comment-message"><p>really&#8230;a very good solution!!</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-31193">
        <div id="dsq-comment-header-31193" class="dsq-comment-header">
            <cite id="dsq-cite-31193">
                <span id="dsq-author-user-31193">Code_Addict</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31193" class="dsq-comment-body">
            <div id="dsq-comment-message-31193" class="dsq-comment-message"><p>Great solution with another DS. Thanks</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-31194">
        <div id="dsq-comment-header-31194" class="dsq-comment-header">
            <cite id="dsq-cite-31194">
                <span id="dsq-author-user-31194">Code_Addict</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31194" class="dsq-comment-body">
            <div id="dsq-comment-message-31194" class="dsq-comment-message"><p>This method is discussed in Set 2 of same above problem.</p>
<p><a href="http://www.geeksforgeeks.org/given-a-sequence-of-words-print-all-anagrams-together-set-2/" rel="nofollow">http://www.geeksforgeeks.org/given-a-sequence-of-words-print-all-anagrams-together-set-2/</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-12026">
        <div id="dsq-comment-header-12026" class="dsq-comment-header">
            <cite id="dsq-cite-12026">
                <span id="dsq-author-user-12026">atul</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12026" class="dsq-comment-body">
            <div id="dsq-comment-message-12026" class="dsq-comment-message"><p>another approach:-<br />
1) sort the input<br />
2) insert sorted input in trie<br />
3) &#8220;at the end of word&#8221; node of trie..maintain linked list which contain actual word.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/given-a-sequence-of-words-print-all-anagrams-together/';
var disqus_identifier = '26125 http://www.geeksforgeeks.org/?p=26125';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Given a sequence of words, print all anagrams together | Set 1";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.194 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:26:15 -->

<!-- Compression = gzip -->
<!-- super cache -->