<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Greedy Algorithms | Set 1 (Activity Selection Problem) - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/greedy-algorithms-set-1-activity-selection-problem/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Greedy Algorithms | Set 1 (Activity Selection Problem) - GeeksforGeeks" />
<meta property="og:description" content="Greedy is an algorithmic paradigm that builds up a solution piece by piece, always choosing the next piece that offers the most obvious and immediate benefit. Greedy algorithms are used for optimization problems. An optimization problem can be solved using Greedy if the problem has the following property: At every step, we can make a &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/greedy-algorithms-set-1-activity-selection-problem/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:tag" content="Activity Selection Problem" />
<meta property="article:tag" content="Greedy" />
<meta property="article:tag" content="Greedy Algorithm" />
<meta property="article:section" content="Misc" />
<meta property="article:published_time" content="2012-03-28T10:47:22+00:00" />
<meta property="article:modified_time" content="2014-04-02T14:57:52+00:00" />
<meta property="og:updated_time" content="2014-04-02T14:57:52+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.482 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417110817 117.211.90.154';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Greedy Algorithms | Set 1 (Activity Selection Problem)</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Greedy is an algorithmic paradigm that builds up a solution piece by piece, always choosing the next piece that offers the most obvious and immediate benefit.<span id="more-18528"></span> Greedy algorithms are used for optimization problems. An optimization problem can be solved using Greedy if the problem has the following property:<em> At every step, we can make a choice that looks best at the moment, and we get the optimal solution of the complete problem</em>.<br />
If a Greedy Algorithm can solve a problem, then it generally becomes the best method to solve that problem as the Greedy algorithms are in general more efficient than other techniques like Dynamic Programming.  But Greedy algorithms cannot always be applied. For example, Fractional Knapsack problem (See <a href="http://www.cs.binghamton.edu/~dima/cs333/knapsack.ppt">this</a>) can be solved using Greedy, but <a href="http://www.geeksforgeeks.org/archives/18430">0-1 Knapsack</a> cannot be solved using Greedy.  </p>
<p>Following are some standard algorithms that are Greedy algorithms.<br />
<strong>1) <a href="http://en.wikipedia.org/wiki/Kruskal%27s_algorithm">Kruskal&#8217;s Minimum Spanning Tree (MST)</a>:</strong> In Kruskal&#8217;s algorithm, we create a MST by picking edges one by one. The Greedy Choice is to pick the smallest weight edge that doesn&#8217;t cause a cycle in the MST constructed so far.<br />
<strong>2) <a href="http://en.wikipedia.org/wiki/Prim%27s_algorithm">Prim&#8217;s Minimum Spanning Tree</a>:</strong> In Prim&#8217;s algorithm also, we create a MST by picking edges one by one. We maintain two sets: set of the vertices already included in MST and the set of the vertices not yet included. The Greedy Choice is to pick the smallest weight edge that connects the two sets.<br />
<strong>3) <a href="http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm">Dijkstra&#8217;s Shortest Path</a>: </strong>The Dijkstra&#8217;s algorithm is very similar to Prim&#8217;s algorithm. The shortest path tree is built up, edge by edge. We maintain two sets: set of the vertices already included in the tree and the set of the vertices not yet included. The Greedy Choice is to pick the edge that connects the two sets and is on the smallest weight path from source to the set that contains not yet included vertices.<br />
<strong>4) <a href="http://en.wikipedia.org/wiki/Huffman_coding">Huffman Coding</a>:</strong> Huffman Coding is a loss-less compression technique.  It assigns variable length bit codes to different characters.  The Greedy Choice is to assign least bit length code to the most frequent character.</p>
<p>The greedy algorithms are sometimes also used to get an approximation for Hard optimization problems. For example, <a href="http://en.wikipedia.org/wiki/Travelling_salesman_problem">Traveling Salesman Problem</a> is a NP Hard problem.  A Greedy choice for this problem is to pick the nearest unvisited city from the current city at every step. This solutions doesn&#8217;t always produce the best optimal solution, but can be used to get an approximate optimal solution.</p>
<p>Let us consider the <a href="http://en.wikipedia.org/wiki/Activity_selection_problem">Activity Selection problem</a> as our first example of Greedy algorithms. Following is the problem statement.<br />
<em>You are given n activities with their start and finish times. Select the maximum number of activities that can be performed by a single person, assuming that a person can only work on a single activity at a time.</em><br />
Example: </p>
<pre>
Consider the following 6 activities. 
     start[]  =  {1, 3, 0, 5, 8, 5};
     finish[] =  {2, 4, 6, 7, 9, 9};
The maximum set of activities that can be executed 
by a single person is {0, 1, 3, 4}
</pre>
<p>The greedy choice is to always pick the next activity whose finish time is least among the remaining activities and the start time is more than or equal to the finish time of previously selected activity. We can sort the activities according to their finishing time so that we always consider the next activity as minimum finishing time activity. </p>
<p>1) Sort the activities according to their finishing time<br />
2) Select the first activity from the sorted array and print it.<br />
3) Do following for remaining activities in the sorted array.<br />
&#8230;&#8230;.a) If the start time of this activity is greater than the finish time of previously selected activity then select this activity and print it.</p>
<p>In the following C implementation, it is assumed that the activities are already sorted according to their finish time. </p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include&lt;stdio.h&gt;

// Prints a maximum set of activities that can be done by a single
// person, one at a time.
//  n   --&gt;  Total number of activities
//  s[] --&gt;  An array that contains start time of all activities
//  f[] --&gt;  An array that contains finish time of all activities
void printMaxActivities(int s[], int f[], int n)
{
    int i, j;

    printf (&quot;Following activities are selected \n&quot;);

    // The first activity always gets selected
    i = 0;
    printf(&quot;%d &quot;, i);

    // Consider rest of the activities
    for (j = 1; j &lt; n; j++)
    {
      // If this activity has start time greater than or equal to the finish
      // time of previously selected activity, then select it
      if (s[j] &gt;= f[i])
      {
          printf (&quot;%d &quot;, j);
          i = j;
      }
    }
}

// driver program to test above function
int main()
{
    int s[] =  {1, 3, 0, 5, 8, 5};
    int f[] =  {2, 4, 6, 7, 9, 9};
    int n = sizeof(s)/sizeof(s[0]);
    printMaxActivities(s, f, n);
    getchar();
    return 0;
}
</pre>
<p>Output:</p>
<pre>
Following activities are selected
0 1 3 4
</pre>
<p><strong>How does Greedy Choice work for Activities sorted according to finish time?</strong><br />
Let the give set of activities be S = {1, 2, 3, ..n}  and activities be sorted by finish time.  The greedy choice is to always pick activity 1. How come the activity 1 always provides one of the optimal solutions.  We can prove it by showing that if there is another solution B with first activity other than 1, then there is also a solution A of same size with activity 1 as first activity.  Let the first activity selected by B be k, then there always exist A = {B &#8211; {k}} U {1}.(Note that the activities in B are independent and k has smallest finishing time among all. Since k is not 1, finish(k) >= finish(1)).</p>
<p><strong>References:</strong><br />
<a href="http://mitpress.mit.edu/algorithms/">Introduction to Algorithms by Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, Clifford Stein</a><br />
<a href="http://www.cs.berkeley.edu/~vazirani/algorithms.html">Algorithms by S. Dasgupta, C.H. Papadimitriou, and U.V. Vazirani </a><br />
<a href="http://en.wikipedia.org/wiki/Greedy_algorithm">http://en.wikipedia.org/wiki/Greedy_algorithm</a></p>
<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/job-sequencing-problem-set-1-greedy-algorithm/" title="Job Sequencing Problem | Set 1 (Greedy Algorithm)">Job Sequencing Problem | Set 1 (Greedy Algorithm)</a></li><li><a href="http://www.geeksforgeeks.org/multiply-two-polynomials-2/" title="Multiply two polynomials">Multiply two polynomials</a></li><li><a href="http://www.geeksforgeeks.org/algorithm-practice-question-beginners-set-1/" title="Algorithm Practice Question for Beginners | Set 1">Algorithm Practice Question for Beginners | Set 1</a></li><li><a href="http://www.geeksforgeeks.org/count-distinct-non-negative-pairs-x-y-satisfy-inequality-xx-yy-n-2/" title="Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y &lt; n">Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y < n</a></li><li><a href="http://www.geeksforgeeks.org/binomial-heap-2/" title="Binomial Heap">Binomial Heap</a></li><li><a href="http://www.geeksforgeeks.org/print-increasing-sequences-length-k-first-n-natural-numbers/" title="Print all increasing sequences of length k from first n natural numbers">Print all increasing sequences of length k from first n natural numbers</a></li><li><a href="http://www.geeksforgeeks.org/find-nth-number-number-system-3-4/" title="Find n&#8217;th number in a number system with only 3 and 4">Find n&#8217;th number in a number system with only 3 and 4</a></li><li><a href="http://www.geeksforgeeks.org/minimum-cost-polygon-triangulation/" title="Minimum Cost Polygon Triangulation">Minimum Cost Polygon Triangulation</a></li></ul>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/activity-selection-problem/" rel="tag">Activity Selection Problem</a>, <a href="http://www.geeksforgeeks.org/tag/greedy/" rel="tag">Greedy</a>, <a href="http://www.geeksforgeeks.org/tag/greedy-algorithm/" rel="tag">Greedy Algorithm</a></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fgreedy-algorithms-set-1-activity-selection-problem%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/greedy-algorithms-set-1-activity-selection-problem/" data-text="Greedy Algorithms | Set 1 (Activity Selection Problem)" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/greedy-algorithms-set-1-activity-selection-problem/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-34010">
        <div id="dsq-comment-header-34010" class="dsq-comment-header">
            <cite id="dsq-cite-34010">
                <span id="dsq-author-user-34010">guest</span>
            </cite>
        </div>
        <div id="dsq-comment-body-34010" class="dsq-comment-body">
            <div id="dsq-comment-message-34010" class="dsq-comment-message"><p>can someone post links to some problem on this topic??</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-31035">
        <div id="dsq-comment-header-31035" class="dsq-comment-header">
            <cite id="dsq-cite-31035">
                <span id="dsq-author-user-31035">new</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31035" class="dsq-comment-body">
            <div id="dsq-comment-message-31035" class="dsq-comment-message"><p>What is we also need to give the sequence number of the activities we have selected.We preprocess to sort the arrays but the sequence number should be on the basis of the initial array</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-29217">
        <div id="dsq-comment-header-29217" class="dsq-comment-header">
            <cite id="dsq-cite-29217">
                <span id="dsq-author-user-29217">RAJAT</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29217" class="dsq-comment-body">
            <div id="dsq-comment-message-29217" class="dsq-comment-message"><p>WHAT IF THE FINISHING TIME OF THE FIRST JOB WAS NOT 2 ,BUT SAY<br />
8..THEN IN THIS CASE IT WOULD NOT HAVE GIVEN THE CORRECT ANS </p>
<p>IT GIVES 0 4 BUT THE BEST CASE CAN BE THAT OF 1 3 4</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-29787">
        <div id="dsq-comment-header-29787" class="dsq-comment-header">
            <cite id="dsq-cite-29787">
                <span id="dsq-author-user-29787">Sree Harsha Konduri</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29787" class="dsq-comment-body">
            <div id="dsq-comment-message-29787" class="dsq-comment-message"><p>The finish list is to be sorted first. So when finish time of the first job is 8 it  will be placed between activities 5-7 and 8-9.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-28089">
        <div id="dsq-comment-header-28089" class="dsq-comment-header">
            <cite id="dsq-cite-28089">
                <span id="dsq-author-user-28089">arun</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28089" class="dsq-comment-body">
            <div id="dsq-comment-message-28089" class="dsq-comment-message"><p>Assuming that a person can work on only a single task at a time how can the following set be a solution<br />
{0, 1, 3, 4}<br />
The start time of 1 is before the end time of 0 which is 6.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-28352">
        <div id="dsq-comment-header-28352" class="dsq-comment-header">
            <cite id="dsq-cite-28352">
                <span id="dsq-author-user-28352">Aadi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28352" class="dsq-comment-body">
            <div id="dsq-comment-message-28352" class="dsq-comment-message"><p>here 0 means the 0th job which is the first job above whose starting time is 1.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-22166">
        <div id="dsq-comment-header-22166" class="dsq-comment-header">
            <cite id="dsq-cite-22166">
                <span id="dsq-author-user-22166">Dasharath</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22166" class="dsq-comment-body">
            <div id="dsq-comment-message-22166" class="dsq-comment-message"><p>if the input is<br />
int s[] = {1, 3, 0, 5, 8, 7, 9};<br />
int f[] = {2, 4, 6, 7, 9, 9, 10};</p>
<p>This algorithm gives (0,1,3,4) as output. The output should rather be (0,1,3,5,6)</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-kartik odd alt depth-2" id="dsq-comment-22171">
        <div id="dsq-comment-header-22171" class="dsq-comment-header">
            <cite id="dsq-cite-22171">
                <span id="dsq-author-user-22171">kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22171" class="dsq-comment-body">
            <div id="dsq-comment-message-22171" class="dsq-comment-message"><p>I think the algorithm will give {0, 1, 3, 4, 6} which is also a correct answer.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-8389">
        <div id="dsq-comment-header-8389" class="dsq-comment-header">
            <cite id="dsq-cite-8389">
                <span id="dsq-author-user-8389">soha</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8389" class="dsq-comment-body">
            <div id="dsq-comment-message-8389" class="dsq-comment-message"><p>How can greedy algorithms help in complex problems like shortest path problems?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-7928">
        <div id="dsq-comment-header-7928" class="dsq-comment-header">
            <cite id="dsq-cite-7928">
                <span id="dsq-author-user-7928">Me</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7928" class="dsq-comment-body">
            <div id="dsq-comment-message-7928" class="dsq-comment-message"><p>How can this algorithm be modified such that we need to choose maximum number of tasks?</p>
<p>For eg.<br />
s[] = { 1, 3, 5, 7, 9}<br />
f[] = {10, 4, 6, 8, 10}</p>
<p>As per this algorithm, only task 0 is printed in the output.<br />
But optimally, if we need to do the maximum number of tasks, output would be, 1, 2, 3, 4</p>
<p>How can this algorithm be changed for this kind of modification?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-kartik even depth-2" id="dsq-comment-7929">
        <div id="dsq-comment-header-7929" class="dsq-comment-header">
            <cite id="dsq-cite-7929">
                <span id="dsq-author-user-7929">kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7929" class="dsq-comment-body">
            <div id="dsq-comment-message-7929" class="dsq-comment-message"><p>The implementation given in the post assumes that the input tasks are sorted according to their finish time.</p>
<p>For unsorted inputs, you need to add a preprocessing step that first sorts the given tasks ccording to their finish time.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-11958">
        <div id="dsq-comment-header-11958" class="dsq-comment-header">
            <cite id="dsq-cite-11958">
                <span id="dsq-author-user-11958">agmafara</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11958" class="dsq-comment-body">
            <div id="dsq-comment-message-11958" class="dsq-comment-message"><p>#include<br />
#include </p>
<p>void printMaxActivities(int s[], int f[], int n) {<br />
    int i, j;</p>
<p>    printf(&#8220;Following activities are selected \n&#8221;);</p>
<p>    // The first activity always gets selected<br />
    i = 0;<br />
    printf(&#8220;%d &#8220;, i);</p>
<p>    // Consider rest of the activities<br />
    for (j = 1; j = f[i]) {<br />
            printf(&#8220;%d &#8220;, j);<br />
            i = j;<br />
        }<br />
    }<br />
}</p>
<p>// SortArrays base on numbs Array param<br />
// numbs[]=column or array to be used for sorting</p>
<p>void SortGreedyArrays(int numbs[], int numbs2[], int size) {<br />
    //bubble sorting<br />
    int a, b, t, t2;<br />
    for (a = 1; a = a; b&#8211;) {<br />
            if (numbs[b &#8211; 1] &gt; numbs[b]) {<br />
                t = numbs[b &#8211; 1];<br />
                numbs[b &#8211; 1] = numbs[b];<br />
                numbs[b] = t;<br />
                t2 = numbs2[b &#8211; 1];<br />
                numbs2[b &#8211; 1] = numbs2[b];<br />
                numbs2[b] = t2;<br />
            }<br />
        }</p>
<p>    }<br />
}</p>
<p>// driver program to test above function</p>
<p>int main(int argc, char** argv) {</p>
<p>    int s[] = {1, 3, 5, 7, 9};<br />
    int f[] = {10, 4, 6, 8, 10};</p>
<p>    int n = sizeof (s) / sizeof (s[0]);</p>
<p>    // sort base on f<br />
    SortGreedyArrays(f, s, n);</p>
<p>    printMaxActivities(s, f, n);</p>
<p>    getchar();<br />
    return 0;<br />
}</p>
<p>0 1 2 4</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-11959">
        <div id="dsq-comment-header-11959" class="dsq-comment-header">
            <cite id="dsq-cite-11959">
                <span id="dsq-author-user-11959">agmafara</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11959" class="dsq-comment-body">
            <div id="dsq-comment-message-11959" class="dsq-comment-message"><p>Enhancement to last suggestion.<br />
Your view?</p>
<p>#include<br />
#include </p>
<p>void printMaxActivities(int s[], int f[], int n) {<br />
    int i, j;</p>
<p>    printf(&#8220;Following activities are selected \n&#8221;);</p>
<p>    // The first activity always gets selected<br />
    i = 0;<br />
    printf(&#8220;%d &#8220;, i);</p>
<p>    // Consider rest of the activities<br />
    for (j = 1; j = f[i]) {<br />
            printf(&#8220;%d &#8220;, j);<br />
            i = j;<br />
        }<br />
    }<br />
}</p>
<p>// SortArrays base on numbs Array param<br />
// numbs[]=column or array to be used for sorting</p>
<p>void SortGreedyArrays(int numbs[], int numbs2[], int size) {<br />
    //bubble sorting<br />
    int a, b, t, t2;<br />
    for (a = 1; a = a; b&#8211;) {<br />
            if (numbs[b &#8211; 1] &gt; numbs[b]) {<br />
                t = numbs[b &#8211; 1];<br />
                numbs[b &#8211; 1] = numbs[b];<br />
                numbs[b] = t;<br />
                t2 = numbs2[b &#8211; 1];<br />
                numbs2[b &#8211; 1] = numbs2[b];<br />
                numbs2[b] = t2;<br />
            }<br />
        }</p>
<p>    }<br />
}</p>
<p>void printSortedGreedyArray(int s[], int f[], int n) {<br />
    int a;<br />
    printf(&#8221; \n &#8220;);<br />
    for ( a = 0; a &lt; n; a++) {</p>
<p>        printf(&quot;Activity %d &#8211; %d,%d \n &quot;, a , s[a] , f[a]);</p>
<p>    }<br />
     printf(&quot; \n &quot;);</p>
<p>}</p>
<p>// driver program to test above function</p>
<p>int main(int argc, char** argv) {</p>
<p>    int s[] = {1, 3, 5, 7, 9};<br />
    int f[] = {10, 4, 6, 8, 10};</p>
<p>    int n = sizeof (s) / sizeof (s[0]);</p>
<p>    // sort base on f<br />
    SortGreedyArrays(f, s, n);</p>
<p>    printSortedGreedyArray(s,f,n);</p>
<p>    printMaxActivities(s, f, n);</p>
<p>    getchar();<br />
    return 0;<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-27521">
        <div id="dsq-comment-header-27521" class="dsq-comment-header">
            <cite id="dsq-cite-27521">
                <span id="dsq-author-user-27521">Sandeep</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27521" class="dsq-comment-body">
            <div id="dsq-comment-message-27521" class="dsq-comment-message"><p>why only task  0 is printed. if you sort the finish times then  your input becomes<br />
S[] = {3,5,7,1,9} ,<br />
f[] =  {4,6,8,10,10}  in which case your op  will be 0,1,2,4</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-29788">
        <div id="dsq-comment-header-29788" class="dsq-comment-header">
            <cite id="dsq-cite-29788">
                <span id="dsq-author-user-29788">Sree Harsha Konduri</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29788" class="dsq-comment-body">
            <div id="dsq-comment-message-29788" class="dsq-comment-message"><p>We need to preprocess the inputs before we can use the greedy algorithm of activity selection. The finish array needs to be sorted in increasing order to run this algorithm. Then it is intuitive to pick the activity with the smallest finish time which does not overlap with running activities.<br />
After preprocessing<br />
s[] = { 3 5 7 1 9}<br />
f[]  = { 4 6 8 10 10}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-33254">
        <div id="dsq-comment-header-33254" class="dsq-comment-header">
            <cite id="dsq-cite-33254">
                <span id="dsq-author-user-33254">Rakesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-33254" class="dsq-comment-body">
            <div id="dsq-comment-message-33254" class="dsq-comment-message"><p>3 5 7 9   1</p>
<p>4 6 8 10 10</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-7889">
        <div id="dsq-comment-header-7889" class="dsq-comment-header">
            <cite id="dsq-cite-7889">
                <span id="dsq-author-user-7889">Mad Coder</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7889" class="dsq-comment-body">
            <div id="dsq-comment-message-7889" class="dsq-comment-message"><p>In your explanation of algorithm for activity selection problem,in 3rd point it is written that</p>
<p> If the start time of this activity is less than the finish time of previously selected activity then select this activity and print it.</p>
<p>It should rather be if start time of current activity is greater than the finish time of previous activity, then current activity should be selected  otherwise both will overlap.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-7890">
        <div id="dsq-comment-header-7890" class="dsq-comment-header">
            <cite id="dsq-cite-7890">
                <span id="dsq-author-user-7890">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7890" class="dsq-comment-body">
            <div id="dsq-comment-message-7890" class="dsq-comment-message"><p>@Mad Coder: Thanks for pointing this out. We have updated the post. Keep it up!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-7888">
        <div id="dsq-comment-header-7888" class="dsq-comment-header">
            <cite id="dsq-cite-7888">
                <span id="dsq-author-user-7888">cracker</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7888" class="dsq-comment-body">
            <div id="dsq-comment-message-7888" class="dsq-comment-message"><p>Another great article. Keep rocking GeeksforGeeks. Please post an article on Kruskal, how to implement it.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-psychocoder odd alt depth-2" id="dsq-comment-7905">
        <div id="dsq-comment-header-7905" class="dsq-comment-header">
            <cite id="dsq-cite-7905">
                <span id="dsq-author-user-7905">PsychoCoder</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7905" class="dsq-comment-body">
            <div id="dsq-comment-message-7905" class="dsq-comment-message"><p>@Cracker :</p>
<p><a href="http://geeksforgeeks.org/forum/topic/how-to-implement-kruskal-minimum-spanning-tree?replies=2#post-36795" rel="nofollow">http://geeksforgeeks.org/forum/topic/how-to-implement-kruskal-minimum-spanning-tree?replies=2#post-36795</a></p>
<p>may be this can help you. <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-8554">
        <div id="dsq-comment-header-8554" class="dsq-comment-header">
            <cite id="dsq-cite-8554">
http://www.facebook.com/profile.php?id=100003406021811                <span id="dsq-author-user-8554">Rute</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8554" class="dsq-comment-body">
            <div id="dsq-comment-message-8554" class="dsq-comment-message"><p>Any good search manektirg campaign is a multifaceted approach to reach on top of the rankings.a0Many SEO factors such as site structure, content relevance, and submission of press releases online will influence the position of your website / blog in search engine results.a0From 2011, the engagement is a key metric that can be measured by activity ona0social networksa0and how long visitors spend on your site / blog, here are some changes thata0Google Pandaa0brought.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/greedy-algorithms-set-1-activity-selection-problem/';
var disqus_identifier = '18528 http://www.geeksforgeeks.org/?p=18528';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Greedy Algorithms | Set 1 (Activity Selection Problem)";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.197 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:23:37 -->

<!-- Compression = gzip -->
<!-- super cache -->