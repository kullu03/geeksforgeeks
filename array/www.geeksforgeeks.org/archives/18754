<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Implement two stacks in an array - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/implement-two-stacks-in-an-array/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Implement two stacks in an array - GeeksforGeeks" />
<meta property="og:description" content="Create a data structure twoStacks that represents two stacks. Implementation of twoStacks should use only one array, i.e., both stacks should use the same array for storing elements. Following functions must be supported by twoStacks. push1(int x) &#8211;&gt; pushes x to first stack push2(int x) &#8211;&gt; pushes x to second stack pop1() &#8211;&gt; pops an &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/implement-two-stacks-in-an-array/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:tag" content="stack" />
<meta property="article:section" content="Arrays" />
<meta property="article:published_time" content="2012-04-09T18:56:52+00:00" />
<meta property="article:modified_time" content="2014-08-21T08:51:23+00:00" />
<meta property="og:updated_time" content="2014-08-21T08:51:23+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.494 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417110809 121.242.198.2';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Implement two stacks in an array</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Create a data structure <em>twoStacks </em>that represents two stacks. Implementation of <em>twoStacks </em>should use only one array, i.e., both stacks should use the same array for storing elements. Following functions must be supported by <em>twoStacks</em>.<span id="more-18754"></span></p>
<p>push1(int x) &#8211;> pushes x to first stack<br />
push2(int x) &#8211;> pushes x to second stack</p>
<p>pop1() &#8211;> pops an element from first stack and return the popped element<br />
pop2() &#8211;> pops an element from second stack and return the popped element</p>
<p>Implementation of <em>twoStack </em>should be space efficient.</p>
<p><strong>Method 1 (Divide the space in two halves)</strong><br />
A simple way to implement two stacks is to divide the array in two halves and assign the half half space to two stacks, i.e., use arr[0] to arr[n/2] for stack1, and arr[n/2+1] to arr[n-1] for stack2 where arr[] is the array to be used to implement two stacks and size of array be n. </p>
<p>The problem with this method is inefficient use of array space. A stack push operation may result in stack overflow even if there is space available in arr[]. For example, say the array size is 6 and we push 3 elements to stack1 and do not push anything to second stack2.  When we push 4th element to stack1, there will be overflow even if we have space for 3 more elements in array.</p>
<p><strong>Method 2 (A space efficient implementation)</strong><br />
This method efficiently utilizes the available space.  It doesn&#8217;t cause an overflow if there is space available in arr[].  The idea is to start two stacks from two extreme corners of arr[].  stack1 starts from the leftmost element, the first element in stack1 is pushed at index 0.  The stack2 starts from the rightmost corner, the first element in stack2 is pushed at index (n-1).  Both stacks grow (or shrink) in opposite direction.  To check for overflow, all we need to check is for space between top elements of both stacks. This check is highlighted in the below code.</p>
<pre class="brush: cpp; highlight: [24,40]; title: ; notranslate" title="">
#include&lt;iostream&gt;
#include&lt;stdlib.h&gt;

using namespace std;

class twoStacks
{
    int *arr;
    int size;
    int top1, top2;
public:
   twoStacks(int n)  // constructor
   {
       size = n;
       arr = new int[n];
       top1 = -1;
       top2 = size;
   }

   // Method to push an element x to stack1
   void push1(int x)
   {
       // There is at least one empty space for new element
       if (top1 &lt; top2 - 1)
       {
           top1++;
           arr[top1] = x;
       }
       else
       {
           cout &lt;&lt; &quot;Stack Overflow&quot;;
           exit(1);
       }
   }

   // Method to push an element x to stack2
   void push2(int x)
   {
       // There is at least one empty space for new element
       if (top1 &lt; top2 - 1)
       {
           top2--;
           arr[top2] = x;
       }
       else
       {
           cout &lt;&lt; &quot;Stack Overflow&quot;;
           exit(1);
       }
   }

   // Method to pop an element from first stack
   int pop1()
   {
       if (top1 &gt;= 0 )
       {
          int x = arr[top1];
          top1--;
          return x;
       }
       else
       {
           cout &lt;&lt; &quot;Stack UnderFlow&quot;;
           exit(1);
       }
   }

   // Method to pop an element from second stack
   int pop2()
   {
       if (top2 &lt; size)
       {
          int x = arr[top2];
          top2++;
          return x;
       }
       else
       {
           cout &lt;&lt; &quot;Stack UnderFlow&quot;;
           exit(1);
       }
   }
};


/* Driver program to test twStacks class */
int main()
{
    twoStacks ts(5);
    ts.push1(5);
    ts.push2(10);
    ts.push2(15);
    ts.push1(11);
    ts.push2(7);
    cout &lt;&lt; &quot;Popped element from stack1 is &quot; &lt;&lt; ts.pop1();
    ts.push2(40);
    cout &lt;&lt; &quot;\nPopped element from stack2 is &quot; &lt;&lt; ts.pop2();
    return 0;
}
</pre>
<p>Output:</p>
<pre>
  Popped element from stack1 is 11
  Popped element from stack2 is 40
</pre>
<p>Time complexity of all 4 operations of <em>twoStack </em> is O(1).<br />
We will extend to 3 stacks in an array in a separate post.</p>
<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. </p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array-set-2-expected-linear-time/" title="K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)">K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)</a></li><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array/" title="K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1">K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1</a></li><li><a href="http://www.geeksforgeeks.org/time-complexity-insertion-sort-inversions/" title="Time complexity of insertion sort when there are O(n) inversions?">Time complexity of insertion sort when there are O(n) inversions?</a></li><li><a href="http://www.geeksforgeeks.org/check-two-given-sets-disjoint/" title="How to check if two given sets are disjoint?">How to check if two given sets are disjoint?</a></li><li><a href="http://www.geeksforgeeks.org/minimum-number-platforms-required-railwaybus-station/" title="Minimum Number of Platforms Required for a Railway/Bus Station">Minimum Number of Platforms Required for a Railway/Bus Station</a></li><li><a href="http://www.geeksforgeeks.org/given-two-sorted-arrays-number-x-find-pair-whose-sum-closest-x/" title="Find the closest pair from two sorted arrays">Find the closest pair from two sorted arrays</a></li><li><a href="http://www.geeksforgeeks.org/print-elements-sorted-order-row-column-wise-sorted-matrix/" title="Print all elements in sorted order from row and column wise sorted matrix">Print all elements in sorted order from row and column wise sorted matrix</a></li><li><a href="http://www.geeksforgeeks.org/length-largest-subarray-contiguous-elements-set-1/" title="Length of the largest subarray with contiguous elements | Set 1">Length of the largest subarray with contiguous elements | Set 1</a></li></ul>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/stack/" rel="tag">stack</a></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fimplement-two-stacks-in-an-array%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/implement-two-stacks-in-an-array/" data-text="Implement two stacks in an array" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/implement-two-stacks-in-an-array/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-31626">
        <div id="dsq-comment-header-31626" class="dsq-comment-header">
            <cite id="dsq-cite-31626">
                <span id="dsq-author-user-31626">Arulmozhi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31626" class="dsq-comment-body">
            <div id="dsq-comment-message-31626" class="dsq-comment-message"><p>how about storing elements alternately. This will implement 2 stacks in a array.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-31698">
        <div id="dsq-comment-header-31698" class="dsq-comment-header">
            <cite id="dsq-cite-31698">
                <span id="dsq-author-user-31698">?? ??</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31698" class="dsq-comment-body">
            <div id="dsq-comment-message-31698" class="dsq-comment-message"><p>With the additional restriction that neither stack should overflow unless the total number of elements is n, your idea wouldn&#8217;t work, but if not, then it is okay.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-abhishek08aug even thread-odd thread-alt depth-1" id="dsq-comment-17668">
        <div id="dsq-comment-header-17668" class="dsq-comment-header">
            <cite id="dsq-cite-17668">
                <span id="dsq-author-user-17668">abhishek08aug</span>
            </cite>
        </div>
        <div id="dsq-comment-body-17668" class="dsq-comment-body">
            <div id="dsq-comment-message-17668" class="dsq-comment-message"><pre> <code language="C">
#include&lt;stdio.h&gt;

struct two_stacks {
  int first_stack_top;
  int second_stack_top;
  int size;
  int * array;
};

void push(struct two_stacks * ts, int insert_value, int stack_num) {
  if(stack_num==1) {
    if(ts-&gt;first_stack_top+1==ts-&gt;second_stack_top) {
      printf(&quot;ERROR: two stack array full! can't have any more elements!\n&quot;);
      return;
    } else {
        ts-&gt;first_stack_top++;
        ts-&gt;array[ts-&gt;first_stack_top]=insert_value;
    }
  } else if(stack_num==2) {
    if(ts-&gt;second_stack_top-1==ts-&gt;first_stack_top) {
      printf(&quot;ERROR: two stack array full! can't have any more elements!\n&quot;);
      return;
    } else {
        ts-&gt;second_stack_top--;
        ts-&gt;array[ts-&gt;second_stack_top]=insert_value;
    }
  }
}

int pop(struct two_stacks * ts, int stack_num) {
  int popped_element;
  if(stack_num==1) {
    if(ts-&gt;first_stack_top==-1) {
      printf(&quot;ERROR: first two stack array empty! can't pop an element!\n&quot;);
      return -999;
    } else {
        popped_element=ts-&gt;array[ts-&gt;first_stack_top];
        ts-&gt;array[ts-&gt;first_stack_top]=-999;
        ts-&gt;first_stack_top--;
        return popped_element;
    }
  } else if(stack_num==2) {
    if(ts-&gt;second_stack_top==ts-&gt;size) {
      printf(&quot;ERROR: second two stack array empty! can't pop an element!\n&quot;);
      return -999;
    } else {
        popped_element=ts-&gt;array[ts-&gt;second_stack_top];
        ts-&gt;array[ts-&gt;second_stack_top]=-999;
        ts-&gt;second_stack_top++;
        return popped_element;
    }
  }  
}
 
int main(){
  struct two_stacks ts;
  ts.size=10;
  ts.array=(int *)calloc(sizeof(int), ts.size);
  ts.first_stack_top=-1;
  ts.second_stack_top=ts.size;
  push(&amp;ts, 8, 1);
  pop(&amp;ts, 2);
  pop(&amp;ts, 1);
  push(&amp;ts, 8, 2);  
  pop(&amp;ts, 2);
  return 0;
}
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-15637">
        <div id="dsq-comment-header-15637" class="dsq-comment-header">
            <cite id="dsq-cite-15637">
                <span id="dsq-author-user-15637">Ganesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15637" class="dsq-comment-body">
            <div id="dsq-comment-message-15637" class="dsq-comment-message"><p>You can find java code here:</p>
<p>/**<br />
 * Create a data structure twoStacks that represents two stacks. Implementation of twoStacks should use only one array,<br />
 * i.e., both stacks should use the same array for storing elements.<br />
 *<br />
 * @author GAPIITD<br />
 *<br />
 */<br />
public class TwoStack {<br />
	private int stack[];<br />
	private int top1, top2;</p>
<p>	TwoStack() {<br />
		this(10);<br />
	}</p>
<p>	TwoStack(int size) {<br />
		stack = new int[size];<br />
		top1 = -1;<br />
		top2 = size;<br />
	}</p>
<p>	public void push1(int n) {<br />
		if (top1 + 1 &lt; stack.length &amp;&amp; top1 + 1 != top2)<br />
			stack[++top1] = n;<br />
		else System.out.println(&quot;STACK1 FULL&quot;);<br />
	}</p>
<p>	public void push2(int n) {<br />
		if (top2 &#8211; 1 &gt; 0 &amp;&amp; top2 &#8211; 1 != top1)<br />
			stack[&#8211;top2] = n;<br />
		else System.out.println(&quot;STACK2 FULL&quot;);<br />
	}</p>
<p>	public int pop1() {<br />
		if (top1 == -1) System.out.println(&quot;STACK1 is empty&quot;);<br />
		else return stack[top1];<br />
		return -1111;<br />
	}</p>
<p>	public int pop2() {<br />
		if (top2 == stack.length) System.out.println(&quot;STACK2 is empty&quot;);<br />
		else return stack[top2];<br />
		return -1111;<br />
	}</p>
<p>	public static void main(String[] args) {<br />
		TwoStack ts = new TwoStack(5);<br />
		ts.push1(1);<br />
		ts.push1(2);<br />
		ts.push1(3);<br />
		ts.push2(10);<br />
		ts.push2(9);<br />
		ts.push2(8);<br />
		System.out.println(ts.pop1());<br />
		System.out.println(ts.pop2());<br />
	}<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-14989">
        <div id="dsq-comment-header-14989" class="dsq-comment-header">
            <cite id="dsq-cite-14989">
                <span id="dsq-author-user-14989">abhay</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14989" class="dsq-comment-body">
            <div id="dsq-comment-message-14989" class="dsq-comment-message"><p>using an array to store the even and odd numbers&#8230;</p>
<pre> <code language="C">
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;

 

struct node
{
    int data;
    struct node* next;
};
 

void insertbeg(int value,struct node **head)
{
struct node *temp=malloc(sizeof(struct node));
temp-&gt;data=value;
temp-&gt;next=(*head);
(*head)=temp;
}

void display(struct node *head)
{
if(head==NULL)
{
printf(&quot;Empty list&quot;);
}
struct node *temp=head;
while(temp!=NULL)
{
printf(&quot;%d\t&quot;,temp-&gt;data);
temp=temp-&gt;next;
}
}

void evenodd(struct node **head,int len)
{
int even[len],ec,oc,i;
int odd[len];
struct node *temp=*head;
ec=oc=0;
while(temp!=NULL)
	{
		if((temp-&gt;data)%2==0)
		{
		even[ec]=temp-&gt;data;
		ec++;
		}
		else
		{
		odd[oc]=temp-&gt;data;
		oc++;
		}
		temp=temp-&gt;next;
	}


//now insert in list form even odd arrays
temp=*head;
ec=ec-1;
oc=oc-1;
while(ec&gt;=0 &amp;&amp; temp!=NULL)
{
temp-&gt;data=even[ec];
ec--;
temp=temp-&gt;next;
}

while(oc&gt;=0 &amp;&amp; temp!=NULL)
{
temp-&gt;data=odd[oc];
oc--;
temp=temp-&gt;next;
}
}


int length(struct node *head)
{
struct node *temp=head;
int count=0;
if(temp==NULL)
{
return 0;
}

while(temp!=NULL)
{
count++;
temp=temp-&gt;next;
}
return count;
}




int main()
{
struct node *list=NULL;
insertbeg(1,&amp;list);
insertbeg(2,&amp;list);
insertbeg(3,&amp;list);
insertbeg(4,&amp;list);
insertbeg(5,&amp;list);
insertbeg(6,&amp;list);
insertbeg(22,&amp;list);
insertbeg(213,&amp;list);
insertbeg(453,&amp;list);
insertbeg(657,&amp;list);
insertbeg(66,&amp;list);
insertbeg(88,&amp;list);
insertbeg(11,&amp;list);
insertbeg(14,&amp;list);
insertbeg(18,&amp;list);
insertbeg(33,&amp;list);
insertbeg(999,&amp;list);
insertbeg(222,&amp;list);
printf(&quot;Original List:\n&quot;);
display(list);

printf(&quot;\nSegregated List:\n&quot;);
evenodd(&amp;list,length(list));
display(list);
return 0;
}


</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-14974">
        <div id="dsq-comment-header-14974" class="dsq-comment-header">
            <cite id="dsq-cite-14974">
                <span id="dsq-author-user-14974">Geek</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14974" class="dsq-comment-body">
            <div id="dsq-comment-message-14974" class="dsq-comment-message"><p>Even Better Memory optimized solution..</p>
<p>1) push everything from start<br />
2) Create link lists inside array..<br />
say input order:<br />
which stack it should go<br />
stack 1  : 10<br />
stack 2  : 12<br />
stack 2  : 16<br />
stack 1  : 1<br />
stack 2  :   23<br />
answer is: </p>
<pre>
        ______________
       |     |       |
10    12    16   1  23
|________________1
</pre>
<p>Always Maintain 4 pointers<br />
stack1Head, stack1Tail<br />
stack1Head stack2Tail</p>
<p>obvs you can get idea about popping.</p>
<p>/* Paste your code here (You may delete these lines if not writing code) */</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-14975">
        <div id="dsq-comment-header-14975" class="dsq-comment-header">
            <cite id="dsq-cite-14975">
                <span id="dsq-author-user-14975">Geek</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14975" class="dsq-comment-body">
            <div id="dsq-comment-message-14975" class="dsq-comment-message"><p>/*<br />
______________<br />
|     |     |<br />
10 12 16 1 23<br />
|________1</p>
<p>*/</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-14976">
        <div id="dsq-comment-header-14976" class="dsq-comment-header">
            <cite id="dsq-cite-14976">
                <span id="dsq-author-user-14976">Geek</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14976" class="dsq-comment-body">
            <div id="dsq-comment-message-14976" class="dsq-comment-message"><p>Not able to fix this indentation&#8230;  </p>
<p>lists will be</p>
<p>12-&gt;16-&gt;23</p>
<p>16-&gt;1</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-8395">
        <div id="dsq-comment-header-8395" class="dsq-comment-header">
            <cite id="dsq-cite-8395">
                <span id="dsq-author-user-8395">Thirunavukkarasu</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8395" class="dsq-comment-body">
            <div id="dsq-comment-message-8395" class="dsq-comment-message"><pre> <code language="C">
#include&lt;stdio.h&gt;
int arr[10];
int top1=-1,top2=sizeof(arr)/sizeof(arr[0]);
void push1(int data)
{
	if(top1+1==top2)
	{ printf(&quot;Stack is full &quot;); return;}
	else
	{
		top1++;
		arr[top1]=data;
	}
}

void push2(int data)
{
	if(top1==top2-1)
	{
		printf(&quot;Stack is full &quot;); return;
	}
	else
	{
		top2--;
		arr[top2]=data;
	}
}

void pop1()
{
	if(top1==-1)
	{	printf(&quot;Stack is empty&quot;); return; }
	else
	{
		arr[top1]=0;
		top1--;
	
	}
}

void pop2()
{
	if(top2==sizeof(arr)/sizeof(arr[0]))
	{	printf(&quot;Stack is empty&quot;); return; }
	else
	{
		arr[top2]=0;
		top1++;
	}
}


int main()
{
	int i;
	push1(2);
	push2(3);
	push1(4);
	pop1();
	pop2();
	for(i=0;i&lt;sizeof(arr)/sizeof(arr[0]);i++)
		printf(&quot;%d &quot;,arr[i]);	
}

</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-8103">
        <div id="dsq-comment-header-8103" class="dsq-comment-header">
            <cite id="dsq-cite-8103">
                <span id="dsq-author-user-8103">Seema</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8103" class="dsq-comment-body">
            <div id="dsq-comment-message-8103" class="dsq-comment-message"><p>Great work! Keep it on!</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-8092">
        <div id="dsq-comment-header-8092" class="dsq-comment-header">
            <cite id="dsq-cite-8092">
                <span id="dsq-author-user-8092">Krupa</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8092" class="dsq-comment-body">
            <div id="dsq-comment-message-8092" class="dsq-comment-message"><p>Making 2-stacks in the method(2) presented above is nothing but how OS  can manage the stack and heap both growing in reverse direction. Its simple solution.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-8043">
        <div id="dsq-comment-header-8043" class="dsq-comment-header">
            <cite id="dsq-cite-8043">
                <span id="dsq-author-user-8043">test</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8043" class="dsq-comment-body">
            <div id="dsq-comment-message-8043" class="dsq-comment-message"><p>test</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-8035">
        <div id="dsq-comment-header-8035" class="dsq-comment-header">
            <cite id="dsq-cite-8035">
                <span id="dsq-author-user-8035">Inderpreet Singh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8035" class="dsq-comment-body">
            <div id="dsq-comment-message-8035" class="dsq-comment-message"><p>Best Stuff. It&#8217;s very easy to understand. I tried to understand this concept many times before this post was written but i could not. After reading this post, i understood it . Thanks Man and Thanks GeeksforGeeks.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-suhas6ue odd alt thread-even depth-1" id="dsq-comment-8026">
        <div id="dsq-comment-header-8026" class="dsq-comment-header">
            <cite id="dsq-cite-8026">
http://www.cse.iitb.ac.in/alumni/~suhas08/                <span id="dsq-author-user-8026">suhas meena</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8026" class="dsq-comment-body">
            <div id="dsq-comment-message-8026" class="dsq-comment-message"><p>In Second method while we do pop operation. Their is a case that while we pop stack 2 items we may pop stack 1 first item because we are not differentiating between items of two stack. Correct me if i am wrong.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-kartik even depth-2" id="dsq-comment-8028">
        <div id="dsq-comment-header-8028" class="dsq-comment-header">
            <cite id="dsq-cite-8028">
                <span id="dsq-author-user-8028">kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8028" class="dsq-comment-body">
            <div id="dsq-comment-message-8028" class="dsq-comment-message"><p>That is not possible because there are two different top variables and different conditions to check underflow.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-8022">
        <div id="dsq-comment-header-8022" class="dsq-comment-header">
            <cite id="dsq-cite-8022">
                <span id="dsq-author-user-8022">kunal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8022" class="dsq-comment-body">
            <div id="dsq-comment-message-8022" class="dsq-comment-message"><p>you people provide the best stuff to crack interview</p>
<p>keep it on <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-8019">
        <div id="dsq-comment-header-8019" class="dsq-comment-header">
            <cite id="dsq-cite-8019">
                <span id="dsq-author-user-8019">laxmi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8019" class="dsq-comment-body">
            <div id="dsq-comment-message-8019" class="dsq-comment-message"><p>like your explanation</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-8016">
        <div id="dsq-comment-header-8016" class="dsq-comment-header">
            <cite id="dsq-cite-8016">
                <span id="dsq-author-user-8016">Other Neo</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8016" class="dsq-comment-body">
            <div id="dsq-comment-message-8016" class="dsq-comment-message"><p>The code look amateur &#8220;C&#8221; code written at the very best&#8230;. </p>
<p>1. push1 and push2 do not return the error/exception to the caller<br />
2. Big Blunder in terms of EXIT(0)<br />
3. Duplicate code with respect to push1 &amp; push2 and pop1 and pop2. Ideally push and pop should take the parameter about the stack on which to operate</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-kartik even depth-2" id="dsq-comment-8017">
        <div id="dsq-comment-header-8017" class="dsq-comment-header">
            <cite id="dsq-cite-8017">
                <span id="dsq-author-user-8017">kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8017" class="dsq-comment-body">
            <div id="dsq-comment-message-8017" class="dsq-comment-message"><p>@Other Neo: Thanks for your inputs. The coding is done this way to keep code small and simple. Could you provide more details or reference about the problem with exit(0).</p>
<p>Also, all code in push1() and push2() not duplicatae, it&#8217;s just the overflow handling part. The push1() operations does top1++ and push2() does top1&#8211;. Similarly pop1() and pop2() are not duplicate.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-8018">
        <div id="dsq-comment-header-8018" class="dsq-comment-header">
            <cite id="dsq-cite-8018">
                <span id="dsq-author-user-8018">Other Neo</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8018" class="dsq-comment-body">
            <div id="dsq-comment-message-8018" class="dsq-comment-message"><p>@Kartik &#8220;exit(0)&#8221; are old rudimentary ways for error handling done by really old code. exit(0) in any code just shows the arrogance of the code / programmer. It breaks all the call chain (behaving more like goto) and closes the program without any possibility of recovery. </p>
<p>In your code the instead of EXIT(0) you could have simply written RETURN FALSE and thus provide the opportunity to the caller of the function (main) to deal with the error. </p>
<p>PUSH functions are exact duplicates of each other if we ignore the comparison and increment/decrement; and the same goes with POP. For illustration if the implementation was to change from a static array to std::vector, you would need to change code twice for POP and twice for PUSH. </p>
<p>If you are still not convinced let me know and I will rewrite the whole code.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-4" id="dsq-comment-8056">
        <div id="dsq-comment-header-8056" class="dsq-comment-header">
            <cite id="dsq-cite-8056">
                <span id="dsq-author-user-8056">lalor</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8056" class="dsq-comment-body">
            <div id="dsq-comment-message-8056" class="dsq-comment-message"><p>I hope you give the whole code.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/implement-two-stacks-in-an-array/';
var disqus_identifier = '18754 http://www.geeksforgeeks.org/?p=18754';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Implement two stacks in an array";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.194 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:23:29 -->

<!-- Compression = gzip -->
<!-- super cache -->