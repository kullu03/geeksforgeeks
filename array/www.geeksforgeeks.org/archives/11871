<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Searching for Patterns | Set 1 (Naive Pattern Searching) - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/searching-for-patterns-set-1-naive-pattern-searching/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Searching for Patterns | Set 1 (Naive Pattern Searching) - GeeksforGeeks" />
<meta property="og:description" content="Given a text txt[0..n-1] and a pattern pat[0..m-1], write a function search(char pat[], char txt[]) that prints all occurrences of pat[] in txt[]. You may assume that n &gt; m. Examples: 1) Input: txt[] = &quot;THIS IS A TEST TEXT&quot; pat[] = &quot;TEST&quot; Output: Pattern found at index 10 2) Input: txt[] = &quot;AABAACAADAABAAABAA&quot; pat[] &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/searching-for-patterns-set-1-naive-pattern-searching/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:tag" content="Pattern Searching" />
<meta property="article:section" content="Strings" />
<meta property="article:published_time" content="2011-04-01T18:32:54+00:00" />
<meta property="article:modified_time" content="2012-06-16T00:15:09+00:00" />
<meta property="og:updated_time" content="2012-06-16T00:15:09+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.491 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417111132 14.139.243.114';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Searching for Patterns | Set 1 (Naive Pattern Searching)</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Given a text <em>txt[0..n-1] </em>and a pattern <em>pat[0..m-1]</em>, write a function <em>search(char pat[], char txt[])</em> that prints all occurrences of <em>pat[] </em>in <em>txt[]</em>. You may assume that <em>n > m</em>. <span id="more-11871"></span></p>
<p>Examples:<br />
<strong>1)</strong> Input:</p>
<pre>
  txt[] =  "THIS IS A TEST TEXT"
  pat[] = "TEST"
</pre>
<p>Output:</p>
<pre>Pattern found at index 10</pre>
<p><strong>2)</strong> Input:</p>
<pre>
  txt[] =  "AABAACAADAABAAABAA"
  pat[] = "AABA"
</pre>
<p>Output:</p>
<pre>
   Pattern found at index 0
   Pattern found at index 9
   Pattern found at index 13
</pre>
<p>Pattern searching is an important problem in computer science. When we do search for a string in notepad/word file or browser or database, pattern searching algorithms are used to show the search results. </p>
<p><strong>Naive Pattern Searching:</strong><br />
Slide the pattern over text one by one and check for a match. If a match is found, then slides by 1 again to check for subsequent matches. </p>
<pre class="brush: cpp; title: ; notranslate" title="">#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
void search(char *pat, char *txt)
{
    int M = strlen(pat);
    int N = strlen(txt);
 
    /* A loop to slide pat[] one by one */
    for (int i = 0; i &lt;= N - M; i++)
    {
        int j;
 
        /* For current index i, check for pattern match */
        for (j = 0; j &lt; M; j++)
        {
            if (txt[i+j] != pat[j])
                break;
        }
        if (j == M)  // if pat[0...M-1] = txt[i, i+1, ...i+M-1]
        {
           printf(&quot;Pattern found at index %d \n&quot;, i);
        }
    }
}
 
/* Driver program to test above function */
int main()
{
   char *txt = &quot;AABAACAADAABAAABAA&quot;;
   char *pat = &quot;AABA&quot;;
   search(pat, txt);
   getchar();
   return 0;
}
</pre>
<p><strong>What is the best case?</strong><br />
The best case occurs when the first character of the pattern is not present in text at all.</p>
<pre class="brush: cpp; title: ; notranslate" title="">  txt[]  = &quot;AABCCAADDEE&quot;
  pat[] = &quot;FAA&quot;</pre>
<p>The number of comparisons in best case is O(n). </p>
<p><strong>What is the worst case ?</strong><br />
The worst case of Naive Pattern Searching occurs in following scenarios.<br />
1) When all characters of the text and pattern are same. </p>
<pre class="brush: cpp; title: ; notranslate" title="">  txt[] = &quot;AAAAAAAAAAAAAAAAAA&quot;
  pat[] = &quot;AAAAA&quot;.</pre>
<p>2) Worst case also occurs when only the last character is different.</p>
<pre class="brush: cpp; title: ; notranslate" title="">  txt[] = &quot;AAAAAAAAAAAAAAAAAB&quot;
  pat[] = &quot;AAAAB&quot;</pre>
<p>Number of comparisons in worst case is O(m*(n-m+1)). Although strings which have repeated characters are not likely to appear in English text, they may well occur in other applications (for example, in binary texts). The KMP matching algorithm improves the worst case to O(n).  We will be covering KMP in the next post.  Also, we will be writing more posts to cover all pattern searching algorithms and data structures.  </p>
<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-5-longest-common-substring-2/" title="Suffix Tree Application 5 &#8211; Longest Common Substring">Suffix Tree Application 5 &#8211; Longest Common Substring</a></li><li><a href="http://www.geeksforgeeks.org/generalized-suffix-tree-1/" title="Generalized Suffix Tree 1">Generalized Suffix Tree 1</a></li><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-4-build-linear-time-suffix-array/" title="Suffix Tree Application 4 &#8211; Build Linear Time Suffix Array">Suffix Tree Application 4 &#8211; Build Linear Time Suffix Array</a></li><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-3-longest-repeated-substring/" title="Suffix Tree Application 3 &#8211; Longest Repeated Substring">Suffix Tree Application 3 &#8211; Longest Repeated Substring</a></li><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-2-searching-all-patterns/" title="Suffix Tree Application 2 &#8211; Searching All Patterns">Suffix Tree Application 2 &#8211; Searching All Patterns</a></li><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-1-substring-check/" title="Suffix Tree Application 1 &#8211; Substring Check">Suffix Tree Application 1 &#8211; Substring Check</a></li><li><a href="http://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-6/" title="Ukkonen&#8217;s Suffix Tree Construction &#8211; Part 6">Ukkonen&#8217;s Suffix Tree Construction &#8211; Part 6</a></li><li><a href="http://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-5/" title="Ukkonen&#8217;s Suffix Tree Construction &#8211; Part 5">Ukkonen&#8217;s Suffix Tree Construction &#8211; Part 5</a></li></ul>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/pattern-searching/" rel="tag">Pattern Searching</a></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fsearching-for-patterns-set-1-naive-pattern-searching%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/searching-for-patterns-set-1-naive-pattern-searching/" data-text="Searching for Patterns | Set 1 (Naive Pattern Searching)" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/searching-for-patterns-set-1-naive-pattern-searching/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-31650">
        <div id="dsq-comment-header-31650" class="dsq-comment-header">
            <cite id="dsq-cite-31650">
                <span id="dsq-author-user-31650">nani</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31650" class="dsq-comment-body">
            <div id="dsq-comment-message-31650" class="dsq-comment-message"><p>what could be the average case complexity of this algorithm</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-29415">
        <div id="dsq-comment-header-29415" class="dsq-comment-header">
            <cite id="dsq-cite-29415">
                <span id="dsq-author-user-29415">pappu</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29415" class="dsq-comment-body">
            <div id="dsq-comment-message-29415" class="dsq-comment-message"><p>thanks for the code&#8230;</p>
<p>one doubt:: In the &#8220;WHAT IS THE WORST CASE?&#8221; section, how is the first example a worst case?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-29615">
        <div id="dsq-comment-header-29615" class="dsq-comment-header">
            <cite id="dsq-cite-29615">
                <span id="dsq-author-user-29615">Dynamite</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29615" class="dsq-comment-body">
            <div id="dsq-comment-message-29615" class="dsq-comment-message"><p>In the first example, you are doing  comparison of (n-m+1) substrings in the text with the pattern. Each comparison continues for m characters in the pattern, hence it is the worst case. Consider the case when the pattern was BBBBB instead of AAAAA, in that case you would have rejected all of n-m+1 subtrings in the text in the very first comparison with the pattern, as compared to m comparisons in case of AAAAA. Hence the first example is worst case</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-22748">
        <div id="dsq-comment-header-22748" class="dsq-comment-header">
            <cite id="dsq-cite-22748">
                <span id="dsq-author-user-22748">manshi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22748" class="dsq-comment-body">
            <div id="dsq-comment-message-22748" class="dsq-comment-message"><p>The given code has a flaw:<br />
Try to find the pattern &#8220;ch&#8221; in string &#8220;aaaaaaaach&#8221;</p>
<p>Output: pattern doesn&#8217;t exist</p>
<p>Correction:<br />
/* instead of N-M, allow the loop till end of string */<br />
    for (int i = 0; i &lt;= N ; i++)<br />
    {<br />
        int j;</p>
<p>        /* For current index i, check for pattern match */<br />
        for (j = 0; j &lt; M; j++)<br />
        {<br />
            if (txt[i+j] != pat[j])<br />
                break;<br />
        }<br />
        if (j == M)  // if pat[0&#8230;M-1] = txt[i, i+1, &#8230;i+M-1]<br />
        {<br />
           printf(&quot;Pattern found at index %d \n&quot;, i);<br />
        }<br />
    }</p>
<p>Please correct me if I am wrong</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-27100">
        <div id="dsq-comment-header-27100" class="dsq-comment-header">
            <cite id="dsq-cite-27100">
                <span id="dsq-author-user-27100">Shiwakant Bharti</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27100" class="dsq-comment-body">
            <div id="dsq-comment-message-27100" class="dsq-comment-message"><p>My adaptation of the given code in Java actually works. Please check your logic. Consider this scenario:<br />
i = N, j= 1, txt[i+j] will actually lead to ArrayIndexOutOfBoundsException in Java and uncertain behavior in C/C++.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-27423">
        <div id="dsq-comment-header-27423" class="dsq-comment-header">
            <cite id="dsq-cite-27423">
                <span id="dsq-author-user-27423">Chirag Patel</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27423" class="dsq-comment-body">
            <div id="dsq-comment-message-27423" class="dsq-comment-message"><p>it works k!!The original explained program works k with yr input!!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-20800">
        <div id="dsq-comment-header-20800" class="dsq-comment-header">
            <cite id="dsq-cite-20800">
                <span id="dsq-author-user-20800">gautam</span>
            </cite>
        </div>
        <div id="dsq-comment-body-20800" class="dsq-comment-body">
            <div id="dsq-comment-message-20800" class="dsq-comment-message"><p>public HashSet&lt;Integer&gt; naivePatternSearch(String pattern, String string) {<br />
		HashSet&lt;Integer&gt; index = new HashSet&lt;Integer&gt;();<br />
		for (int j = 0; j &lt; string.length(); j++) {<br />
			for (int i = 0; i &lt; pattern.length(); i++) {<br />
				if (pattern.charAt(i) == string.charAt(j+i)) {<br />
					if(i==pattern.length()-1){<br />
						index.add(j);<br />
					}<br />
				} else {<br />
					break;<br />
				}<br />
			}<br />
		}<br />
		return index;<br />
	}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-abhishek08aug odd alt thread-even depth-1" id="dsq-comment-17977">
        <div id="dsq-comment-header-17977" class="dsq-comment-header">
            <cite id="dsq-cite-17977">
                <span id="dsq-author-user-17977">abhishek08aug</span>
            </cite>
        </div>
        <div id="dsq-comment-body-17977" class="dsq-comment-body">
            <div id="dsq-comment-message-17977" class="dsq-comment-message"><pre> <code language="C">
#include&lt;stdio.h&gt;
#include&lt;string.h&gt;

void search_pattern(char * str, char * pattern) {
  int str_len=strlen(str);
  int pattern_len=strlen(pattern);
  int i, j;
  for(i=0; i&lt;str_len-pattern_len; i++) {
    for(j=0; j&lt;pattern_len; j++) {
      if(*(str+i+j)!=*(pattern+j)) {
        break;
      }
    }
    if(j==pattern_len) {
      printf(&quot;Pattern found at index: %d\n&quot;, i);
    }
  }
}

int main() {
  char * str=&quot;AABAACAADAABAAABAA&quot;;
  char * pattern=&quot;AABA&quot;;
  search_pattern(str, pattern);
  return 0;
}
</code> </pre>
<p>Pattern found at index: 0<br />
Pattern found at index: 9<br />
Pattern found at index: 13</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-meap4aa even thread-odd thread-alt depth-1" id="dsq-comment-17612">
        <div id="dsq-comment-header-17612" class="dsq-comment-header">
            <cite id="dsq-cite-17612">
                <span id="dsq-author-user-17612">meap4aa</span>
            </cite>
        </div>
        <div id="dsq-comment-body-17612" class="dsq-comment-body">
            <div id="dsq-comment-message-17612" class="dsq-comment-message"><p>A similar Approach through Recursion: </p>
<pre> <code language="C">
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

int my_cmp(char* a,char* b,int i,int n);

int my_cmp(char* a,char* b,int i,int n)
{
		if(*(a+i)==*(b+(strlen(b)-n)))
		{
			//printf(&quot;\nChecking i = %d &quot;,i);
			//printf(&quot;\nNow n = %d &quot;,n);
		if(n==1)
		return 1;
		my_cmp(a,b,++i,--n);
		}
		else
		{
		//printf(&quot;\n Gone at i = %d&quot;,i);
		
		/* This Occurs When A Mismatch is Found */
		return 0;
		}
}

int main()
{
	char str[]=&quot;AABAACAADAABAAABAA&quot;;
	char test[]=&quot;AABA&quot;;
	int chk,i=0,x=0,count=0;
	
	chk=strlen(str);
	//printf(&quot;\nLen: %d&quot;,chk);
	
	for(i=0;i&lt;chk;i++)
	{
		//printf(&quot;\n\n New Started: with i = %d&quot;,i);
		x=my_cmp(str,test,i,strlen(test));
		if(x==1)
		{
			count++;
			printf(&quot;\n %d. Found at Index : %d &quot;,count,i);
		}
		//printf(&quot;\n Value of X is = %d&quot;,x);
	}
		
	printf(&quot;\n\n\nCount = %d\n&quot;,count);
	return 0;
}

</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-15259">
        <div id="dsq-comment-header-15259" class="dsq-comment-header">
            <cite id="dsq-cite-15259">
                <span id="dsq-author-user-15259">alien</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15259" class="dsq-comment-body">
            <div id="dsq-comment-message-15259" class="dsq-comment-message"><p>1 more approach could be as below:</p>
<p>bool isSubstring(char* src, char* pattern) {<br />
    int i=0,j=0, flag=0;<br />
    int lenp, lens;<br />
    for(i=0;*src+!=&#8221;;i++);<br />
    lens = &#8211;i;<br />
    for(i=0;*pattern+i!=&#8221;;i++);<br />
    lenp = &#8211;i;<br />
    i=0;</p>
<p>    while((*(src+i)) ! = &#8221;)<br />
    {</p>
<p>        if(*(src+i) == *(pattern+j))<br />
        {<br />
            j++;<br />
            flag++;<br />
            if( flag == lenp)<br />
            {<br />
                break;<br />
            }<br />
        }<br />
        else<br />
        {<br />
            flag =0;<br />
            j=0;<br />
        }<br />
         i++;<br />
    }<br />
    if(flag == lenp)<br />
    {<br />
        return 1;<br />
    }<br />
    else return 0;<br />
}</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-yatendragoel even thread-odd thread-alt depth-1" id="dsq-comment-14821">
        <div id="dsq-comment-header-14821" class="dsq-comment-header">
            <cite id="dsq-cite-14821">
                <span id="dsq-author-user-14821">Yatendra Goel</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14821" class="dsq-comment-body">
            <div id="dsq-comment-message-14821" class="dsq-comment-message"><p>The above algo is very similar to previous &#8220;Naive Pattern Search&#8221; algo but as this one uses &#8216;while&#8217; loop while the previous one uses &#8216;for&#8217; loop, so novice programmers might have to spend few extra minutes to realize that this is the same algo as previous EXCEPT FEW LINES.</p>
<p>So I have written the above algo again using &#8216;for&#8217; loop which is same as previous algo (previous &#8220;Naive Pattern Search&#8221; algo) except two lines (added comment on those two lines) so that it&#8217;s very easy to see the difference between two.</p>
<pre> <code language="C">
private void printPatternIndices(char[] text, char[] pattern) {

		for (int i = 0; i &lt; text.length - pattern.length + 1; i++) {

			int j;
			for (j = 0; j &lt; pattern.length; j++) {
				if (text[i + j] != pattern[j]) {
					break;
				}
			}

			if (j == pattern.length)
				System.out.println(&quot;Pattern found at index &quot; + i);

			/**
			 * below two lines are the extra lines added to our original NaivePatternSearch algorithm
			 */
			if (j!=0)
				i += j-1;
			
		}
	}

</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-3716">
        <div id="dsq-comment-header-3716" class="dsq-comment-header">
            <cite id="dsq-cite-3716">
                <span id="dsq-author-user-3716">raman</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3716" class="dsq-comment-body">
            <div id="dsq-comment-message-3716" class="dsq-comment-message"><p>@geeksforgeeks plz post KMP, rabin karp string searching algorithm</p>
<p>ASAP , i am looking forward ..Plese Keep in Posting Such</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-33271">
        <div id="dsq-comment-header-33271" class="dsq-comment-header">
            <cite id="dsq-cite-33271">
                <span id="dsq-author-user-33271">Vinay</span>
            </cite>
        </div>
        <div id="dsq-comment-body-33271" class="dsq-comment-body">
            <div id="dsq-comment-message-33271" class="dsq-comment-message"><p>1,1,2,3,4,5,6,2,2,2,5,3,3,2,2,1,5,5,5,5,4,4,4,1,2,2,2,2,6,6,2,2,1,1,2,2</p>
<p>Can anyone help me to find out how many times a sequence number (like twice 2,2 or  thrice 2,2,2 or four times 2,2,2,2) are repeated in any programming language?</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/searching-for-patterns-set-1-naive-pattern-searching/';
var disqus_identifier = '11871 http://geeksforgeeks.org/?p=11871';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Searching for Patterns | Set 1 (Naive Pattern Searching)";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.194 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:28:52 -->

<!-- Compression = gzip -->
<!-- super cache -->