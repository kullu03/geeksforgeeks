<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Find the two repeating elements in a given array - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/find-the-two-repeating-elements-in-a-given-array/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Find the two repeating elements in a given array - GeeksforGeeks" />
<meta property="og:description" content="You are given an array of n+2 elements. All elements of the array are in range 1 to n. And all elements occur once except two numbers which occur twice. Find the two repeating numbers. For example, array = {4, 2, 4, 5, 2, 3, 1} and n = 5 The above array has n &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/find-the-two-repeating-elements-in-a-given-array/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:section" content="Arrays" />
<meta property="article:published_time" content="2010-06-09T11:47:06+00:00" />
<meta property="article:modified_time" content="2012-05-17T22:37:55+00:00" />
<meta property="og:updated_time" content="2012-05-17T22:37:55+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.536 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417111464 210.212.53.139 172.19.11.169';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Find the two repeating elements in a given array</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>You are given an array of n+2 elements. All elements of the array are in range 1 to n. And all elements occur once except two numbers which occur twice. Find the two repeating numbers. <span id="more-7953"></span></p>
<p>For example, array = {4, 2, 4, 5, 2, 3, 1} and n = 5</p>
<p>The above array has n + 2 = 7 elements with all elements occurring once except 2 and 4 which occur twice. So the output should be 4 2.</p>
<p><strong>Method 1 (Basic)</strong><br />
Use two loops. In the outer loop, pick elements one by one and count the number of occurrences of the picked element in the inner loop. </p>
<p>This method doesn&#8217;t use the other useful data provided in questions like range of numbers is between 1 to n and there are only two repeating elements.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
void printRepeating(int arr[], int size)
{
  int i, j;
  printf(&quot; Repeating elements are &quot;);
  for(i = 0; i &lt; size; i++)
    for(j = i+1; j &lt; size; j++)
      if(arr[i] == arr[j])
        printf(&quot; %d &quot;, arr[i]);
}     

int main()
{
  int arr[] = {4, 2, 4, 5, 2, 3, 1};
  int arr_size = sizeof(arr)/sizeof(arr[0]);  
  printRepeating(arr, arr_size);
  getchar();
  return 0;
}
</pre>
<p>Time Complexity: O(n*n)<br />
Auxiliary Space: O(1)</p>
<p><strong>Method 2 (Use Count array)</strong><br />
Traverse the array once.  While traversing, keep track of count of all elements in the array using a temp array count[] of size n, when you see an element whose count is already set, print it as duplicate.</p>
<p>This method uses the range given in the question to restrict the size of count[], but doesn&#8217;t use the data that there are only two repeating elements.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;

void printRepeating(int arr[], int size)
{
  int *count = (int *)calloc(sizeof(int), (size - 2));
  int i;
  
  printf(&quot; Repeating elements are &quot;);
  for(i = 0; i &lt; size; i++)
  {  
    if(count[arr[i]] == 1)
      printf(&quot; %d &quot;, arr[i]);
    else
     count[arr[i]]++;
  }    
}     

int main()
{
  int arr[] = {4, 2, 4, 5, 2, 3, 1};
  int arr_size = sizeof(arr)/sizeof(arr[0]);  
  printRepeating(arr, arr_size);
  getchar();
  return 0;
}
</pre>
<p>Time Complexity: O(n)<br />
Auxiliary Space: O(n)</p>
<p><strong>Method 3 (Make two equations)</strong><br />
Let the numbers which are being repeated are X and Y. We make two equations for X and Y and the simple task left is to solve the two equations.<br />
We know the sum of integers from 1 to n is n(n+1)/2 and product is n!. We calculate the sum of input array, when this sum is subtracted from n(n+1)/2, we get X + Y because X and Y are the two numbers missing from set [1..n].  Similarly calculate product of input array,  when this product is divided from n!, we get X*Y. Given sum and product of X and Y, we can find easily out X and Y.</p>
<p>Let summation of all numbers in array be S and product be P</p>
<p>X + Y = S &#8211; n(n+1)/2<br />
XY = P/n!</p>
<p>Using above two equations, we can find out X and Y. For array = 4 2 4 5 2 3 1, we get S = 21 and P as 960.</p>
<p>X + Y = 21 &#8211; 15 = 6</p>
<p>XY = 960/5! = 8</p>
<p>X &#8211; Y = sqrt((X+Y)^2 &#8211; 4*XY) = sqrt(4) = 2</p>
<p>Using below two equations, we easily get X = (6 + 2)/2 and Y = (6-2)/2<br />
X + Y = 6<br />
X &#8211; Y = 2</p>
<p>Thanks to <a href="http://geeksforgeeks.org/forum/topic/adobe-interview-question-for-software-engineerdeveloper-about-arrays-3#post-2466">geek4u</a> for suggesting this method. As pointed by <a href="http://geeksforgeeks.org/forum/topic/adobe-interview-question-for-software-engineerdeveloper-about-arrays-3#post-2473">Beginer </a>, there can be addition and multiplication overflow problem with this approach.<br />
The methods 3 and 4 use all useful information given in the question <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;math.h&gt;

/* function to get factorial of n */
int fact(int n);

void printRepeating(int arr[], int size)
{
  int S = 0;  /* S is for sum of elements in arr[] */
  int P = 1;  /* P is for product of elements in arr[] */  
  int x,  y;   /* x and y are two repeating elements */
  int D;      /* D is for difference of x and y, i.e., x-y*/
  int n = size - 2,  i;

  /* Calculate Sum and Product of all elements in arr[] */
  for(i = 0; i &lt; size; i++)
  {
    S = S + arr[i];
    P = P*arr[i];
  }        
  
  S = S - n*(n+1)/2;  /* S is x + y now */
  P = P/fact(n);         /* P is x*y now */
  
  D = sqrt(S*S - 4*P); /* D is x - y now */
  
  x = (D + S)/2;
  y = (S - D)/2;
  
  printf(&quot;The two Repeating elements are %d &amp; %d&quot;, x, y);
}     

int fact(int n)
{
   return (n == 0)? 1 : n*fact(n-1);
}    

int main()
{
  int arr[] = {4, 2, 4, 5, 2, 3, 1};
  int arr_size = sizeof(arr)/sizeof(arr[0]);  
  printRepeating(arr, arr_size);
  getchar();
  return 0;
}
</pre>
<p>Time Complexity: O(n)<br />
Auxiliary Space: O(1)</p>
<p><strong>Method 4 (Use XOR)</strong><br />
Thanks to neophyte  for suggesting this method.<br />
The approach used here is similar to method 2 of <a href="http://geeksforgeeks.org/?p=2457">this post</a>.<br />
Let the repeating numbers be X and Y, if we xor all the elements in the array and all integers from 1 to n, then the result is X xor Y.<br />
The 1’s in binary representation of X xor Y is corresponding to the different bits between X and Y. Suppose that the kth bit of X xor Y is 1, we can xor all the elements in the array and all integers from 1 to n, whose kth bits are 1. The result will be one of X and Y.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
void printRepeating(int arr[], int size)
{
  int xor = arr[0]; /* Will hold xor of all elements */
  int set_bit_no;  /* Will have only single set bit of xor */
  int i;
  int n = size - 2;
  int x = 0, y = 0;
  
  /* Get the xor of all elements in arr[] and {1, 2 .. n} */
  for(i = 1; i &lt; size; i++)
    xor ^= arr[i];  
  for(i = 1; i &lt;= n; i++)
    xor ^= i;   

  /* Get the rightmost set bit in set_bit_no */
  set_bit_no = xor &amp; ~(xor-1);

  /* Now divide elements in two sets by comparing rightmost set
   bit of xor with bit at same position in each element. */
  for(i = 0; i &lt; size; i++)
  {
    if(arr[i] &amp; set_bit_no)
      x = x ^ arr[i]; /*XOR of first set in arr[] */
    else
      y = y ^ arr[i]; /*XOR of second set in arr[] */
  }
  for(i = 1; i &lt;= n; i++)
  {
    if(i &amp; set_bit_no)
      x = x ^ i; /*XOR of first set in arr[] and {1, 2, ...n }*/
    else
      y = y ^ i; /*XOR of second set in arr[] and {1, 2, ...n } */
  }
  
  printf(&quot;\n The two repeating elements are %d &amp; %d &quot;, x, y);
}     


int main()
{
  int arr[] = {4, 2, 4, 5, 2, 3, 1};
  int arr_size = sizeof(arr)/sizeof(arr[0]);  
  printRepeating(arr, arr_size);
  getchar();
  return 0;
}
</pre>
<p><strong>Method 5 (Use array elements as index)</strong><br />
Thanks to Manish K. Aasawat for suggesting this method.</p>
<pre>
Traverse the array. Do following for every index i of A[].
{
check for sign of A[abs(A[i])] ;
if positive then
   make it negative by   A[abs(A[i])]=-A[abs(A[i])];
else  // i.e., A[abs(A[i])] is negative
   this   element (ith element of list) is a repetition
}
</pre>
<pre>
Example: A[] =  {1, 1, 2, 3, 2}
i=0; 
Check sign of A[abs(A[0])] which is A[1].  A[1] is positive, so make it negative. 
Array now becomes {1, -1, 2, 3, 2}

i=1; 
Check sign of A[abs(A[1])] which is A[1].  A[1] is negative, so A[1] is a repetition.

i=2; 
Check sign of A[abs(A[2])] which is A[2].  A[2] is  positive, so make it negative. '
Array now becomes {1, -1, -2, 3, 2}

i=3; 
Check sign of A[abs(A[3])] which is A[3].  A[3] is  positive, so make it negative. 
Array now becomes {1, -1, -2, -3, 2}

i=4; 
Check sign of A[abs(A[4])] which is A[2].  A[2] is negative, so A[4] is a repetition.
</pre>
<p>Note that this method modifies the original array and may not be a recommended method if we are not allowed to modify the array.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

void printRepeating(int arr[], int size)
{
  int i;  
 
  printf(&quot;\n The repeating elements are&quot;);
  
  for(i = 0; i &lt; size; i++)
  {
    if(arr[abs(arr[i])] &gt; 0)
      arr[abs(arr[i])] = -arr[abs(arr[i])];
    else
      printf(&quot; %d &quot;, abs(arr[i]));
  }         
}     

int main()
{
  int arr[] = {1, 3, 2, 2, 1};
  int arr_size = sizeof(arr)/sizeof(arr[0]);
  printRepeating(arr, arr_size);
  getchar();
  return 0;
}
</pre>
<p>The problem can be solved in linear time using other method also, please see <a href="http://www.geeksforgeeks.org/archives/7953/comment-page-1#comment-1300">this </a> and <a href="http://www.geeksforgeeks.org/archives/7953/comment-page-1#comment-1298">this </a>comments</p>
<p>Please write comments if you find the above codes/algorithms incorrect, or find better ways to solve the same problem.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array-set-2-expected-linear-time/" title="K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)">K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)</a></li><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array/" title="K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1">K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1</a></li><li><a href="http://www.geeksforgeeks.org/time-complexity-insertion-sort-inversions/" title="Time complexity of insertion sort when there are O(n) inversions?">Time complexity of insertion sort when there are O(n) inversions?</a></li><li><a href="http://www.geeksforgeeks.org/check-two-given-sets-disjoint/" title="How to check if two given sets are disjoint?">How to check if two given sets are disjoint?</a></li><li><a href="http://www.geeksforgeeks.org/minimum-number-platforms-required-railwaybus-station/" title="Minimum Number of Platforms Required for a Railway/Bus Station">Minimum Number of Platforms Required for a Railway/Bus Station</a></li><li><a href="http://www.geeksforgeeks.org/given-two-sorted-arrays-number-x-find-pair-whose-sum-closest-x/" title="Find the closest pair from two sorted arrays">Find the closest pair from two sorted arrays</a></li><li><a href="http://www.geeksforgeeks.org/print-elements-sorted-order-row-column-wise-sorted-matrix/" title="Print all elements in sorted order from row and column wise sorted matrix">Print all elements in sorted order from row and column wise sorted matrix</a></li><li><a href="http://www.geeksforgeeks.org/length-largest-subarray-contiguous-elements-set-1/" title="Length of the largest subarray with contiguous elements | Set 1">Length of the largest subarray with contiguous elements | Set 1</a></li></ul>
<p></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Ffind-the-two-repeating-elements-in-a-given-array%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/find-the-two-repeating-elements-in-a-given-array/" data-text="Find the two repeating elements in a given array" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/find-the-two-repeating-elements-in-a-given-array/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-32245">
        <div id="dsq-comment-header-32245" class="dsq-comment-header">
            <cite id="dsq-cite-32245">
                <span id="dsq-author-user-32245">nathan</span>
            </cite>
        </div>
        <div id="dsq-comment-body-32245" class="dsq-comment-body">
            <div id="dsq-comment-message-32245" class="dsq-comment-message"><p>nice solutions</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-30672">
        <div id="dsq-comment-header-30672" class="dsq-comment-header">
            <cite id="dsq-cite-30672">
                <span id="dsq-author-user-30672">smith</span>
            </cite>
        </div>
        <div id="dsq-comment-body-30672" class="dsq-comment-body">
            <div id="dsq-comment-message-30672" class="dsq-comment-message"><p>#include</p>
<p>void swap(int *a,int *b)</p>
<p>{</p>
<p>	int t=*a;</p>
<p>	*a=*b;</p>
<p>	*b=t;</p>
<p>}</p>
<p>int obs(int x)</p>
<p>{</p>
<p>	return x&gt;0?x:-x;</p>
<p>}</p>
<p>void find(int *,int );</p>
<p>int main()</p>
<p>{</p>
<p>	int arr[]={3,0,4,0,1,2,3,5};</p>
<p>	int n=sizeof(arr)/sizeof(arr[0]);</p>
<p>	find(arr,n);</p>
<p>}</p>
<p>void find(int *arr,int size)</p>
<p>{</p>
<p>	int j=size-1;while(arr[j]==0)j&#8211;;int i=0;</p>
<p>	while(i0){</p>
<p>			arr[obs(arr[i])]=-arr[obs(arr[i])];</p>
<p>		}</p>
<p>	    else if(arr[obs(arr[i])]&lt;0)</p>
<p>	    {</p>
<p>			printf(&quot;%d &quot;,obs(arr[i]));</p>
<p>	    }</p>
<p>		i++;</p>
<p>	}</p>
<p>	if(j==size-3)printf(&quot;0&quot;);</p>
<p>}<br />
suggest me some test cases  if i m wrong..</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-30671">
        <div id="dsq-comment-header-30671" class="dsq-comment-header">
            <cite id="dsq-cite-30671">
                <span id="dsq-author-user-30671">smith</span>
            </cite>
        </div>
        <div id="dsq-comment-body-30671" class="dsq-comment-body">
            <div id="dsq-comment-message-30671" class="dsq-comment-message"><p>n fifth method,how to solve if 0 is present in array?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-30670">
        <div id="dsq-comment-header-30670" class="dsq-comment-header">
            <cite id="dsq-cite-30670">
                <span id="dsq-author-user-30670">smith</span>
            </cite>
        </div>
        <div id="dsq-comment-body-30670" class="dsq-comment-body">
            <div id="dsq-comment-message-30670" class="dsq-comment-message"><p>in fifth method,how to solve if 0 is present in array?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-32251">
        <div id="dsq-comment-header-32251" class="dsq-comment-header">
            <cite id="dsq-cite-32251">
                <span id="dsq-author-user-32251">GCODE</span>
            </cite>
        </div>
        <div id="dsq-comment-body-32251" class="dsq-comment-body">
            <div id="dsq-comment-message-32251" class="dsq-comment-message"><p>Elements must be from 0 to n-1 in that case,to use array as index.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-21168">
        <div id="dsq-comment-header-21168" class="dsq-comment-header">
            <cite id="dsq-cite-21168">
                <span id="dsq-author-user-21168">jasleen</span>
            </cite>
        </div>
        <div id="dsq-comment-body-21168" class="dsq-comment-body">
            <div id="dsq-comment-message-21168" class="dsq-comment-message"><p>In the second method, whenever we refer to count[a[i]], count[a[i]-1] should be used, else it won&#8217;t work for the case where nth element is repeated.<br />
Correct me if I&#8217;m wrong..</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-sonali-gupta even thread-odd thread-alt depth-1" id="dsq-comment-19423">
        <div id="dsq-comment-header-19423" class="dsq-comment-header">
            <cite id="dsq-cite-19423">
                <span id="dsq-author-user-19423">sonali gupta</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19423" class="dsq-comment-body">
            <div id="dsq-comment-message-19423" class="dsq-comment-message"><p>#include<stdio .h><br />
#include<conio .h><br />
int main()<br />
{<br />
  int a[] = {4, 2, 4, 5, 2, 3, 1},i ,b[10];<br />
  for(i=0;i< =6;i++)<br />
  b[i]=0;<br />
 for(i=0;i<=6;i++)<br />
  b[a[i]]++;<br />
  for(i=0;i<=6;i++)<br />
  {if(b[i]>1)<br />
  printf(&#8220;%d &#8220;,i);<br />
                    }<br />
    getch();<br />
    return 0;<br />
}</conio></stdio></p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-23063">
        <div id="dsq-comment-header-23063" class="dsq-comment-header">
            <cite id="dsq-cite-23063">
                <span id="dsq-author-user-23063">Vikas Gupta</span>
            </cite>
        </div>
        <div id="dsq-comment-body-23063" class="dsq-comment-body">
            <div id="dsq-comment-message-23063" class="dsq-comment-message"><p>This is same as method 2.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-vikasnitt even depth-2" id="dsq-comment-23065">
        <div id="dsq-comment-header-23065" class="dsq-comment-header">
            <cite id="dsq-cite-23065">
                <span id="dsq-author-user-23065">vikasnitt</span>
            </cite>
        </div>
        <div id="dsq-comment-body-23065" class="dsq-comment-body">
            <div id="dsq-comment-message-23065" class="dsq-comment-message"><pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-27994">
        <div id="dsq-comment-header-27994" class="dsq-comment-header">
            <cite id="dsq-cite-27994">
                <span id="dsq-author-user-27994">shahid Rauf</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27994" class="dsq-comment-body">
            <div id="dsq-comment-message-27994" class="dsq-comment-message"><p>hey<br />
can u send me solution  of this task:<br />
if we take 3*3 array and take number by rand()%8 and store these number into 3*3 array and than chack repeated number and romove of these number and add again non repeated number into this array[3][3]<br />
please send me complete code in c language on this ID: <a href="mailto:shahidrauf.141@gmail.com">shahidrauf.141@gmail.com</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-sonali-gupta even thread-even depth-1" id="dsq-comment-19422">
        <div id="dsq-comment-header-19422" class="dsq-comment-header">
            <cite id="dsq-cite-19422">
                <span id="dsq-author-user-19422">sonali gupta</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19422" class="dsq-comment-body">
            <div id="dsq-comment-message-19422" class="dsq-comment-message"><pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
<p>#include<stdio .h><br />
#include<conio .h><br />
int main()<br />
{<br />
  int a[] = {4, 2, 4, 5, 2, 3, 1},i ,b[10];<br />
  for(i=0;i< =6;i++)<br />
  b[i]=0;<br />
 for(i=0;i<=6;i++)<br />
  b[a[i]]++;<br />
  for(i=0;i<=6;i++)<br />
  {if(b[i]>1)<br />
  printf(&#8220;%d &#8220;,i);<br />
                    }<br />
    getch();<br />
    return 0;<br />
}</conio></stdio></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-krishnx odd alt thread-odd thread-alt depth-1" id="dsq-comment-17627">
        <div id="dsq-comment-header-17627" class="dsq-comment-header">
            <cite id="dsq-cite-17627">
                <span id="dsq-author-user-17627">krishnx</span>
            </cite>
        </div>
        <div id="dsq-comment-body-17627" class="dsq-comment-body">
            <div id="dsq-comment-message-17627" class="dsq-comment-message"><pre> <code language="C">
#include&lt;iostream&gt;
#include&lt;map&gt;

using namespace std;

void findRepeatingElements(int a[], int);

int main()
{
	int a[] = {4, 2, 4, 5, 2, 3, 1};
	int length = sizeof(a)/sizeof(a[0]);
	
	findRepeatingElements(a, length);
	
	return 0;
}

void findRepeatingElements(int a[], int length)
{
	map&lt;int, int&gt; kcs;
	map&lt;int, int&gt;::iterator it;
	
	for(int i=0; i&lt;length; i++) 
	{
		if(kcs.find(a[i]) ==  kcs.end())
			kcs[a[i]] = 1;
		else 
			kcs[a[i]]++;
	}
	
	for(it=kcs.begin(); it != kcs.end(); it++)
	{
		if(it-&gt;second &gt; 1)
		{
			cout &lt;&lt; &quot;Element &quot; &lt;&lt; it-&gt;first &lt;&lt; &quot; occured &quot; &lt;&lt; it-&gt;second &lt;&lt; &quot; times\n&quot;;
		}			
	} 
}
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-14310">
        <div id="dsq-comment-header-14310" class="dsq-comment-header">
            <cite id="dsq-cite-14310">
                <span id="dsq-author-user-14310">nathan</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14310" class="dsq-comment-body">
            <div id="dsq-comment-message-14310" class="dsq-comment-message"><p>in method 5, what if the duplicate repeat 3 times or more, the same result will be printed more than one time, right???</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-14114">
        <div id="dsq-comment-header-14114" class="dsq-comment-header">
            <cite id="dsq-cite-14114">
                <span id="dsq-author-user-14114">sush</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14114" class="dsq-comment-body">
            <div id="dsq-comment-message-14114" class="dsq-comment-message"><p>2nd method will give wrong output for case {5, 2, 4, 5, 2, 3, 1}<br />
size of count array should be &#8216;size-1&#8242; instead of &#8216;size-2&#8242;</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-11115">
        <div id="dsq-comment-header-11115" class="dsq-comment-header">
            <cite id="dsq-cite-11115">
                <span id="dsq-author-user-11115">Rajath</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11115" class="dsq-comment-body">
            <div id="dsq-comment-message-11115" class="dsq-comment-message"><p>With the below input I am getting ans as 7 and 3<br />
3, 4, 2, 3, 4, 6,1</p>
<p>Where is it goign wrong ?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-10084">
        <div id="dsq-comment-header-10084" class="dsq-comment-header">
            <cite id="dsq-cite-10084">
                <span id="dsq-author-user-10084">Steve</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10084" class="dsq-comment-body">
            <div id="dsq-comment-message-10084" class="dsq-comment-message"><p>Input:{5,3,4,2,2,1,1}<br />
Can you explain the answer like you did for the example in case 5</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-10011">
        <div id="dsq-comment-header-10011" class="dsq-comment-header">
            <cite id="dsq-cite-10011">
                <span id="dsq-author-user-10011">aa</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10011" class="dsq-comment-body">
            <div id="dsq-comment-message-10011" class="dsq-comment-message"><p>@acolyte : can u further explain ur cycle detection algorithm to find duplicates using linked lists&#8230;</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-9056">
        <div id="dsq-comment-header-9056" class="dsq-comment-header">
            <cite id="dsq-cite-9056">
                <span id="dsq-author-user-9056">Sourabh Goyal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9056" class="dsq-comment-body">
            <div id="dsq-comment-message-9056" class="dsq-comment-message"><p>In method 5 suppose array A has 10 elements indexed form 0 to 9,then if values of A[i] are large say A[i]=9999,then size of array A must be atleast the maximum of all values stored in the array. This becomes almost similar to solving the problem with hashing in O(n) time.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-8721">
        <div id="dsq-comment-header-8721" class="dsq-comment-header">
            <cite id="dsq-cite-8721">
                <span id="dsq-author-user-8721">Varadharajan</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8721" class="dsq-comment-body">
            <div id="dsq-comment-message-8721" class="dsq-comment-message"><p>The neophyte method works awesome!!!!<br />
Good use of xor logic <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /><br />
Great&#8230;</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-8478">
        <div id="dsq-comment-header-8478" class="dsq-comment-header">
            <cite id="dsq-cite-8478">
http://www.ssiddique.info                <span id="dsq-author-user-8478">Shahid</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8478" class="dsq-comment-body">
            <div id="dsq-comment-message-8478" class="dsq-comment-message"><p>Hi ,</p>
<p>In step &#8220;i=3 ; list now becomes {-1,-1,2,3,2} and A[3] is not repeated<br />
now list becomes {-1,-1,-2,3,2}&#8221;<br />
according to you<br />
i= 3 and a[a[3]] is nagative so it should be repeated??</p>
<p>Actually I got the solutions but I think there is some mistake in this step..</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-8479">
        <div id="dsq-comment-header-8479" class="dsq-comment-header">
            <cite id="dsq-cite-8479">
                <span id="dsq-author-user-8479">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8479" class="dsq-comment-body">
            <div id="dsq-comment-message-8479" class="dsq-comment-message"><p>@Shahid:<br />
The explanation was correct, but it was following the convention that array indexes start from 1. We have modified the example to make more comprehensive.  Now indexes start from 0. Let us know if you still have doubts.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-19033">
        <div id="dsq-comment-header-19033" class="dsq-comment-header">
            <cite id="dsq-cite-19033">
                <span id="dsq-author-user-19033">Bala</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19033" class="dsq-comment-body">
            <div id="dsq-comment-message-19033" class="dsq-comment-message"><p>Suppose if i have an array like this Arr={100,2,1,4,5}. </p>
<p>Here when i=0,<br />
  arr[arr[0]] = arr[100] = ?<br />
total size of the array here is only 5. we will get array index out of bound exception rite?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor even depth-4" id="dsq-comment-19044">
        <div id="dsq-comment-header-19044" class="dsq-comment-header">
            <cite id="dsq-cite-19044">
                <span id="dsq-author-user-19044">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19044" class="dsq-comment-body">
            <div id="dsq-comment-message-19044" class="dsq-comment-message"><p>Please take a closer look at the problem statement.  It is an invalid input.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-akshaybhogra odd alt thread-even depth-1" id="dsq-comment-6851">
        <div id="dsq-comment-header-6851" class="dsq-comment-header">
            <cite id="dsq-cite-6851">
                <span id="dsq-author-user-6851">akshaybhogra</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6851" class="dsq-comment-body">
            <div id="dsq-comment-message-6851" class="dsq-comment-message"><p>I dont understand how the following line works in method 4</p>
<p> /* Get the rightmost set bit in set_bit_no */<br />
  set_bit_no = xor &amp; ~(xor-1);</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-6377">
        <div id="dsq-comment-header-6377" class="dsq-comment-header">
            <cite id="dsq-cite-6377">
                <span id="dsq-author-user-6377">Vijay Ekkaladevi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6377" class="dsq-comment-body">
            <div id="dsq-comment-message-6377" class="dsq-comment-message"><p>Why not insert the array elements into a binary search tree, during the insertion if the node value matches the array element repeating element is caught. It works for characters as well.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-6508">
        <div id="dsq-comment-header-6508" class="dsq-comment-header">
            <cite id="dsq-cite-6508">
                <span id="dsq-author-user-6508">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6508" class="dsq-comment-body">
            <div id="dsq-comment-message-6508" class="dsq-comment-message"><p>Thanks for suggesting a new method. This method works. The worst case time complexity of this method is O(nLogn) (if we use self balancing BST). Time complexity is better than method 1. The other methods work in O(n) though.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-5831">
        <div id="dsq-comment-header-5831" class="dsq-comment-header">
            <cite id="dsq-cite-5831">
                <span id="dsq-author-user-5831">alaska</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5831" class="dsq-comment-body">
            <div id="dsq-comment-message-5831" class="dsq-comment-message"><p>i still don&#8217;t get what two numbers can be used to identify and element</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-5832">
        <div id="dsq-comment-header-5832" class="dsq-comment-header">
            <cite id="dsq-cite-5832">
                <span id="dsq-author-user-5832">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5832" class="dsq-comment-body">
            <div id="dsq-comment-message-5832" class="dsq-comment-message"><p>@alaska:  Try to run it for some examples and add some printf statements to see intermediate values, and it will all make sense to you.  We have also improved the language of the method to make it more comprehensive.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-jigard even thread-odd thread-alt depth-1" id="dsq-comment-5799">
        <div id="dsq-comment-header-5799" class="dsq-comment-header">
            <cite id="dsq-cite-5799">
                <span id="dsq-author-user-5799">jigard</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5799" class="dsq-comment-body">
            <div id="dsq-comment-message-5799" class="dsq-comment-message"><p>i have done simple python implementation of this problem</p>
<p>def two_reapeat(list):<br />
    k = [1 for i in range(max(list)+1)]<br />
    for i in list:<br />
        if(k[i] == -1):<br />
            print &#8220;Rapeated number&#8221;,i<br />
        else:<br />
            k[i]= -k[i]</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-swaroop odd alt thread-even depth-1" id="dsq-comment-5681">
        <div id="dsq-comment-header-5681" class="dsq-comment-header">
            <cite id="dsq-cite-5681">
                <span id="dsq-author-user-5681">Swaroop</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5681" class="dsq-comment-body">
            <div id="dsq-comment-message-5681" class="dsq-comment-message"><p>S = S &#8211; n*(n+1)/2;  /* S is x + y now */<br />
  P = P/fact(n);         /* P is x*y now */</p>
<p>  D = sqrt(S*S &#8211; 4*P); /* D is x &#8211; y now */<br />
Can someone explain how to understand the equation for the variable &#8220;D&#8221;?<br />
I am finding difficult to understand this.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-5701">
        <div id="dsq-comment-header-5701" class="dsq-comment-header">
            <cite id="dsq-cite-5701">
                <span id="dsq-author-user-5701">Adam Chu</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5701" class="dsq-comment-body">
            <div id="dsq-comment-message-5701" class="dsq-comment-message"><p>x+y=S<br />
x*y=P<br />
D^2 = (x-y)^2 = x^2+y^2-2*x*y = (x+y)^2 &#8211; 4*x*y = S*S -4*P<br />
D = sqrt(S*S-4*P)</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-swaroop odd alt depth-3" id="dsq-comment-5703">
        <div id="dsq-comment-header-5703" class="dsq-comment-header">
            <cite id="dsq-cite-5703">
                <span id="dsq-author-user-5703">Swaroop</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5703" class="dsq-comment-body">
            <div id="dsq-comment-message-5703" class="dsq-comment-message"><p>Thanks Adam.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-5472">
        <div id="dsq-comment-header-5472" class="dsq-comment-header">
            <cite id="dsq-cite-5472">
                <span id="dsq-author-user-5472">mahe</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5472" class="dsq-comment-body">
            <div id="dsq-comment-message-5472" class="dsq-comment-message"><p>Method two is  modified to terminate the loop  if required two numbser are identified. So that unwanted execution of loop will be avoided</p>
<pre> <code language="C">
void printRepeating(int arr[], int size) 
{  
	int *count = (int *)calloc(sizeof(int), (size - 2)); 
	int i, j=0;  

	printf(&quot; Repeating elements are &quot;);   

	for(i = 0; i &lt; size; i++)
	{  
		if(count[arr[i]] == 1) 
		{	
			printf(&quot; %d &quot;, arr[i]); 
		}
		else    

		{	
			count[arr[i]] = 1;  
			++j;

			if ( 2 == j)
			{
				/*Terminate the loop if 2 duplicates numbers are identifed*/
				break;
				
			}
		} 
	} 

int main() 
{ 
	int arr[] = {4, 2, 4, 5, 2, 3, 1};

	int arr_size = sizeof(arr)/sizeof(arr[0]); 

	printRepeating(arr, arr_size);   

	getchar();

	return 0;
}
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-nishant_agarwal odd alt thread-even depth-1" id="dsq-comment-4405">
        <div id="dsq-comment-header-4405" class="dsq-comment-header">
            <cite id="dsq-cite-4405">
                <span id="dsq-author-user-4405">Nishant</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4405" class="dsq-comment-body">
            <div id="dsq-comment-message-4405" class="dsq-comment-message"><p>check method 4 for following input<br />
{3,1,2,4,8,6,5,7,8,10,13,9,11,14,12,18,16,17,12,15}</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-venki even depth-2" id="dsq-comment-4407">
        <div id="dsq-comment-header-4407" class="dsq-comment-header">
            <cite id="dsq-cite-4407">
http://www.linkedin.com/in/ramanawithu                <span id="dsq-author-user-4407">Venki</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4407" class="dsq-comment-body">
            <div id="dsq-comment-message-4407" class="dsq-comment-message"><p>Thanks @Nishant, there is an error in the code. We will correct it.</p>
<p>The first for loop should start at 1, in lieu of 0, as the variable xor already holds a[0] element.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-venki odd alt thread-odd thread-alt depth-1" id="dsq-comment-3499">
        <div id="dsq-comment-header-3499" class="dsq-comment-header">
            <cite id="dsq-cite-3499">
http://www.linkedin.com/in/ramanawithu                <span id="dsq-author-user-3499">Venki</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3499" class="dsq-comment-body">
            <div id="dsq-comment-message-3499" class="dsq-comment-message"><p>Method 1 complexity to be n2.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-3489">
        <div id="dsq-comment-header-3489" class="dsq-comment-header">
            <cite id="dsq-cite-3489">
                <span id="dsq-author-user-3489">poonam</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3489" class="dsq-comment-body">
            <div id="dsq-comment-message-3489" class="dsq-comment-message"><pre> <code language="C">
class Program
    {
        static void Main(string[] args)
        {
            Program p = new Program();
            int[] nArray = { 4, 2, 4, 5, 2, 3, 1 };
            p.FindTwoRepeatingElement(nArray);
            Console.ReadLine();
            
        }

        public void FindTwoRepeatingElement(int[] nPlus2)
        {
            int[] countArray = new int[nPlus2.Length - 2];

            for (int i = 0; i &lt; nPlus2.Length; i++)
            {
                if (countArray[nPlus2[i]-1] == 1)
                {
                    Console.WriteLine(nPlus2[i]);
                }
                else
                {
                    countArray[nPlus2[i]-1]++;
                }
            }

        }
    }
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-3494">
        <div id="dsq-comment-header-3494" class="dsq-comment-header">
            <cite id="dsq-cite-3494">
                <span id="dsq-author-user-3494">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3494" class="dsq-comment-body">
            <div id="dsq-comment-message-3494" class="dsq-comment-message"><p>@poonam:</p>
<p>Thanks for sharing code.  Could you please add few word about the approach used in the program?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-3496">
        <div id="dsq-comment-header-3496" class="dsq-comment-header">
            <cite id="dsq-cite-3496">
                <span id="dsq-author-user-3496">Ravi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3496" class="dsq-comment-body">
            <div id="dsq-comment-message-3496" class="dsq-comment-message"><p>If the value is <strong>not set</strong>(for the corresponding index in the array), <strong>set it</strong>&#8230; if it is <strong>already set</strong>, return as <strong>repeated</strong></p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-4" id="dsq-comment-3497">
        <div id="dsq-comment-header-3497" class="dsq-comment-header">
            <cite id="dsq-cite-3497">
                <span id="dsq-author-user-3497">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3497" class="dsq-comment-body">
            <div id="dsq-comment-message-3497" class="dsq-comment-message"><p>@Ravi: This method looks same as Method 2 given in the post.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-ravi even depth-5" id="dsq-comment-3498">
        <div id="dsq-comment-header-3498" class="dsq-comment-header">
            <cite id="dsq-cite-3498">
                <span id="dsq-author-user-3498">Ravi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3498" class="dsq-comment-body">
            <div id="dsq-comment-message-3498" class="dsq-comment-message"><p>yeah&#8230; but i merely explained the logic&#8230; <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_cool.gif" alt="8-)" class="wp-smiley" /></p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-3500">
        <div id="dsq-comment-header-3500" class="dsq-comment-header">
            <cite id="dsq-cite-3500">
                <span id="dsq-author-user-3500">poonam</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3500" class="dsq-comment-body">
            <div id="dsq-comment-message-3500" class="dsq-comment-message"><p>I am using &#8220;countArray[nPlus2[i]-1]&#8221; so that it wont show u array out of bound error&#8230;..<br />
<strong>Logic is:</strong>- if size of array is say n+2=7 so the size of count array will be 5(length-2). but as array starts from 0,1,2,3,4. So as per Method 2 it will give error arr[i]=5..like count[arr[i]]=count[5]&#8230;but count array size is upto 4 not 5&#8230;it give u error&#8230;.<br />
To avoid that i have substracted 1 from the index of count array.<br />
I hope u guys can understand it now&#8230;<br />
Thanks</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-3404">
        <div id="dsq-comment-header-3404" class="dsq-comment-header">
            <cite id="dsq-cite-3404">
                <span id="dsq-author-user-3404">sandy</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3404" class="dsq-comment-body">
            <div id="dsq-comment-message-3404" class="dsq-comment-message"><p>I am NOT sure somebody have suggested this method..<strong></strong></p>
<pre> <code language="C">
int arr[9] = {1,7, 9,10,4,5,4,8,9};
	int asize = sizeof(arr)/sizeof(arr[0]);
	int i,j;

	for (i=0;i&lt;asize;i++)
	{
		for (j=(i+1);j&lt;asize;j++)
		{
			if ( (arr[i] - arr[j]) == 0)
			{
				printf(&quot;\nthe repeated element is in %d and %d position, &quot;
                                       &quot; the number is %d&quot;, i,j, arr[j]);
			}

		}
	}
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-3493">
        <div id="dsq-comment-header-3493" class="dsq-comment-header">
            <cite id="dsq-cite-3493">
                <span id="dsq-author-user-3493">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3493" class="dsq-comment-body">
            <div id="dsq-comment-message-3493" class="dsq-comment-message"><p>@sandy:<br />
This method is same as Method 1 of the post.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-2691">
        <div id="dsq-comment-header-2691" class="dsq-comment-header">
            <cite id="dsq-cite-2691">
                <span id="dsq-author-user-2691">Prateek Caire</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2691" class="dsq-comment-body">
            <div id="dsq-comment-message-2691" class="dsq-comment-message"><p>here is another O(n) solution</p>
<pre> <code language="C">
TRE()
	for each i from 0 to n-1
		while(a[i] != i+1)
			if(a[i] != a[a[i]-1])
				swap(i, a[i]-1)
			else
				print a[i]
				a[i] = -1
				break
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-3495">
        <div id="dsq-comment-header-3495" class="dsq-comment-header">
            <cite id="dsq-cite-3495">
                <span id="dsq-author-user-3495">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3495" class="dsq-comment-body">
            <div id="dsq-comment-message-3495" class="dsq-comment-message"><p>@Prateek Caire:</p>
<p>Please check if your method works for the input given by Jason Huang below. We had a similar method earlier and it didn&#8217;t word for the above mentioned input.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-2663">
        <div id="dsq-comment-header-2663" class="dsq-comment-header">
            <cite id="dsq-cite-2663">
                <span id="dsq-author-user-2663">Shashank Mani Narayan</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2663" class="dsq-comment-body">
            <div id="dsq-comment-message-2663" class="dsq-comment-message"><p>last method using arr[arr[i] is not good solution @ all try fro this array &#8230;..plz correct geeksforgeek admin{13, 13, 12, 12, 1};</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-2664">
        <div id="dsq-comment-header-2664" class="dsq-comment-header">
            <cite id="dsq-cite-2664">
                <span id="dsq-author-user-2664">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2664" class="dsq-comment-body">
            <div id="dsq-comment-message-2664" class="dsq-comment-message"><p>@Shashank Mani Naraya:<br />
Please take a closer look at the problem statement.  The given array doesn&#8217;t seem to be a valid input.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-ravi even depth-3" id="dsq-comment-2747">
        <div id="dsq-comment-header-2747" class="dsq-comment-header">
            <cite id="dsq-cite-2747">
                <span id="dsq-author-user-2747">Ravi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2747" class="dsq-comment-body">
            <div id="dsq-comment-message-2747" class="dsq-comment-message"><p>the problem statement says &#8220;all the elements are in range 1 to n&#8221; but not &#8220;all elements from 1 to n are present&#8221;, so method 3 doesn&#8217;t work for Shashank mani narayan&#8217;s input.<br />
correct me if im wrong</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-mccarthy odd alt depth-4" id="dsq-comment-5320">
        <div id="dsq-comment-header-5320" class="dsq-comment-header">
            <cite id="dsq-cite-5320">
http://www.cse.iitk.ac.in/users/chitti                <span id="dsq-author-user-5320">mccarthy</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5320" class="dsq-comment-body">
            <div id="dsq-comment-message-5320" class="dsq-comment-message"><p>@Ravi: In the problem,it was asked that the length of the array is (n+2)..So it&#8217;s invalid input</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-nishant_agarwal even thread-even depth-1" id="dsq-comment-2237">
        <div id="dsq-comment-header-2237" class="dsq-comment-header">
            <cite id="dsq-cite-2237">
                <span id="dsq-author-user-2237">Nishant Agarwal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2237" class="dsq-comment-body">
            <div id="dsq-comment-message-2237" class="dsq-comment-message"><p>Method 2 will not work for arr[] = {4, 2, 5, 5, 2, 3, 1}<br />
since a[5] is garbage in this case&#8230;.. If we take count array of the size (n-1) i.e. 0 to 5 (in above case) then it will work correctly&#8230;.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-nishant_agarwal odd alt depth-2" id="dsq-comment-2238">
        <div id="dsq-comment-header-2238" class="dsq-comment-header">
            <cite id="dsq-cite-2238">
                <span id="dsq-author-user-2238">Nishant Agarwal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2238" class="dsq-comment-body">
            <div id="dsq-comment-message-2238" class="dsq-comment-message"><p>oh sorry count[5] will be garbage&#8230;..not a[5]&#8230;</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-gauravs even thread-odd thread-alt depth-1" id="dsq-comment-2106">
        <div id="dsq-comment-header-2106" class="dsq-comment-header">
            <cite id="dsq-cite-2106">
                <span id="dsq-author-user-2106">gauravs</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2106" class="dsq-comment-body">
            <div id="dsq-comment-message-2106" class="dsq-comment-message"><p>In the method 4 we initialize<br />
int xor = arr[0];<br />
and in the loop we are writing for(i = 0; i &lt; size; i++) xor ^= arr[i];</p>
<p>but arr[0] is Xor-ed twice in the above procedure (which i think should not be done)<br />
The correct answer is coming when we loop through the first element i.e. i = 0 to n-1. But i can&#039;t understand the logic..</p>
<p>Please help</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-2660">
        <div id="dsq-comment-header-2660" class="dsq-comment-header">
            <cite id="dsq-cite-2660">
                <span id="dsq-author-user-2660">Sunil</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2660" class="dsq-comment-body">
            <div id="dsq-comment-message-2660" class="dsq-comment-message"><p>Hi Gourav,<br />
We should initialize  xor=0<br />
OR<br />
we should do xor = a[0]^a[1] and then<br />
in the next loop we should go<br />
for(i=2; i&lt;n; i++) &#8230;.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-knkhadanga even thread-even depth-1" id="dsq-comment-1882">
        <div id="dsq-comment-header-1882" class="dsq-comment-header">
            <cite id="dsq-cite-1882">
http://knkhadanga.blogspot.com/                <span id="dsq-author-user-1882">knkhadanga</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1882" class="dsq-comment-body">
            <div id="dsq-comment-message-1882" class="dsq-comment-message"><p>Sort the elements in Array using the best sorting algorithm.<br />
Then traverse the array.<br />
if(array[i]==array[i+1]) then the element is repeating.<br />
(Avoid null pointer exception)</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-1881">
        <div id="dsq-comment-header-1881" class="dsq-comment-header">
            <cite id="dsq-cite-1881">
                <span id="dsq-author-user-1881">Khadu</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1881" class="dsq-comment-body">
            <div id="dsq-comment-message-1881" class="dsq-comment-message"><p>It can be done in following way too.<br />
Sort the Array using the best sorting algorithm. Then traverse the array.<br />
if(array[i]==array[i+1]) then the element is repeating.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-1491">
        <div id="dsq-comment-header-1491" class="dsq-comment-header">
            <cite id="dsq-cite-1491">
                <span id="dsq-author-user-1491">sagar aswani</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1491" class="dsq-comment-body">
            <div id="dsq-comment-message-1491" class="dsq-comment-message"><pre> <code language="C">
#include

using namespace std;

int main()
{
    int B[7]={1,2,3,4,5,4,2};
    int A[6]={0,0,0,0,0,0};

    for(int i=0;i&lt;7;i++)
        {
            A[B[i]]++;
            if(A[B[i]]==2)
            cout&lt;&lt;&quot;\nOne of the repeated number is &quot;&lt;&lt;B[i];
        }
     return 0;
    }
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-venki odd alt depth-2" id="dsq-comment-1626">
        <div id="dsq-comment-header-1626" class="dsq-comment-header">
            <cite id="dsq-cite-1626">
                <span id="dsq-author-user-1626">Venki</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1626" class="dsq-comment-body">
            <div id="dsq-comment-message-1626" class="dsq-comment-message"><p>We can make use of bit matrix. Set all bits to zeros at start and logically mark them as 1 to N+2. Scan the array and toggle corresponding bit. Again scan the bit matrix for &#8216;0&#8217; whose place value represents the repeated element.</p>
<p>Let us array is quite large. A bit matrix will be optimum solution. Its time complexity falls under O(n) and space complexity falls to O(N/sizeof(int)*8).</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-venki even depth-3" id="dsq-comment-1627">
        <div id="dsq-comment-header-1627" class="dsq-comment-header">
            <cite id="dsq-cite-1627">
                <span id="dsq-author-user-1627">Venki</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1627" class="dsq-comment-body">
            <div id="dsq-comment-message-1627" class="dsq-comment-message"><p>Sorry the required bit matrix array size is (N+2)/(bits per machine word)</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-16622">
        <div id="dsq-comment-header-16622" class="dsq-comment-header">
            <cite id="dsq-cite-16622">
                <span id="dsq-author-user-16622">Prashant Rai</span>
            </cite>
        </div>
        <div id="dsq-comment-body-16622" class="dsq-comment-body">
            <div id="dsq-comment-message-16622" class="dsq-comment-message"><p>here u r taking the value of array B as a index of array A, it will fail if we replace 2 numbers in the array with 2 digits number (e.g. replace 4 with 44).</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-1489">
        <div id="dsq-comment-header-1489" class="dsq-comment-header">
            <cite id="dsq-cite-1489">
                <span id="dsq-author-user-1489">sagar aswani</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1489" class="dsq-comment-body">
            <div id="dsq-comment-message-1489" class="dsq-comment-message"><p>There can be another method to it as follows:<br />
We know that the numbers are from 1 to n<br />
So make an another array A[n+1] and initializes all the element to zero and don&#8217;t use A[0];<br />
Now we are left with A[1] to A[n];<br />
Traverse the array and whatever you are getting the number correspondingly increment the index in Array A by 1 i.e. if you are getting 4 as a number then increment A[4] by 1;<br />
so if array B is{4,3,2,1,5,4,2} then A={0,1,2,1,2,1} i.e. index 2 and 4 are having value 2 so print these index as answers<strong><em><a href="http://geeksforgeeks.org" rel="nofollow"><br />
<blockquote>
<pre> <code language="C"></code> </pre>
</blockquote>
<p></a></em></strong></p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-1555">
        <div id="dsq-comment-header-1555" class="dsq-comment-header">
            <cite id="dsq-cite-1555">
                <span id="dsq-author-user-1555">ronnie</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1555" class="dsq-comment-body">
            <div id="dsq-comment-message-1555" class="dsq-comment-message"><p>What if in the array you have a value 100 but you don&#8217;t have an array of size 100 so where will you place that element?? You only have an array of size n.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-1630">
        <div id="dsq-comment-header-1630" class="dsq-comment-header">
            <cite id="dsq-cite-1630">
                <span id="dsq-author-user-1630">Sagar Aswani</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1630" class="dsq-comment-body">
            <div id="dsq-comment-message-1630" class="dsq-comment-message"><p>But in question it is given that the value ranges from 1 to n ,so if 100 is there in array then it must be &lt;=n,and i am creating the array of n+1 size so that definitely will take care of that.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-smritedua odd alt thread-even depth-1" id="dsq-comment-1474">
        <div id="dsq-comment-header-1474" class="dsq-comment-header">
            <cite id="dsq-cite-1474">
                <span id="dsq-author-user-1474">seeker7</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1474" class="dsq-comment-body">
            <div id="dsq-comment-message-1474" class="dsq-comment-message"><p>hey,can ny elaborate on neophyte&#8217;s method ,by citing an eg.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-1459">
        <div id="dsq-comment-header-1459" class="dsq-comment-header">
            <cite id="dsq-cite-1459">
                <span id="dsq-author-user-1459">Jason Huang</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1459" class="dsq-comment-body">
            <div id="dsq-comment-message-1459" class="dsq-comment-message"><p>Method 5 (Use Swap) is wrong. Counter example:</p>
<p>{2, 3, 4, 5, 6, 7, 8, 11, 10, 11, 12, 9, 1, 2};</p>
<p>Expected output: 2, 11<br />
Actual output: 2, 3</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-1464">
        <div id="dsq-comment-header-1464" class="dsq-comment-header">
            <cite id="dsq-cite-1464">
                <span id="dsq-author-user-1464">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1464" class="dsq-comment-body">
            <div id="dsq-comment-message-1464" class="dsq-comment-message"><p>Thanks for pointing this out. We have removed the swap method from the original post.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-1329">
        <div id="dsq-comment-header-1329" class="dsq-comment-header">
            <cite id="dsq-cite-1329">
                <span id="dsq-author-user-1329">Saravanan Mani</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1329" class="dsq-comment-body">
            <div id="dsq-comment-message-1329" class="dsq-comment-message"><p>In method 3, we can find XY by using another simple equation.</p>
<p>Sum of Squares of N natural numbers is (n(n+1)(2n+1))/6</p>
<p>So X2+Y2 = S2 &#8211; (n(n+1)(2n+1))/6<br />
we already know X+Y</p>
<p>(X+Y)2= X2+Y2+2XY</p>
<p>we can find 2XY from the above two equations.</p>
<p>This method eliminates the multiplication overflow.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-1298">
        <div id="dsq-comment-header-1298" class="dsq-comment-header">
            <cite id="dsq-cite-1298">
                <span id="dsq-author-user-1298">acolyte</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1298" class="dsq-comment-body">
            <div id="dsq-comment-message-1298" class="dsq-comment-message"><p>Another solution is to use cycle detection.<br />
Treat the array like the linked list which node i points to the node array[i].<br />
Consider the first n elements in array, their links will be either a loop (no duplication in it) or a lollipop (duplication in it).<br />
Use two pointers to traverse from the (n+1)th element with different speed, we will find a duplication. (If the problem contains only n+1 elements and 1 duplicated number, then we are done)<br />
Having one duplicated number, we can use the xor operation to find X xor Y and get another duplicated number.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor even thread-even depth-1" id="dsq-comment-1296">
        <div id="dsq-comment-header-1296" class="dsq-comment-header">
            <cite id="dsq-cite-1296">
                <span id="dsq-author-user-1296">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1296" class="dsq-comment-body">
            <div id="dsq-comment-message-1296" class="dsq-comment-message"><p>@neophyte &#038; @dynamic: Thanks for suggesting the new methods.  We have included the methods to the original post. Keep it up!</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-1300">
        <div id="dsq-comment-header-1300" class="dsq-comment-header">
            <cite id="dsq-cite-1300">
                <span id="dsq-author-user-1300">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1300" class="dsq-comment-body">
            <div id="dsq-comment-message-1300" class="dsq-comment-message"><p>I had found another solution.<br />
<a href="http://blog.computationalcomplexity.org/2005/03/finding-duplicates.html" rel="nofollow">http://blog.computationalcomplexity.org/2005/03/finding-duplicates.html</a><br />
In the first comment of this post.<br />
Imagine the array as linked list and find the cycle in it.<br />
As long as finding one of X and Y, since X xor Y is known, we could find the answers.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-1291">
        <div id="dsq-comment-header-1291" class="dsq-comment-header">
            <cite id="dsq-cite-1291">
                <span id="dsq-author-user-1291">dynamic</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1291" class="dsq-comment-body">
            <div id="dsq-comment-message-1291" class="dsq-comment-message"><p>Traverse through the array, and do the following:<br />
1) if (arr[index] == index), then do nothing<br />
2) if (arr[index] != index), put arr[index] in its correct place by doing a swap.</p>
<p>Repeat the above process once again(these steps have to be followed twice). Now the last 2 elements of the array are the ones which are repeated.</p>
<p>Time Complexity : O(n)<br />
Space Complexity : O(1)</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-1294">
        <div id="dsq-comment-header-1294" class="dsq-comment-header">
            <cite id="dsq-cite-1294">
                <span id="dsq-author-user-1294">Nik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1294" class="dsq-comment-body">
            <div id="dsq-comment-message-1294" class="dsq-comment-message"><p>This is also a good solution indeed!</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-1301">
        <div id="dsq-comment-header-1301" class="dsq-comment-header">
            <cite id="dsq-cite-1301">
                <span id="dsq-author-user-1301">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1301" class="dsq-comment-body">
            <div id="dsq-comment-message-1301" class="dsq-comment-message"><p>Traverse the array and do A[abs(A[i])] = -A[abs(A[i])]. Finally, the index i with positive A[i] is the answer.<br />
If the array is modifiable, there are many tricks to solve it..</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-1302">
        <div id="dsq-comment-header-1302" class="dsq-comment-header">
            <cite id="dsq-cite-1302">
                <span id="dsq-author-user-1302">kapil</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1302" class="dsq-comment-body">
            <div id="dsq-comment-message-1302" class="dsq-comment-message"><p>Can you please explain your approach for the array {1, 1, 2, 3, 2}, like what would be the contents after doing A[abs(A[i])] = -A[abs(A[i]))</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-4" id="dsq-comment-1303">
        <div id="dsq-comment-header-1303" class="dsq-comment-header">
            <cite id="dsq-cite-1303">
                <span id="dsq-author-user-1303">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1303" class="dsq-comment-body">
            <div id="dsq-comment-message-1303" class="dsq-comment-message"><p>It will become {1, 1, -2, 3, 2}.<br />
Since array[1] and array[2] is positive, the answers are 1 and 2. (Although array[4] and array[5] are positive, but they are greater than n = 3.)</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt depth-3" id="dsq-comment-1316">
        <div id="dsq-comment-header-1316" class="dsq-comment-header">
            <cite id="dsq-cite-1316">
                <span id="dsq-author-user-1316">Manish K. Aasawat</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1316" class="dsq-comment-body">
            <div id="dsq-comment-message-1316" class="dsq-comment-message"><p>One better solution , while modification of list is allowed , is :&#8211;</p>
<pre> <code language="C">
traverse the list for i= 1st to n+2 elements
{
check for sign of A[abs(A[i])] ; 
if positive then 
   make it negative by   A[abs(A[i])]=-A[abs(A[i])];
else  // i.e., A[abs(A[i])] is negative 
   this   element (ith element of list) is a repetition
}
</code> </pre>
<p>E.g.,   {1,1,2,3,2}<br />
i=1 ; A[abs(A[1])] i.e,A[1] is positive ; so make it negative ;<br />
so list now is {-1,1,2,3,2}</p>
<p>i=2 ; A[abs(A[2])] i.e., A[1] is negative ; so A[i] i.e., A[2] is repeatation<br />
now list is {-1,1,2,3,2}</p>
<p>i=3 ; list now becomes {-1,-1,2,3,2} and A[3] is not repeated now</p>
<p>i=4 ; list becomes {-1,-1,-2,3,2}<br />
and A[4]=3  is not repeated </p>
<p>i=5 ; we find A[abs(A[i])] = A[2]  is negative so A[i]= 2  is a repeatation ;</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-4" id="dsq-comment-2040">
        <div id="dsq-comment-header-2040" class="dsq-comment-header">
            <cite id="dsq-cite-2040">
                <span id="dsq-author-user-2040">ssp</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2040" class="dsq-comment-body">
            <div id="dsq-comment-message-2040" class="dsq-comment-message"><p>hey dude.. have you assumed that this solution holds good if the array is a sorted array&#8230;</p>
<p>does is work for 2, 2, 1, 3, 1</p>
<p>warm regards.<br />
ssp</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-4" id="dsq-comment-2292">
        <div id="dsq-comment-header-2292" class="dsq-comment-header">
            <cite id="dsq-cite-2292">
                <span id="dsq-author-user-2292">Frodo Baggins</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2292" class="dsq-comment-body">
            <div id="dsq-comment-message-2292" class="dsq-comment-message"><p>@Manish K. Aasawat<br />
Awesome dude , inplace marking and we can get back the original array also , works for more than 2 repeating numbers also <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-4" id="dsq-comment-10347">
        <div id="dsq-comment-header-10347" class="dsq-comment-header">
            <cite id="dsq-cite-10347">
                <span id="dsq-author-user-10347">eugene von</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10347" class="dsq-comment-body">
            <div id="dsq-comment-message-10347" class="dsq-comment-message"><p>I just don&#8217;t understand the following:<br />
i=3 ; list now becomes {-1,-1,2,3,2} and A[3] is not repeated now<br />
according to you solution, A[3] should be 2, so A[abs(A[i])] should be A[2] which is negative, how can you get the answer?</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-5" id="dsq-comment-10348">
        <div id="dsq-comment-header-10348" class="dsq-comment-header">
            <cite id="dsq-cite-10348">
                <span id="dsq-author-user-10348">eugene von</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10348" class="dsq-comment-body">
            <div id="dsq-comment-message-10348" class="dsq-comment-message"><p>suppose I have 1,1,5,3,2<br />
i=3;A[5] is 2 so you make it -2.<br />
i=5;A[2] is -1, it&#8217;s negative?</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even depth-4" id="dsq-comment-10620">
        <div id="dsq-comment-header-10620" class="dsq-comment-header">
            <cite id="dsq-cite-10620">
                <span id="dsq-author-user-10620">Rajath</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10620" class="dsq-comment-body">
            <div id="dsq-comment-message-10620" class="dsq-comment-message"><p>Here we may have to care of size of array as well. Because if we array {10, 1, 2, 2} then a[10] will give arrayoutofboundexception.<br />
Or else we may have to dynamically resize array which is not good solution.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-1330">
        <div id="dsq-comment-header-1330" class="dsq-comment-header">
            <cite id="dsq-cite-1330">
                <span id="dsq-author-user-1330">ada</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1330" class="dsq-comment-body">
            <div id="dsq-comment-message-1330" class="dsq-comment-message"><p>magic&#8230;it works&#8230;but why?<br />
I don&#8217;t understand&#8230;<br />
Can you please explain?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-1532">
        <div id="dsq-comment-header-1532" class="dsq-comment-header">
            <cite id="dsq-cite-1532">
                <span id="dsq-author-user-1532">spandan</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1532" class="dsq-comment-body">
            <div id="dsq-comment-message-1532" class="dsq-comment-message"><p>can anybody give an example to explain @dynamics method</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-3767">
        <div id="dsq-comment-header-3767" class="dsq-comment-header">
            <cite id="dsq-cite-3767">
                <span id="dsq-author-user-3767">algomad</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3767" class="dsq-comment-body">
            <div id="dsq-comment-message-3767" class="dsq-comment-message"><p>@Dynamic &#8211; Can you explain this with the help of example nt arr[] = {4, 2, 4, 5, 2, 3, 1};. As the solution seems to be incorrect&#8230;</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-4867">
        <div id="dsq-comment-header-4867" class="dsq-comment-header">
            <cite id="dsq-cite-4867">
                <span id="dsq-author-user-4867">hash_fun</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4867" class="dsq-comment-body">
            <div id="dsq-comment-message-4867" class="dsq-comment-message"><p>@dynamic -can you please explain the swapping in your pseudo code ?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-20100">
        <div id="dsq-comment-header-20100" class="dsq-comment-header">
            <cite id="dsq-cite-20100">
                <span id="dsq-author-user-20100">crazy</span>
            </cite>
        </div>
        <div id="dsq-comment-body-20100" class="dsq-comment-body">
            <div id="dsq-comment-message-20100" class="dsq-comment-message"><p>good one&#8230;!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-1289">
        <div id="dsq-comment-header-1289" class="dsq-comment-header">
            <cite id="dsq-cite-1289">
                <span id="dsq-author-user-1289">neophyte</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1289" class="dsq-comment-body">
            <div id="dsq-comment-message-1289" class="dsq-comment-message"><p>You can use the xor operation.<br />
Let the repeating numbers be X and Y, if we xor all the elements in the array and all integers from 1 to n, then the result is X xor Y.<br />
The 1&#8217;s in binary representation of X xor Y is corresponding to the different bits between X and Y. Suppose that the kth bit of X xor Y is 1, we can xor all the elements in the array and all integers from 1 to n, whose kth bits are 1. The result will be one of X and Y.<br />
The same trick can solve n+3 elements with 3 repeating numbers.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-1292">
        <div id="dsq-comment-header-1292" class="dsq-comment-header">
            <cite id="dsq-cite-1292">
                <span id="dsq-author-user-1292">Anurag Sharma</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1292" class="dsq-comment-body">
            <div id="dsq-comment-message-1292" class="dsq-comment-message"><p>Wao! great solution indeed</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-3731">
        <div id="dsq-comment-header-3731" class="dsq-comment-header">
            <cite id="dsq-cite-3731">
                <span id="dsq-author-user-3731">sameer</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3731" class="dsq-comment-body">
            <div id="dsq-comment-message-3731" class="dsq-comment-message"><p>Read XOR operator first. It says two same numbers give ZERO as result.<br />
XORing of all elements of array won&#8217;t give you X XOR Y.</p>
<p>This question is not about asking you to find out two distinct numbers in an array where other numbers are in pairs means duplicates.</p>
<p>@Authors, Please post solution only after analyzing the given sols.</p>
<p>Thanks!</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-3" id="dsq-comment-3732">
        <div id="dsq-comment-header-3732" class="dsq-comment-header">
            <cite id="dsq-cite-3732">
                <span id="dsq-author-user-3732">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3732" class="dsq-comment-body">
            <div id="dsq-comment-message-3732" class="dsq-comment-message"><p>@sameer: Take a closer look at the solutions suggested by @neophyte. It works!!. It does XOR of all array elements and numbers 1 to n.  For example if array is {4, 2, 4, 5, 3, 3, 1, 6} then we get XOR as.</p>
<p>XOR = (4^2^4^5^3^3^1^6)^(1^2^3^4^5^6) which is equilant to 3^4 (XOR of the two repeating elements). Now we can pick a set bit in the XOR and find out the repeating elements by making two sets.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-4" id="dsq-comment-3740">
        <div id="dsq-comment-header-3740" class="dsq-comment-header">
            <cite id="dsq-cite-3740">
                <span id="dsq-author-user-3740">sameer</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3740" class="dsq-comment-body">
            <div id="dsq-comment-message-3740" class="dsq-comment-message"><p>Gotcha <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_sad.gif" alt=":(" class="wp-smiley" /> My bad !<br />
didn&#8217;t have closer look at sols.Now It looks perfectly fine to me.</p>
<p>Thumbs up dude!</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-4" id="dsq-comment-11116">
        <div id="dsq-comment-header-11116" class="dsq-comment-header">
            <cite id="dsq-cite-11116">
                <span id="dsq-author-user-11116">Rajath</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11116" class="dsq-comment-body">
            <div id="dsq-comment-message-11116" class="dsq-comment-message"><p>With the below input I am getting ans as 7 and 3<br />
3, 4, 2, 3, 4, 6,1</p>
<p>In XOR method<br />
Where is it goign wrong ?</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/find-the-two-repeating-elements-in-a-given-array/';
var disqus_identifier = '7953 http://geeksforgeeks.org/?p=7953';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Find the two repeating elements in a given array";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.252 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:34:25 -->

<!-- Compression = gzip -->
<!-- super cache -->