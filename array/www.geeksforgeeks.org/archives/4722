<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Check for Majority Element in a sorted array - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/check-for-majority-element-in-a-sorted-array/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Check for Majority Element in a sorted array - GeeksforGeeks" />
<meta property="og:description" content="Question: Write a C function to find if a given integer x appears more than n/2 times in a sorted array of n integers. Basically, we need to write a function say isMajority() that takes an array (arr[] ), array’s size (n) and a number to be searched (x) as parameters and returns true if &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/check-for-majority-element-in-a-sorted-array/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:tag" content="Divide and Conquer" />
<meta property="article:section" content="Arrays" />
<meta property="article:published_time" content="2010-02-11T13:50:34+00:00" />
<meta property="article:modified_time" content="2013-07-03T23:38:32+00:00" />
<meta property="og:updated_time" content="2013-07-03T23:38:32+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.508 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417111437 210.212.53.139 172.19.11.169';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Check for Majority Element in a sorted array</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p><strong>Question:</strong> Write a C function to find if a given integer x appears more than n/2 times in a sorted array of n integers. <span id="more-4722"></span></p>
<p>Basically, we need to write a function say isMajority() that takes an array (arr[] ), array’s size (n) and a number to be searched (x) as parameters and returns true if x is a <a href="http://www.geeksforgeeks.org/archives/503">majority element </a>(present more than n/2 times).</p>
<p>Examples:</p>
<pre>
Input: arr[] = {1, 2, 3, 3, 3, 3, 10}, x = 3
Output: True (x appears more than n/2 times in the given array)

Input: arr[] = {1, 1, 2, 4, 4, 4, 6, 6}, x = 4
Output: False (x doesn't appear more than n/2 times in the given array)

Input: arr[] = {1, 1, 1, 2, 2}, x = 1
Output: True (x appears more than n/2 times in the given array)
</pre>
<p><strong>METHOD 1 (Using Linear Search)</strong><br />
Linearly search for the first occurrence of the element, once you find it (let at index i), check element at index i + n/2.  If element is present at i+n/2 then return 1 else return 0.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
/* Program to check for majority element in a sorted array */
# include &lt;stdio.h&gt;
# include &lt;stdbool.h&gt;

bool isMajority(int arr[], int n, int x)
{
  int i;

  /* get last index according to n (even or odd) */
  int last_index = n%2? (n/2+1): (n/2);

  /* search for first occurrence of x in arr[]*/
  for (i = 0; i &lt; last_index; i++)
  {
    /* check if x is present and is present more than n/2 times */
    if (arr[i] == x &amp;&amp; arr[i+n/2] == x)
       return 1;
  }
  return 0;
}

/* Driver program to check above function */
int main()
{
   int arr[] ={1, 2, 3, 4, 4, 4, 4};
   int n = sizeof(arr)/sizeof(arr[0]);
   int x = 4;
   if (isMajority(arr, n, x))
     printf(&quot;%d appears more than %d times in arr[]&quot;, x, n/2);
   else
    printf(&quot;%d does not appear more than %d times in arr[]&quot;, x, n/2);

   getchar();
   return 0;
}
</pre>
<p><strong>Time Complexity: </strong> O(n)</p>
<p></br><br />
<strong>METHOD 2 (Using Binary Search)</strong><br />
Use binary search methodology to find the first occurrence of the given number.   The criteria for binary search is important here. </p>
<pre class="brush: cpp; title: ; notranslate" title="">
/* Program to check for majority element in a sorted array */
# include &lt;stdio.h&gt;;
# include &lt;stdbool.h&gt;

/* If x is present in arr[low...high] then returns the index of
  first occurrence of x, otherwise returns -1 */
int _binarySearch(int arr[], int low, int high, int x);

/* This function returns true if the x is present more than n/2
   times in arr[] of size n */
bool isMajority(int arr[], int n, int x)
{
   /* Find the index of first occurrence of x in arr[] */
   int i = _binarySearch(arr, 0, n-1, x);

   /* If element is not present at all, return false*/
   if (i == -1)
     return false;

   /* check if the element is present more than n/2 times */
   if (((i + n/2) &lt;= (n -1)) &amp;&amp; arr[i + n/2] == x)
     return true;
   else
     return false;
}

/* If x is present in arr[low...high] then returns the index of
  first occurrence of x, otherwise returns -1 */
int  _binarySearch(int arr[], int low, int high, int x)
{
  if (high &gt;= low)
  {
    int mid = (low + high)/2;  /*low + (high - low)/2;*/

    /* Check if arr[mid] is the first occurrence of x.
        arr[mid] is first occurrence if x is one of the following
        is true:
        (i)  mid == 0 and arr[mid] == x
        (ii) arr[mid-1] &lt; x and arr[mid] == x
     */
    if ( (mid == 0 || x &gt; arr[mid-1]) &amp;&amp; (arr[mid] == x) )
      return mid;
    else if (x &gt; arr[mid])
      return _binarySearch(arr, (mid + 1), high, x);
    else
      return _binarySearch(arr, low, (mid -1), x);
  }

  return -1;
}

/* Driver program to check above functions */
int main()
{
   int arr[] = {1, 2, 3, 3, 3, 3, 10};
   int n = sizeof(arr)/sizeof(arr[0]);
   int x = 3;
   if(isMajority(arr, n, x))
     printf(&quot;%d appears more than %d times in arr[]&quot;, x, n/2);
   else
    printf(&quot;%d does not appear more than %d times in arr[]&quot;, x, n/2);

   return 0;
}
</pre>
<p><strong><br />
Time Complexity:</strong>  O(Logn)<br />
<strong>Algorithmic Paradigm: </strong> Divide and Conquer</p>
<p>Please write comments if you find any bug in the above program/algorithm or a better way to solve the same problem.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array-set-2-expected-linear-time/" title="K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)">K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)</a></li><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array/" title="K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1">K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1</a></li><li><a href="http://www.geeksforgeeks.org/time-complexity-insertion-sort-inversions/" title="Time complexity of insertion sort when there are O(n) inversions?">Time complexity of insertion sort when there are O(n) inversions?</a></li><li><a href="http://www.geeksforgeeks.org/check-two-given-sets-disjoint/" title="How to check if two given sets are disjoint?">How to check if two given sets are disjoint?</a></li><li><a href="http://www.geeksforgeeks.org/minimum-number-platforms-required-railwaybus-station/" title="Minimum Number of Platforms Required for a Railway/Bus Station">Minimum Number of Platforms Required for a Railway/Bus Station</a></li><li><a href="http://www.geeksforgeeks.org/given-two-sorted-arrays-number-x-find-pair-whose-sum-closest-x/" title="Find the closest pair from two sorted arrays">Find the closest pair from two sorted arrays</a></li><li><a href="http://www.geeksforgeeks.org/print-elements-sorted-order-row-column-wise-sorted-matrix/" title="Print all elements in sorted order from row and column wise sorted matrix">Print all elements in sorted order from row and column wise sorted matrix</a></li><li><a href="http://www.geeksforgeeks.org/length-largest-subarray-contiguous-elements-set-1/" title="Length of the largest subarray with contiguous elements | Set 1">Length of the largest subarray with contiguous elements | Set 1</a></li></ul>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/divide-and-conquer/" rel="tag">Divide and Conquer</a></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fcheck-for-majority-element-in-a-sorted-array%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/check-for-majority-element-in-a-sorted-array/" data-text="Check for Majority Element in a sorted array" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/check-for-majority-element-in-a-sorted-array/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-31637">
        <div id="dsq-comment-header-31637" class="dsq-comment-header">
            <cite id="dsq-cite-31637">
                <span id="dsq-author-user-31637">OP Coder</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31637" class="dsq-comment-body">
            <div id="dsq-comment-message-31637" class="dsq-comment-message"><p>The solution in more simplifies manner</p>
<p>1) i = n/2</p>
<p>2) x = arr[i]   It is the only element which may  be majority element.</p>
<p>3) find the leftest index of the element x ie leftest_index = left(0, i-1,x)</p>
<p>4)Must for majority  rightest_index =  n/2 + 1 + index &#8211; 1<br />
 if ( arr[rightest_index] == x) &#8220;Its majority&#8221;;<br />
else &#8220;Its is not majority&#8221;</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-31554">
        <div id="dsq-comment-header-31554" class="dsq-comment-header">
            <cite id="dsq-cite-31554">
                <span id="dsq-author-user-31554">Guest</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31554" class="dsq-comment-body">
            <div id="dsq-comment-message-31554" class="dsq-comment-message"><p>If the array is sorted and there is a majority element in it, then it will definitely be present at n/2. Why don&#8217;t we simply return that element.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-31635">
        <div id="dsq-comment-header-31635" class="dsq-comment-header">
            <cite id="dsq-cite-31635">
                <span id="dsq-author-user-31635">OP Coder</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31635" class="dsq-comment-body">
            <div id="dsq-comment-message-31635" class="dsq-comment-message"><p>Element at index n/2 may or may not a majority element. To check that binary search is the best we can do as we have sorted array.</p>
<p>1 2 3 4 5 6 7  for you i t will return 4 but that is not a majority element. I hope you understand it.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-29095">
        <div id="dsq-comment-header-29095" class="dsq-comment-header">
            <cite id="dsq-cite-29095">
                <span id="dsq-author-user-29095">dippi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29095" class="dsq-comment-body">
            <div id="dsq-comment-message-29095" class="dsq-comment-message"><p>if the array is sorted</p>
<p>if(a[n/2]==x &amp;&amp; ((a[0]==x &amp;&amp; a[n/4]==x) || (a[n]==x &amp;&amp; a[3n/4]==x) || (a[n/4]==x &amp;&amp; a[3n/4]==x))<br />
return true<br />
else<br />
return false</p>
<p>O(1) complexity<br />
correct me if i&#8217;m wrong <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-29109">
        <div id="dsq-comment-header-29109" class="dsq-comment-header">
            <cite id="dsq-cite-29109">
                <span id="dsq-author-user-29109">hello</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29109" class="dsq-comment-body">
            <div id="dsq-comment-message-29109" class="dsq-comment-message"><p>i think you are wrong. its not necessary for the majority element to start from the beg,or span from n/4 to 3n/4</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-29524">
        <div id="dsq-comment-header-29524" class="dsq-comment-header">
            <cite id="dsq-cite-29524">
                <span id="dsq-author-user-29524">Vivek</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29524" class="dsq-comment-body">
            <div id="dsq-comment-message-29524" class="dsq-comment-message"><p>no it isn&#8217;t correct ..<br />
if starting index of &#8216;x&#8217; is between 0 to n/4 (suppose n/8) and ending index is between n/2 to 3n/4 (suppose 5n/8 +1)&#8230;.<br />
your algo will give an incorrect output</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-28255">
        <div id="dsq-comment-header-28255" class="dsq-comment-header">
            <cite id="dsq-cite-28255">
                <span id="dsq-author-user-28255">Varun Sharma</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28255" class="dsq-comment-body">
            <div id="dsq-comment-message-28255" class="dsq-comment-message"><p>Don&#8217;t know if I have not understood the question properly or something else.</p>
<p>we need to find Majority element i.e. that appears more than N/2 times for an array of size N then why we need any algorithm? it is trivial that middle element will be the majority element.</p>
<p>Minimum frequency of majority element = n/2 + 1.<br />
Now if majority element is also the smallest element then it is present from arr[0&#8230;n/2]<br />
consider another case where majority element = largest element of array.<br />
then it is present from<br />
arr[n/2&#8230;n]<br />
In average case majority element is always present at middle position.</p>
<p>so we need only one operation to compute majority element in a sorted array.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-29100">
        <div id="dsq-comment-header-29100" class="dsq-comment-header">
            <cite id="dsq-cite-29100">
                <span id="dsq-author-user-29100">guest</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29100" class="dsq-comment-body">
            <div id="dsq-comment-message-29100" class="dsq-comment-message"><p>if you know it&#8217;s appearing more than n/2 times then a[n/2] is the one we need but we also need to check if it appears more than n/2 or not..</p>
<p>it is so simple that if an element appears more than n/2 times then the mid element is that but the viceversa is not true.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-22712">
        <div id="dsq-comment-header-22712" class="dsq-comment-header">
            <cite id="dsq-cite-22712">
                <span id="dsq-author-user-22712">Jack</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22712" class="dsq-comment-body">
            <div id="dsq-comment-message-22712" class="dsq-comment-message"><p>@geeksforgeeks</p>
<p>If the array is sorted, only the element at a[n/2] has the chance of being the majority element.<br />
So we can compare x with a[n/2].<br />
If they are not equal, x is not a majority element.<br />
If they are equal, we have to check for 2 cases:<br />
  *If a[0] and a[(n/2)+1] are also equal to x.<br />
  *If a[(n/2)-1] and a[n] are also equal to x.<br />
If any of 2 cases is true, x is a majority element. It is not otherwise.</p>
<p>Please correct me if I am wrong anywhere.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-27351">
        <div id="dsq-comment-header-27351" class="dsq-comment-header">
            <cite id="dsq-cite-27351">
                <span id="dsq-author-user-27351">shiv kumar gupta</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27351" class="dsq-comment-body">
            <div id="dsq-comment-message-27351" class="dsq-comment-message"><p>ur approach is correct up to &#8220;it must be a middle element &#8221; but a[0] and a[n/2+1] or a[n/2-1] and a[n] is not the only possible way !!!<br />
consider 1 2 3 3 3 3 4 none of ur case  satisfy but x=3 is TRUE.. so its just to find the possibility (rejection will take just O(1)) but then u have to check n/2 indices pivoting around a[n/2] !</p>
<p>Hope I m right .. check once <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-27832">
        <div id="dsq-comment-header-27832" class="dsq-comment-header">
            <cite id="dsq-cite-27832">
                <span id="dsq-author-user-27832">Ray</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27832" class="dsq-comment-body">
            <div id="dsq-comment-message-27832" class="dsq-comment-message"><p>Jack&#8217;s approach can be made to work by slightly modifying the search space. We need to search from the middle, N/4  elements either ways.</p>
<p>bool  majorSearch(int *a, int x, int n, int low, high)<br />
{<br />
     if ( (high &#8211; low + 1)  &gt; n/2)<br />
     {<br />
        mid = (low + high)/2;<br />
        quartLow = mid &#8211; n/4;<br />
        quartHigh = mid + (n + 2)/4;<br />
        if (a[quartLow ] == x &amp;&amp; a[quartHigh] == x)<br />
            return True;<br />
        else if  (a[quartLow] == x)<br />
            return majorSearch(a, x, n, low, quartHigh &#8211; 1);<br />
        else if (a[quartHigh] == x)<br />
            return majorSearch(a, x, n, quartLow + 1, high);<br />
       }<br />
    return False;<br />
}</p>
<p>bool isMajor(int *a, int x)<br />
{<br />
    len = sizeof(a)/sizeof(a[0]);<br />
    return majorSearch(a, x, len, 0, len &#8211; 1);<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-22435">
        <div id="dsq-comment-header-22435" class="dsq-comment-header">
            <cite id="dsq-cite-22435">
                <span id="dsq-author-user-22435">wannaC</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22435" class="dsq-comment-body">
            <div id="dsq-comment-message-22435" class="dsq-comment-message"><p>What if array is this:  3 3 3 3 4 5 6 and x = 3? How binary search method is going to work?</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-27243">
        <div id="dsq-comment-header-27243" class="dsq-comment-header">
            <cite id="dsq-cite-27243">
                <span id="dsq-author-user-27243">Alien</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27243" class="dsq-comment-body">
            <div id="dsq-comment-message-27243" class="dsq-comment-message"><p>It will work because Binary search method is trying to find the first occurrence of x. So adding n/2 at position zero will give x only if the input is sorted. </p>
<p>But the drawback of this method is, it can only be used if input is sorted.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-kuldeepshandilya odd alt thread-even depth-1" id="dsq-comment-22427">
        <div id="dsq-comment-header-22427" class="dsq-comment-header">
            <cite id="dsq-cite-22427">
                <span id="dsq-author-user-22427">kuldeepshandilya</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22427" class="dsq-comment-body">
            <div id="dsq-comment-message-22427" class="dsq-comment-message"><p>It can be done in only 3 comparisons &#8211; check values of array[0], array[mid] and array[last], if either of two have value &#8216;x&#8217;, just check for one occurrence of x and we have positive response (x occurs more than n/2)</p>
<p>If array[mid] == x and ( array[0] == x || array[last] == x)<br />
return true.</p>
<p>Plz let me know If i am missing something!!!</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geekguy even depth-2" id="dsq-comment-22429">
        <div id="dsq-comment-header-22429" class="dsq-comment-header">
            <cite id="dsq-cite-22429">
                <span id="dsq-author-user-22429">geekguy</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22429" class="dsq-comment-body">
            <div id="dsq-comment-message-22429" class="dsq-comment-message"><p>try for 1,2,2,2,1  <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-22711">
        <div id="dsq-comment-header-22711" class="dsq-comment-header">
            <cite id="dsq-cite-22711">
                <span id="dsq-author-user-22711">Jack</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22711" class="dsq-comment-body">
            <div id="dsq-comment-message-22711" class="dsq-comment-message"><p>@kuldeepshandilya: This is exactly what came to my mind.<br />
@geekguy: The array has to be sorted. This is not a sorted array.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-kuldeepshandilya even depth-4" id="dsq-comment-22723">
        <div id="dsq-comment-header-22723" class="dsq-comment-header">
            <cite id="dsq-cite-22723">
                <span id="dsq-author-user-22723">kuldeepshandilya</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22723" class="dsq-comment-body">
            <div id="dsq-comment-message-22723" class="dsq-comment-message"><p>@Jack<br />
I got where we are wrong. We are thinking that if a number x is present more than n/2 times, then either it would be in subarray from 0 to n/2 or n/2+1 to n-1. Something like {2,2,2,3,3}.<br />
But, it can be like {1,2,2,2,3} in which case neither arr[0] is 2 nor arr[n-1]. So the idea would be to find first occurrence of x and last occurrence of it.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-geekguy odd alt depth-4" id="dsq-comment-22724">
        <div id="dsq-comment-header-22724" class="dsq-comment-header">
            <cite id="dsq-cite-22724">
                <span id="dsq-author-user-22724">geekguy</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22724" class="dsq-comment-body">
            <div id="dsq-comment-message-22724" class="dsq-comment-message"><p>Oops,</p>
<p>Consider it 1,2,2,2,3 <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_wink.gif" alt=";)" class="wp-smiley" /></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-geekguy even depth-4" id="dsq-comment-22726">
        <div id="dsq-comment-header-22726" class="dsq-comment-header">
            <cite id="dsq-cite-22726">
                <span id="dsq-author-user-22726">geekguy</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22726" class="dsq-comment-body">
            <div id="dsq-comment-message-22726" class="dsq-comment-message"><p>oops,</p>
<p>consider it 1,2,2,2,3 <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-geekguy odd alt thread-odd thread-alt depth-1" id="dsq-comment-22100">
        <div id="dsq-comment-header-22100" class="dsq-comment-header">
            <cite id="dsq-cite-22100">
                <span id="dsq-author-user-22100">geekguy</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22100" class="dsq-comment-body">
            <div id="dsq-comment-message-22100" class="dsq-comment-message"><p>@geeksforgeeks</p>
<p>The second method does not return majority element. It&#8217;s only checking that element x is majority or not. So, to find the majority element, It will take O(n log n) time. </p>
<p>Please correct me if I am wrong.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor even depth-2" id="dsq-comment-22126">
        <div id="dsq-comment-header-22126" class="dsq-comment-header">
            <cite id="dsq-cite-22126">
                <span id="dsq-author-user-22126">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22126" class="dsq-comment-body">
            <div id="dsq-comment-message-22126" class="dsq-comment-message"><p>This post is about finding whether x is majority or not.  To find majority, you may refer <a href="http://www.geeksforgeeks.org/majority-element/" target="_blank" rel="nofollow">this </a>post.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geekguy odd alt depth-3" id="dsq-comment-22129">
        <div id="dsq-comment-header-22129" class="dsq-comment-header">
            <cite id="dsq-cite-22129">
                <span id="dsq-author-user-22129">geekguy</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22129" class="dsq-comment-body">
            <div id="dsq-comment-message-22129" class="dsq-comment-message"><p>Ohh, My bad. </p>
<p>Thanks for correcting me.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-ronny even thread-even depth-1" id="dsq-comment-21216">
        <div id="dsq-comment-header-21216" class="dsq-comment-header">
            <cite id="dsq-cite-21216">
                <span id="dsq-author-user-21216">Ronny</span>
            </cite>
        </div>
        <div id="dsq-comment-body-21216" class="dsq-comment-body">
            <div id="dsq-comment-message-21216" class="dsq-comment-message"><p>@geeksforgeeks<br />
There is a bug in the program (linear method).<br />
the condition which computes last_index is incorrect</p>
<p>It should be<br />
        int last_index = n%2? (n/2+1): (n/2);<br />
instead of<br />
        int last_index = n%2? n/2: (n/2 + 1);</p>
<p>Since n%2 will be true (return 1) if it is odd and for that condition it should be (n/2 + 1).</p>
<p>Please correct it.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-21219">
        <div id="dsq-comment-header-21219" class="dsq-comment-header">
            <cite id="dsq-cite-21219">
                <span id="dsq-author-user-21219">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-21219" class="dsq-comment-body">
            <div id="dsq-comment-message-21219" class="dsq-comment-message"><p>Ronny: Thanks for pointing this out.  We have updated the code.  Appreciate your contribution.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-21166">
        <div id="dsq-comment-header-21166" class="dsq-comment-header">
            <cite id="dsq-cite-21166">
                <span id="dsq-author-user-21166">Akhil</span>
            </cite>
        </div>
        <div id="dsq-comment-body-21166" class="dsq-comment-body">
            <div id="dsq-comment-message-21166" class="dsq-comment-message"><p>@geeksforgeeks<br />
In the linear search method the for condition should be<br />
i&lt;=last_index. Otherwise it would fail for some cases.<br />
The code written above fails for<br />
{1,2,3,4,4,4,4}.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-ronny odd alt depth-2" id="dsq-comment-21217">
        <div id="dsq-comment-header-21217" class="dsq-comment-header">
            <cite id="dsq-cite-21217">
                <span id="dsq-author-user-21217">Ronny</span>
            </cite>
        </div>
        <div id="dsq-comment-body-21217" class="dsq-comment-body">
            <div id="dsq-comment-message-21217" class="dsq-comment-message"><p>@akhil<br />
The problem is not in the loop condition rather it is in the computation of last index.</p>
<p>the condition which computes last_index is incorrect</p>
<p>It should be<br />
        int last_index = n%2? (n/2+1): (n/2);<br />
instead of<br />
        int last_index = n%2? n/2: (n/2 + 1);</p>
<p>Since n%2 will be true (return 1) if it is odd and for that condition it should be (n/2 + 1).</p>
<p>You can refer this link where correcting the above condition produces correct result for your test case : <a href="http://ideone.com/KhGRGA" rel="nofollow">http://ideone.com/KhGRGA</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-ultimate_coder even thread-even depth-1" id="dsq-comment-19377">
        <div id="dsq-comment-header-19377" class="dsq-comment-header">
            <cite id="dsq-cite-19377">
                <span id="dsq-author-user-19377">ultimate_coder</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19377" class="dsq-comment-body">
            <div id="dsq-comment-message-19377" class="dsq-comment-message"><p>worst case : O(n/2)<br />
Is this code good enough?</p>
<pre> <code language="C">
bool checkmajority(int a[],int n)
{
    for(int i=0;i&lt;=n/2;i++)
    {
        if(a[i]==a[i+n/2])
        return 1;
    }
    return 0;
}
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-me-abhinav odd alt thread-odd thread-alt depth-1" id="dsq-comment-19008">
        <div id="dsq-comment-header-19008" class="dsq-comment-header">
            <cite id="dsq-cite-19008">
                <span id="dsq-author-user-19008">me.abhinav</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19008" class="dsq-comment-body">
            <div id="dsq-comment-message-19008" class="dsq-comment-message"><p>ASSUMPTION: There exists a majority element for sure.</p>
<p>We can check if a number is the majority element in O(1) time because arr[n/2] will always be a majority element, where n = size of array.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-me-abhinav even depth-2" id="dsq-comment-19009">
        <div id="dsq-comment-header-19009" class="dsq-comment-header">
            <cite id="dsq-cite-19009">
                <span id="dsq-author-user-19009">me.abhinav</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19009" class="dsq-comment-body">
            <div id="dsq-comment-message-19009" class="dsq-comment-message"><p>The must be sorted.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-19785">
        <div id="dsq-comment-header-19785" class="dsq-comment-header">
            <cite id="dsq-cite-19785">
                <span id="dsq-author-user-19785">ramu</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19785" class="dsq-comment-body">
            <div id="dsq-comment-message-19785" class="dsq-comment-message"><p>1 3 5<br />
is three majority element even it is mid of sorted array???</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-4" id="dsq-comment-19884">
        <div id="dsq-comment-header-19884" class="dsq-comment-header">
            <cite id="dsq-cite-19884">
                <span id="dsq-author-user-19884">ronny</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19884" class="dsq-comment-body">
            <div id="dsq-comment-message-19884" class="dsq-comment-message"><p>guess u missed the ASSUMPTION : the majority element must exist</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-5" id="dsq-comment-19887">
        <div id="dsq-comment-header-19887" class="dsq-comment-header">
            <cite id="dsq-cite-19887">
                <span id="dsq-author-user-19887">ramu</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19887" class="dsq-comment-body">
            <div id="dsq-comment-message-19887" class="dsq-comment-message"><p>hmm if you have already assumed that there exits majority element then its ok&#8230;..else it is wrong.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-18190">
        <div id="dsq-comment-header-18190" class="dsq-comment-header">
            <cite id="dsq-cite-18190">
                <span id="dsq-author-user-18190">Ujjwal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-18190" class="dsq-comment-body">
            <div id="dsq-comment-message-18190" class="dsq-comment-message"><p>boolean check_Majority(int A[], int x)<br />
{<br />
int last=sizeof(A)/sizeof(int);<br />
int mid=last/2;<br />
if(A[mid+1]==A[0] || A[mid-1]==A[last-1]) /*to check whether Majority Element at all exists..!!*/<br />
    if(A[mid]==x)               /*if present, should be at mid position*/<br />
       return true<br />
    else<br />
       return false<br />
}</p>
<p>#correct me if i m wrong</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-16766">
        <div id="dsq-comment-header-16766" class="dsq-comment-header">
            <cite id="dsq-cite-16766">
                <span id="dsq-author-user-16766">Ankit Malhotra</span>
            </cite>
        </div>
        <div id="dsq-comment-body-16766" class="dsq-comment-body">
            <div id="dsq-comment-message-16766" class="dsq-comment-message"><p>Approach 2 can be further simplified with the complexity reduced to log(n/2) instead of logn. We know that only the term[n/2] of array can be majority. We check for first appearance of this term in initial half of array through binary search as log(n/2). If found we check element at the position n/2 ahead. For n being odd element may not be in first half at all. Then we simply check term[n-1] to match term[n/2] to see majority. </p>
<pre> <code language="C">
#include &lt;iostream&gt;
#define MaxCount 101
using namespace::std;
typedef unsigned counter;
typedef long element;

// first insert position in sorted order
// returns false with left = count for item &gt; last
// Check boundaries before use
bool firstsortloc (element terms[], counter n, element x, counter &amp; l)
{
  counter r = n, m;
  l = 0;
  while (l != r) {
    m = l + (r - l)/2;
    if (terms[m] &lt; x)
      l = m + 1;
    else r = m;
  }
  return (l == n ? false : terms[l] == x);
}

bool sortedmajority (element terms[], counter n, element x)
{
  counter p;
  if (x != terms[n/2]) return false;
  if (firstsortloc(terms, n/2, terms[n/2], p))
    p += n/2;
// Assign n to p to indicate failure for even n  
  else p = n % 2 ? n - 1 : n;
  if (p == n || terms[p] != terms[n/2])
    return false;
  else return true;
}

int main()
{
  element x, terms[MaxCount]={0};
  counter n, p;
  cout &lt;&lt; &quot;Enter no. of terms followed by sorted array.&quot; &lt;&lt; endl;
  for (cin &gt;&gt; n, p = 0; p &lt; n; cin &gt;&gt; terms[p++]);
  cout &lt;&lt; &quot;Enter term to search : &quot;;
  cin &gt;&gt; x;
  if(sortedmajority (terms, n, x))
    cout &lt;&lt; x &lt;&lt; &quot; occurs in majority.&quot; &lt;&lt; endl;
  else cout &lt;&lt; x &lt;&lt; &quot;is not in majority.&quot; &lt;&lt; endl;
  return 0;
}

</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-16768">
        <div id="dsq-comment-header-16768" class="dsq-comment-header">
            <cite id="dsq-cite-16768">
                <span id="dsq-author-user-16768">Ankit Malhotra</span>
            </cite>
        </div>
        <div id="dsq-comment-body-16768" class="dsq-comment-body">
            <div id="dsq-comment-message-16768" class="dsq-comment-message"><p>To improve firstsortloc change while condition as follows</p>
<pre> <code language="C">
while (l != r &amp;&amp; term[l] != item)
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-15695">
        <div id="dsq-comment-header-15695" class="dsq-comment-header">
            <cite id="dsq-cite-15695">
                <span id="dsq-author-user-15695">Ganesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15695" class="dsq-comment-body">
            <div id="dsq-comment-message-15695" class="dsq-comment-message"><p>You can find the java code here for Method 2</p>
<p>/**<br />
 * Write a C function to find if a given integer x appears more than n/2 times in a sorted array of n integers.<br />
 * Example:<br />
 * Input: arr[] = {1, 2, 3, 3, 3, 3, 10}, x = 3<br />
 * Output: True (x appears more than n/2 times in the given array)<br />
 * @author GAPIITD<br />
 *<br />
 */<br />
public class MajorityElementInSortedArray {</p>
<p>	public static void main(String[] args) {<br />
		int arr[] = {1, 2, 3, 3, 3, 3, 10};<br />
		int no = 3;<br />
		System.out.println(isMajority(arr, no));<br />
	}</p>
<p>	private static boolean isMajority(int[] arr, int n) {<br />
		int start = 0, end = arr.length, mid = -1;<br />
		while (start != end) {<br />
			mid = (start + end)/2;<br />
			if (n == arr[mid] &amp;&amp; (mid == 0 || n &gt; arr[mid-1])) {<br />
				break;<br />
			}<br />
			else if (n &gt; arr[mid])<br />
				start = mid + 1;<br />
			else<br />
				end = mid &#8211; 1;<br />
		}<br />
		if (mid + arr.length/2 &lt; arr.length &amp;&amp; arr[mid+arr.length/2] == n)<br />
			return true;<br />
		else return false;<br />
	}<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-15611">
        <div id="dsq-comment-header-15611" class="dsq-comment-header">
            <cite id="dsq-cite-15611">
                <span id="dsq-author-user-15611">Sreekanth</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15611" class="dsq-comment-body">
            <div id="dsq-comment-message-15611" class="dsq-comment-message"><p>Hi folks,</p>
<p>Saw a better solution using Moore&#8217;s Algorithm, that is already discussed on this site.</p>
<p><a href="http://www.geeksforgeeks.org/majority-element/" rel="nofollow">http://www.geeksforgeeks.org/majority-element/</a></p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-aygul odd alt depth-2" id="dsq-comment-15627">
        <div id="dsq-comment-header-15627" class="dsq-comment-header">
            <cite id="dsq-cite-15627">
                <span id="dsq-author-user-15627">aygul</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15627" class="dsq-comment-body">
            <div id="dsq-comment-message-15627" class="dsq-comment-message"><p>Moore&#8217;s Algorithm, runs with O(N) time. Here the problem is different. The array is sorted. given solution runs in O(logN)</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-11489">
        <div id="dsq-comment-header-11489" class="dsq-comment-header">
            <cite id="dsq-cite-11489">
                <span id="dsq-author-user-11489">Shubham Lakhiwal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11489" class="dsq-comment-body">
            <div id="dsq-comment-message-11489" class="dsq-comment-message"><p>Common-sense, x must be the n/2th element to occur more than n/2 times.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-11490">
        <div id="dsq-comment-header-11490" class="dsq-comment-header">
            <cite id="dsq-cite-11490">
                <span id="dsq-author-user-11490">Shubham Lakhiwal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11490" class="dsq-comment-body">
            <div id="dsq-comment-message-11490" class="dsq-comment-message"><p>Oh, it&#8217;s not sure.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-11948">
        <div id="dsq-comment-header-11948" class="dsq-comment-header">
            <cite id="dsq-cite-11948">
                <span id="dsq-author-user-11948">Palash</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11948" class="dsq-comment-body">
            <div id="dsq-comment-message-11948" class="dsq-comment-message"><p>Even if x is n/2th element, it may or may not be the majority element. That&#8217;s why binary search is necessary here.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-10151">
        <div id="dsq-comment-header-10151" class="dsq-comment-header">
            <cite id="dsq-cite-10151">
                <span id="dsq-author-user-10151">Rahul Sundar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10151" class="dsq-comment-body">
            <div id="dsq-comment-message-10151" class="dsq-comment-message"><p>How about this non-recursive solution. Here I make use of the fact, that we have to find out the beginning index of the given number(say x). Please let me know your comments,</p>
<pre> <code language="C">
int Majority(int a[], int n,int x)
{
	int low = 0,high = n-1;
	int middle = (low+high)/2;

	if(a[middle] != x)
	{
		printf(&quot;\n%d is not a majority\n&quot;,x);
		return -1;
	}

	for(; low&lt;high; middle = (low+high)/2)
	{
		//check if middle element is x
		if(x==a[middle])
		{
			//check if previous element is also x
			if(x==a[middle-1])
				high = middle;
			else
			{			
				printf(&quot;\nFound the beginning index of %d: %d&quot;,x,middle);
				break;
			}
		}
		//if middle is not x
		else
			low = middle;
	}

	if((a[middle] == x) &amp;&amp; (a[middle+n/2]==x))
	{
		printf(&quot;\n%d is a majority with more than n/2 starting with index %d\n&quot;,x,middle);
	}
	else
	{
		printf(&quot;\n%d is a not a majority with more than n/2 starting with index %d\n&quot;,x,middle);
		return -1;
	}
	return 1;
}
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-10156">
        <div id="dsq-comment-header-10156" class="dsq-comment-header">
            <cite id="dsq-cite-10156">
                <span id="dsq-author-user-10156">Rahul Sundar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10156" class="dsq-comment-body">
            <div id="dsq-comment-message-10156" class="dsq-comment-message"><p>The idea is to get the beginning index of the majority. Say for array {1,1,3,9,11,11,11,11} to find if 11 is majority. Here we have to find beginning index by doing binary search till 9 &lt; 11.</p>
<p>Explanation on the above code:</p>
<p>1. Since we say the majority should be more than n/2. Then it should be the middle element of the array. This condition is checked even before entering binary search logic.<br />
2. In binary search the conditions required are,<br />
   Condition1: If middle and middle-1 element are x. Then shift the high to middle(high = middle).<br />
   Condition2: If middle is not x then shift the low to middle (low=middle)</p>
<p>Repeat step 2 till low&lt;high</p>
<p>In Condition1, we can also check if middle-1 is zero. If so we can break there only. This code change would not be present in the above code. We can add this too.</p>
<p>/* Paste your code here (You may delete these lines if not writing code) */</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-10157">
        <div id="dsq-comment-header-10157" class="dsq-comment-header">
            <cite id="dsq-cite-10157">
                <span id="dsq-author-user-10157">Rahul Sundar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10157" class="dsq-comment-body">
            <div id="dsq-comment-message-10157" class="dsq-comment-message"><p>In the above code, we can improve the condition when [middle-1]==x, by also checking if middle-1 is zero. If so break out.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-10150">
        <div id="dsq-comment-header-10150" class="dsq-comment-header">
            <cite id="dsq-cite-10150">
                <span id="dsq-author-user-10150">Rahul Sundar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10150" class="dsq-comment-body">
            <div id="dsq-comment-message-10150" class="dsq-comment-message"><p>I am not able to register my comment</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-9354">
        <div id="dsq-comment-header-9354" class="dsq-comment-header">
            <cite id="dsq-cite-9354">
                <span id="dsq-author-user-9354">Shyam</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9354" class="dsq-comment-body">
            <div id="dsq-comment-message-9354" class="dsq-comment-message"><p>@GeeksforGeeks can you please explain the Binary search method? i am not able to understand the reasoning behind it?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-9355">
        <div id="dsq-comment-header-9355" class="dsq-comment-header">
            <cite id="dsq-cite-9355">
                <span id="dsq-author-user-9355">Shyam</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9355" class="dsq-comment-body">
            <div id="dsq-comment-message-9355" class="dsq-comment-message"><p>I mean the 2nd Method and not Binary search</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-8826">
        <div id="dsq-comment-header-8826" class="dsq-comment-header">
            <cite id="dsq-cite-8826">
                <span id="dsq-author-user-8826">tutum</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8826" class="dsq-comment-body">
            <div id="dsq-comment-message-8826" class="dsq-comment-message"><p>just return middle  element of the array nothing else</p>
<p>reply me if you have any doubt or found me wrong</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-8827">
        <div id="dsq-comment-header-8827" class="dsq-comment-header">
            <cite id="dsq-cite-8827">
                <span id="dsq-author-user-8827">tutum</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8827" class="dsq-comment-body">
            <div id="dsq-comment-message-8827" class="dsq-comment-message"><p>ohh sorry i didn&#8217;t saw i also have to return true and false<br />
int last=sizeof(A)/sizeof(int);<br />
int mid=last/2;<br />
if(A[mid+1]==A[0] || A[mid-1]==A[last-1])<br />
return true<br />
else<br />
return false</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-6847">
        <div id="dsq-comment-header-6847" class="dsq-comment-header">
            <cite id="dsq-cite-6847">
                <span id="dsq-author-user-6847">tauseef</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6847" class="dsq-comment-body">
            <div id="dsq-comment-message-6847" class="dsq-comment-message"><p>If array is sorted its not a problem<br />
if(array[mid+1]==array[0] || array[mid-1]==array[last])<br />
         array[mid] is majority element<br />
else<br />
         no majority element exists</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-baskin even thread-even depth-1" id="dsq-comment-3588">
        <div id="dsq-comment-header-3588" class="dsq-comment-header">
            <cite id="dsq-cite-3588">
                <span id="dsq-author-user-3588">baskin</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3588" class="dsq-comment-body">
            <div id="dsq-comment-message-3588" class="dsq-comment-message"><p>@GeeksforGeeks<br />
How about this?</p>
<pre> <code language="C">bool isMajority(int arr[], int n, int x)
{
    return x == arr[n/2];
}</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-sandeep odd alt depth-2" id="dsq-comment-3589">
        <div id="dsq-comment-header-3589" class="dsq-comment-header">
            <cite id="dsq-cite-3589">
                <span id="dsq-author-user-3589">Sandeep</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3589" class="dsq-comment-body">
            <div id="dsq-comment-message-3589" class="dsq-comment-message"><p>@baskin:</p>
<p>This approach won&#8217;t if there is no majority element.  </p>
<p>For example, if x is 4, then this will return true for following array</p>
<p>{1, 1, 2, 4, 4, 4, 6, 6}</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-3908">
        <div id="dsq-comment-header-3908" class="dsq-comment-header">
            <cite id="dsq-cite-3908">
                <span id="dsq-author-user-3908">Algoseekar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3908" class="dsq-comment-body">
            <div id="dsq-comment-message-3908" class="dsq-comment-message"><p>@sandeep i don&#8217;t understand ..how make sure about 1st algo..also i think u made code complex..</p>
<p>here is simply implementation</p>
<p>/* Program to check for majority element in a sorted array */<br />
# include<br />
# define bool int</p>
<p>bool isMajority(int arr[], int n, int x)<br />
{<br />
  int i;<br />
  int count=0;</p>
<p> /* search for first occurrence of x in arr[]*/<br />
  for(i = 0; i (n/2))<br />
       return 1;</p>
<p>  }<br />
  return 0;<br />
}     </p>
<p>/* Driver program to check above function */<br />
int main()<br />
{<br />
   int arr[10] = {1, 2, 3, 3, 3, 3, 10};<br />
   int n = 7;<br />
   int x = 3;<br />
   if(isMajority(arr, n, x))<br />
     printf(&#8220;%d appears more than %d times in arr[]&#8221;, x, n/2);<br />
   else<br />
    printf(&#8220;%d does not appear more than %d times in arr[]&#8221;, x, n/2);</p>
<p>   getchar();<br />
   return 0;<br />
}</p>
<p>please let know if anything wrong</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-3" id="dsq-comment-3909">
        <div id="dsq-comment-header-3909" class="dsq-comment-header">
            <cite id="dsq-cite-3909">
                <span id="dsq-author-user-3909">Algoseekar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3909" class="dsq-comment-body">
            <div id="dsq-comment-message-3909" class="dsq-comment-message"><p>Also Please Check in Cse of Method You are Passing extra parameter n in binary search..i don&#8217;t understand this as wel..<br />
see here is i modified program &amp; its working fine </p>
<p>/* Program to check for majority element in a sorted array */<br />
#include<br />
# define bool int</p>
<p>/* If x is present in arr[low&#8230;high] then returns the index of<br />
  first occurance of x, otherwise returns -1 */<br />
int _binarySearch(int arr[], int low, int high, int x);</p>
<p>/* This function returns true if the x is present more than n/2<br />
   times in arr[] of size n */<br />
bool isMajority(int arr[], int n, int x)<br />
{<br />
   int i = _binarySearch(arr, 0, n-1, x);  </p>
<p>   /* check if the element is present more than n/2 times */<br />
   if(((i + n/2) = low)<br />
  {<br />
    int mid = (low + high)/2;  /*low + (high &#8211; low)/2;*/</p>
<p>    /* Check if arr[mid] is the first occurrence of x.<br />
        arr[mid] is first occurrence if x is one of the following<br />
        is true:<br />
        (i)  mid == 0 and arr[mid] == x<br />
        (ii) arr[mid-1]  arr[mid-1]) &amp;&amp; (arr[mid] == x))<br />
      return mid;<br />
    else if(x &gt; arr[mid])<br />
      return _binarySearch(arr, (mid + 1), high, x);<br />
    else<br />
      return _binarySearch(arr, low, (mid -1), x);<br />
  }</p>
<p>  /*Return -1 if element does not appear more than n/2 times*/<br />
  return -1;<br />
}</p>
<p>/* Driver program to check above functions */<br />
int main()<br />
{<br />
   int arr[] = {1, 3, 3, 3,3,4,10};//sorted<br />
   int n = 7;<br />
   int x = 3;<br />
   if(isMajority(arr, n, x))<br />
     printf(&#8220;%d appears more than %d times in arr[]&#8221;, x, n/2);<br />
   else<br />
    printf(&#8220;%d does not appear more than %d times in arr[]&#8221;, x, n/2);</p>
<p>   getchar();<br />
   return 0;<br />
}</p>
<p>Please let me know if anything wrong..???</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-3362">
        <div id="dsq-comment-header-3362" class="dsq-comment-header">
            <cite id="dsq-cite-3362">
                <span id="dsq-author-user-3362">sharat</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3362" class="dsq-comment-body">
            <div id="dsq-comment-message-3362" class="dsq-comment-message"><p>Also the Comment<br />
   /*Return -1 if element does not appear more than n/2 times*/<br />
in _binarysearch method seems in appropriate..</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-3361">
        <div id="dsq-comment-header-3361" class="dsq-comment-header">
            <cite id="dsq-cite-3361">
                <span id="dsq-author-user-3361">sharat</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3361" class="dsq-comment-body">
            <div id="dsq-comment-message-3361" class="dsq-comment-message"><p>in _binarySearch method</p>
<p>There is no use of n, Please remove it.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-2831">
        <div id="dsq-comment-header-2831" class="dsq-comment-header">
            <cite id="dsq-cite-2831">
                <span id="dsq-author-user-2831">Nitin Taluja</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2831" class="dsq-comment-body">
            <div id="dsq-comment-message-2831" class="dsq-comment-message"><p>Soln.<br />
1) find the median of the array, as the number repeated more than n/2 times or equal to n/2 times will only be the median</p>
<p>or in other words find the index of(n/2) using modified version of the quicksort.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-includealldoth odd alt thread-even depth-1" id="dsq-comment-2568">
        <div id="dsq-comment-header-2568" class="dsq-comment-header">
            <cite id="dsq-cite-2568">
                <span id="dsq-author-user-2568">includealldoth</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2568" class="dsq-comment-body">
            <div id="dsq-comment-message-2568" class="dsq-comment-message"><p>What if i want to actually find the majority element..divide and conquer would fail.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-2525">
        <div id="dsq-comment-header-2525" class="dsq-comment-header">
            <cite id="dsq-cite-2525">
                <span id="dsq-author-user-2525">someone</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2525" class="dsq-comment-body">
            <div id="dsq-comment-message-2525" class="dsq-comment-message"><p>How about using a hashset?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-vijayk odd alt thread-even depth-1" id="dsq-comment-2429">
        <div id="dsq-comment-header-2429" class="dsq-comment-header">
            <cite id="dsq-cite-2429">
                <span id="dsq-author-user-2429">vijayk</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2429" class="dsq-comment-body">
            <div id="dsq-comment-message-2429" class="dsq-comment-message"><p>in the linear search method, if condition should be modified as given below or else it will give wrong result<br />
(
<pre> <code language="C">if(a[i] == x &amp;&amp; (i+n/2 &lt;= n-1) &amp;&amp; a[i+n/2] == x)</code> </pre>
<p>similarly in binary search, the if condition should be</p>
<pre> <code language="C">if(( mid == 0 || (mid-1 &gt;= 0) &amp;&amp; x &gt; a[mid-1]) &amp;&amp; (a[mid] == x))</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-smritedua even thread-odd thread-alt depth-1" id="dsq-comment-2308">
        <div id="dsq-comment-header-2308" class="dsq-comment-header">
            <cite id="dsq-cite-2308">
                <span id="dsq-author-user-2308">seeker7</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2308" class="dsq-comment-body">
            <div id="dsq-comment-message-2308" class="dsq-comment-message"><p>for linear search array need not b sorted ,so method 1 does not work,in case my input is:2 3 4 2 2 2 3 2</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-2309">
        <div id="dsq-comment-header-2309" class="dsq-comment-header">
            <cite id="dsq-cite-2309">
                <span id="dsq-author-user-2309">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2309" class="dsq-comment-body">
            <div id="dsq-comment-message-2309" class="dsq-comment-message"><p>@seeker7: The question is about sorted array only (see title). The method 1 uses linear search to check whether the element is majority or not in a given sorted array.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-2241">
        <div id="dsq-comment-header-2241" class="dsq-comment-header">
            <cite id="dsq-cite-2241">
                <span id="dsq-author-user-2241">codegeek</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2241" class="dsq-comment-body">
            <div id="dsq-comment-message-2241" class="dsq-comment-message"><pre> <code language="C">
bool isMajority(int arr[], int n, int x)
{
   /* if mid element is not x then x is not majority element*/
   if (n%2 == 0) {
     if(x != arr[n/2])
       return 0;
   } else if ((x != arr[n/2]) &amp;&amp; (x != arr[n/2 - 1]))
     return 0;
   int i = _binarySearch(arr, 0, n-1, x, n);  
 
   /* check if the element is present more than n/2 times */
   if(((i + n/2) &lt;= (n -1)) &amp;&amp; arr[i + n/2] == x)
     return 1;
   else
     return 0;
}   
</code> </pre>
<p>last comment in _binarySearch() should be<br />
  /*Return -1 if element is not present in array*/</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-2242">
        <div id="dsq-comment-header-2242" class="dsq-comment-header">
            <cite id="dsq-cite-2242">
                <span id="dsq-author-user-2242">codegeek</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2242" class="dsq-comment-body">
            <div id="dsq-comment-message-2242" class="dsq-comment-message"><p>correction:</p>
<pre> <code language="C">   /* if mid element is not x then x is not majority element*/
   if (n%2 != 0) {
     if(x != arr[n/2])
       return 0;
   } else if ((n&gt;=2) &amp;&amp; (x != arr[n/2]) &amp;&amp; (x != arr[n/2 - 1]))
     return 0;</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-2531">
        <div id="dsq-comment-header-2531" class="dsq-comment-header">
            <cite id="dsq-cite-2531">
                <span id="dsq-author-user-2531">Shrikant</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2531" class="dsq-comment-body">
            <div id="dsq-comment-message-2531" class="dsq-comment-message"><p>I agree with this solution.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-1956">
        <div id="dsq-comment-header-1956" class="dsq-comment-header">
            <cite id="dsq-cite-1956">
                <span id="dsq-author-user-1956">seeker7</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1956" class="dsq-comment-body">
            <div id="dsq-comment-message-1956" class="dsq-comment-message"><p>is there any proof to the logic used i.e. is it is a majority element it should also occur at i+n/2..coz it occurs atleast n/2 times?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor even thread-even depth-1" id="dsq-comment-443">
        <div id="dsq-comment-header-443" class="dsq-comment-header">
            <cite id="dsq-cite-443">
                <span id="dsq-author-user-443">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-443" class="dsq-comment-body">
            <div id="dsq-comment-message-443" class="dsq-comment-message"><p>@devendra: x may not be equal to arr[n/2] when it is not a majority element. For example arr[] = [1, 2, 3, 4, 4] and x = 4</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-2497">
        <div id="dsq-comment-header-2497" class="dsq-comment-header">
            <cite id="dsq-cite-2497">
                <span id="dsq-author-user-2497">Ashish</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2497" class="dsq-comment-body">
            <div id="dsq-comment-message-2497" class="dsq-comment-message"><p>Yaa but integer should occur more than n/2 times &#8230;<br />
so it should be minimum n/2+1 times &#8230;..<br />
so here 4 should be minimum 5/2+1=3 times&#8230;</p>
<p>show we will not return 4 as the majority element.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-441">
        <div id="dsq-comment-header-441" class="dsq-comment-header">
            <cite id="dsq-cite-441">
                <span id="dsq-author-user-441">devendra</span>
            </cite>
        </div>
        <div id="dsq-comment-body-441" class="dsq-comment-body">
            <div id="dsq-comment-message-441" class="dsq-comment-message"><p>In above Solution-2 x will always equal to a[n/2] so we dont have to give manually or consider as a parameter</p>
</div>
        </div>

    </li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/check-for-majority-element-in-a-sorted-array/';
var disqus_identifier = '4722 http://geeksforgeeks.org/?p=4722';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Check for Majority Element in a sorted array";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.229 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:33:58 -->

<!-- Compression = gzip -->
<!-- super cache -->