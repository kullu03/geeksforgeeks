<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Find the repeating and the missing | Added 3 new methods  - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/find-a-repeating-and-a-missing-number/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Find the repeating and the missing | Added 3 new methods  - GeeksforGeeks" />
<meta property="og:description" content="Given an unsorted array of size n. Array elements are in range from 1 to n. One number from set {1, 2, &#8230;n} is missing and one number occurs twice in array. Find these two numbers. Examples: arr[] = {3, 1, 3} Output: 2, 3 // 2 is missing and 3 occurs twice arr[] = &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/find-a-repeating-and-a-missing-number/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:section" content="Arrays" />
<meta property="article:published_time" content="2011-08-19T02:01:19+00:00" />
<meta property="article:modified_time" content="2012-02-08T22:36:32+00:00" />
<meta property="og:updated_time" content="2012-02-08T22:36:32+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.514 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417111489 210.212.53.139 172.19.11.169';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Find the repeating and the missing | Added 3 new methods</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Given an unsorted array of size n. Array elements are in range from 1 to n.  One number from set {1, 2, &#8230;n} is missing and one number occurs twice in array. Find these two numbers.<span id="more-11946"></span></p>
<p>Examples:</p>
<pre>  arr[] = {3, 1, 3}
  Output: 2, 3   // 2 is missing and 3 occurs twice 

  arr[] = {4, 3, 6, 2, 1, 1}
  Output: 1, 5  // 5 is missing and 1 occurs twice 
</pre>
<p><strong>Method 1 (Use Sorting)</strong><br />
1) Sort the input array.<br />
2) Traverse the array and check for missing and repeating.</p>
<p>Time Complexity: O(nLogn)</p>
<p>Thanks to LoneShadow for suggesting this method.</p>
<p><strong>Method 2 (Use count array)</strong><br />
1) Create a temp array temp[] of size n with all initial values as 0.<br />
2) Traverse the input array arr[], and do following for each arr[i]<br />
&#8230;&#8230;a)  if(temp[arr[i]] == 0) temp[arr[i]] = 1;<br />
&#8230;&#8230;b)  if(temp[arr[i]] == 1) output &#8220;arr[i]&#8221;   //repeating<br />
3) Traverse temp[] and output the array element having value as 0 (This is the missing element)</p>
<p>Time Complexity: O(n)<br />
Auxiliary Space: O(n)</p>
<p><strong>Method 3 (Use elements as Index and mark the visited places)</strong><br />
Traverse the array.  While traversing, use absolute value of every element as index and make the value at this index as negative to mark it visited.  If something is already marked negative then this is the repeating element.  To find missing, traverse the array again and look for a positive value.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;

void printTwoElements(int arr[], int size)
{
    int i;
    printf(&quot;\n The repeating element is&quot;);

    for(i = 0; i &lt; size; i++)
    {
        if(arr[abs(arr[i])-1] &gt; 0)
            arr[abs(arr[i])-1] = -arr[abs(arr[i])-1];
        else
            printf(&quot; %d &quot;, abs(arr[i]));
    }

    printf(&quot;\nand the missing element is &quot;);
    for(i=0; i&lt;size; i++)
    {
        if(arr[i]&gt;0)
            printf(&quot;%d&quot;,i+1);
    }
}

/* Driver program to test above function */
int main()
{
    int arr[] = {7, 3, 4, 5, 5, 6, 2};
    int  n = sizeof(arr)/sizeof(arr[0]);
    printTwoElements(arr, n);
    return 0;
}
</pre>
<p>Time Complexity: O(n)</p>
<p>Thanks to Manish Mishra for suggesting this method. </p>
<p><strong>Method 4 (Make two equations)</strong><br />
Let x be the missing and y be the repeating element.</p>
<p>1) Get sum of all numbers.<br />
Sum of array computed  S = n(n+1)/2 &#8211; x + y<br />
2) Get product of all numbers.<br />
Product of array computed P = 1*2*3*&#8230;*n * y / x<br />
3) The above two steps give us two equations, we can solve the equations and get the values of x and y.</p>
<p>Time Complexity: O(n)</p>
<p>Thanks to disappearedng for suggesting this solution.  </p>
<p>This method can cause arithmetic overflow as we calculate product and sum of all array elements. See <a href="http://www.geeksforgeeks.org/archives/11946/comment-page-1#comment-3796">this </a> for changes suggested by <a href="http://www.geeksforgeeks.org/archives/11946/comment-page-1#comment-3796">john </a> to reduce the chances of overflow.</p>
<p><strong>Method 5 (Use XOR)</strong><br />
Let x and y be the desired output elements.<br />
Calculate XOR of all the array elements.</p>
<pre>     <em>xor1 </em>= arr[0]^arr[1]^arr[2].....arr[n-1]</pre>
<p>XOR the result with all numbers from 1 to n</p>
<pre>     <em>xor1 </em>= xor1^1^2^.....^n</pre>
<p>In the result <em>xor1</em>, all elements would nullify each other except x and y. All the bits that are set in <em>xor1</em> will be set in either x or y. So if we take any set bit (We have chosen the rightmost set bit in code) of <em>xor1 </em>and divide the elements of the array in two sets – one set of elements with same bit set and other set with same bit not set. By doing so, we will get x in one set and y in another set. Now if we do XOR of all the elements in first set, we will get x, and by doing same in other set we will get y.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

/* The output of this function is stored at *x and *y */
void getTwoElements(int arr[], int n, int *x, int *y)
{
  int xor1;   /* Will hold xor of all elements and numbers from 1 to n */
  int set_bit_no;  /* Will have only single set bit of xor1 */
  int i;
  *x = 0;
  *y = 0;

  xor1 = arr[0];

  /* Get the xor of all array elements elements */
  for(i = 1; i &lt; n; i++)
     xor1 = xor1^arr[i];

  /* XOR the previous result with numbers from 1 to n*/
  for(i = 1; i &lt;= n; i++)
     xor1 = xor1^i;

  /* Get the rightmost set bit in set_bit_no */
  set_bit_no = xor1 &amp; ~(xor1-1);

  /* Now divide elements in two sets by comparing rightmost set
   bit of xor1 with bit at same position in each element. Also, get XORs
   of two sets. The two XORs are the output elements.
   The following two for loops serve the purpose */
  for(i = 0; i &lt; n; i++)
  {
    if(arr[i] &amp; set_bit_no)
     *x = *x ^ arr[i]; /* arr[i] belongs to first set */
    else
     *y = *y ^ arr[i]; /* arr[i] belongs to second set*/
  }
  for(i = 1; i &lt;= n; i++)
  {
    if(i &amp; set_bit_no)
     *x = *x ^ i; /* i belongs to first set */
    else
     *y = *y ^ i; /* i belongs to second set*/
  }

  /* Now *x and *y hold the desired output elements */
}

/* Driver program to test above function */
int main()
{
  int arr[] = {1, 3, 4, 5, 5, 6, 2};
  int *x = (int *)malloc(sizeof(int));
  int *y = (int *)malloc(sizeof(int));
  int  n = sizeof(arr)/sizeof(arr[0]);
  getTwoElements(arr, n, x, y);
  printf(&quot; The two elements are %d and %d&quot;, *x, *y);
  getchar();
}
</pre>
<p>Time Complexity: O(n)</p>
<p>This method doesn&#8217;t cause overflow, but it doesn&#8217;t tell which one occurs twice and which one is missing.  We can add one more step that checks which one is missing and which one is repeating. This can be easily done in O(n) time.</p>
<p>Please write comments if you find the above codes/algorithms incorrect, or find other ways to solve the same problem.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array-set-2-expected-linear-time/" title="K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)">K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)</a></li><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array/" title="K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1">K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1</a></li><li><a href="http://www.geeksforgeeks.org/time-complexity-insertion-sort-inversions/" title="Time complexity of insertion sort when there are O(n) inversions?">Time complexity of insertion sort when there are O(n) inversions?</a></li><li><a href="http://www.geeksforgeeks.org/check-two-given-sets-disjoint/" title="How to check if two given sets are disjoint?">How to check if two given sets are disjoint?</a></li><li><a href="http://www.geeksforgeeks.org/minimum-number-platforms-required-railwaybus-station/" title="Minimum Number of Platforms Required for a Railway/Bus Station">Minimum Number of Platforms Required for a Railway/Bus Station</a></li><li><a href="http://www.geeksforgeeks.org/given-two-sorted-arrays-number-x-find-pair-whose-sum-closest-x/" title="Find the closest pair from two sorted arrays">Find the closest pair from two sorted arrays</a></li><li><a href="http://www.geeksforgeeks.org/print-elements-sorted-order-row-column-wise-sorted-matrix/" title="Print all elements in sorted order from row and column wise sorted matrix">Print all elements in sorted order from row and column wise sorted matrix</a></li><li><a href="http://www.geeksforgeeks.org/length-largest-subarray-contiguous-elements-set-1/" title="Length of the largest subarray with contiguous elements | Set 1">Length of the largest subarray with contiguous elements | Set 1</a></li></ul>
<p></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Ffind-a-repeating-and-a-missing-number%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/find-a-repeating-and-a-missing-number/" data-text="Find the repeating and the missing | Added 3 new methods" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/find-a-repeating-and-a-missing-number/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-29806">
        <div id="dsq-comment-header-29806" class="dsq-comment-header">
            <cite id="dsq-cite-29806">
                <span id="dsq-author-user-29806">Vivek</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29806" class="dsq-comment-body">
            <div id="dsq-comment-message-29806" class="dsq-comment-message"><p>for i=0 to n-1<br />
 arr[ (arr[i]-1)%n] + = n;</p>
<p>for i=0 to n-1<br />
    if(arr[i]&gt;2n)<br />
   (i+1) is the repeated no<br />
    if(arr[i] &lt; n)<br />
   (i+1) is the missing no</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-28327">
        <div id="dsq-comment-header-28327" class="dsq-comment-header">
            <cite id="dsq-cite-28327">
                <span id="dsq-author-user-28327">Robert</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28327" class="dsq-comment-body">
            <div id="dsq-comment-message-28327" class="dsq-comment-message"><p>let x1 = xor all the elements in array.</p>
<p>let x2 = xor elements 1-n</p>
<p>let xr = x1 xor x2.</p>
<p>repeated element = xr xor x2.</p>
<p>missing element = xr xor x1</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-29088">
        <div id="dsq-comment-header-29088" class="dsq-comment-header">
            <cite id="dsq-cite-29088">
                <span id="dsq-author-user-29088">wasseypuriyan</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29088" class="dsq-comment-body">
            <div id="dsq-comment-message-29088" class="dsq-comment-message"><p>According to your formula<br />
repeated elem = xr xor x2 = (x1 xor x2) xor x2 = x1<br />
which is xor of all elements in array not the repeated element.<br />
On very similar lines I can say that your formula won&#8217;t work for missing element either.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-27558">
        <div id="dsq-comment-header-27558" class="dsq-comment-header">
            <cite id="dsq-cite-27558">
                <span id="dsq-author-user-27558">srinivas</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27558" class="dsq-comment-body">
            <div id="dsq-comment-message-27558" class="dsq-comment-message"><p>#include<br />
int main()<br />
{<br />
int i,n,sum=0,actual_sum,twise;<br />
int a[]={1,2,5,5,4};<br />
n=sizeof(a)/sizeof(int);<br />
actual_sum=(n*(n+1))/2;<br />
for(i=0;i(2*n+2))<br />
twise=a[i]%(n+1);<br />
}<br />
printf(&#8220;twise=%d,mis=%d&#8221;,twise,twise+(actual_sum-sum));<br />
return 0;<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-26888">
        <div id="dsq-comment-header-26888" class="dsq-comment-header">
            <cite id="dsq-cite-26888">
                <span id="dsq-author-user-26888">Ravish</span>
            </cite>
        </div>
        <div id="dsq-comment-body-26888" class="dsq-comment-body">
            <div id="dsq-comment-message-26888" class="dsq-comment-message"><p>I think there is no need for the last for loop in 5th method.*x and *y already have the desired value.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-15645">
        <div id="dsq-comment-header-15645" class="dsq-comment-header">
            <cite id="dsq-cite-15645">
                <span id="dsq-author-user-15645">Ganesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15645" class="dsq-comment-body">
            <div id="dsq-comment-message-15645" class="dsq-comment-message"><p>You can find java code here:</p>
<p>/**<br />
 * Given an unsorted array of size n. Array elements are in range from 1 to n.<br />
 * One number from set {1, 2, …n} is missing and one number occurs twice in array. Find these two numbers.<br />
 * Example: arr[] = {3, 1, 3}<br />
 * Output: 2, 3   // 2 is missing and 3 occurs twice<br />
 *<br />
 * @author GAPIITD<br />
 *<br />
 */<br />
public class FindTheRepeatingAndTheMissing {</p>
<p>	public static void main(String[] args) {<br />
		int arr[] = {1, 3, 4, 5, 5, 6, 2};<br />
		FindRepeatingAndMissing(arr);<br />
	}</p>
<p>	private static void FindRepeatingAndMissing(int[] arr) {<br />
		for (int i = 0; i &lt; arr.length; i++) {<br />
			int index = Math.abs(arr[i]) &#8211; 1;<br />
			if (index &lt; arr.length) {<br />
				if (arr[index] &gt; 0)<br />
					arr[index] = -arr[index];<br />
				else System.out.println(&quot;Repeated: &quot; + (index + 1));<br />
			}<br />
		}<br />
		for (int i = 0; i &lt; arr.length; i++) {<br />
			if (arr[i] &gt; 0)<br />
				System.out.println(&quot;Missing: &quot; + (i+1));<br />
		}<br />
	}<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-ramdas even thread-odd thread-alt depth-1" id="dsq-comment-14862">
        <div id="dsq-comment-header-14862" class="dsq-comment-header">
            <cite id="dsq-cite-14862">
                <span id="dsq-author-user-14862">ramdas</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14862" class="dsq-comment-body">
            <div id="dsq-comment-message-14862" class="dsq-comment-message"><p>hey geeks here is a problem statment:-<br />
search  a particular  no. in a given array ( return with how many times and with positions)&#8230;.array can be any size and the no. inside array also any&#8230;&#8230;.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-15297">
        <div id="dsq-comment-header-15297" class="dsq-comment-header">
            <cite id="dsq-cite-15297">
                <span id="dsq-author-user-15297">nit_d</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15297" class="dsq-comment-body">
            <div id="dsq-comment-message-15297" class="dsq-comment-message"><p>Are elements sorted? </p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-9620">
        <div id="dsq-comment-header-9620" class="dsq-comment-header">
            <cite id="dsq-cite-9620">
http://algorithmsea.blogspot.com                <span id="dsq-author-user-9620">Vikky</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9620" class="dsq-comment-body">
            <div id="dsq-comment-message-9620" class="dsq-comment-message"><p>Code for the logic given by me :<br />
<a href="http://www.geeksforgeeks.org/archives/11946#comment-9618" rel="nofollow">http://www.geeksforgeeks.org/archives/11946#comment-9618</a></p>
<pre> <code language="C">
#include&lt;stdio.h&gt;

/*
 This program assumes that array elements are given according to problem statement.
 * ie. from 1..n
 */

int main(){
    
    int arr[]={1,2,3,4,5,3};
    int len=sizeof(arr)/sizeof(arr[0]);    
    
    int sum1=0,sum3=0;
    int sum=((len+1)*len)/2;
    for(int i=0;i&lt;len;i++)
        sum1+=arr[i];
    int eq1=sum-sum1;   //  (x-y)
        
    for(int i=0;i&lt;len;i++)
        sum3+=(arr[i]*arr[i]);    
    
    int sum2=((len)*(len+1)*(2*len+1))/6;   //sum of squares (n)(n+1)(2n+1)/6
    int eq2=sum2-sum3;   // (x^2-y^2) or (x+y)*(x-y)
    
    int val=eq2/eq1; // will give (x+y)    
    
    printf(&quot;Missing Number is:%d\n&quot;,(eq1+val)/2);  // Print x
    printf(&quot;Repeated Number is:%d\n&quot;,(val-eq1)/2); // Print y 
    
    return 0;
}
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-8358">
        <div id="dsq-comment-header-8358" class="dsq-comment-header">
            <cite id="dsq-cite-8358">
                <span id="dsq-author-user-8358">cracker</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8358" class="dsq-comment-body">
            <div id="dsq-comment-message-8358" class="dsq-comment-message"><p>How could method 5 be extended if there are more than one repeating and missing numbers.. could anyone please post your ideas on this..</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-8221">
        <div id="dsq-comment-header-8221" class="dsq-comment-header">
            <cite id="dsq-cite-8221">
                <span id="dsq-author-user-8221">BlackMath</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8221" class="dsq-comment-body">
            <div id="dsq-comment-message-8221" class="dsq-comment-message"><p>This is a java code and is inspired by a similar post, but there the method did not get selected.<br />
This is a nice solution with Time complexity O(n), but we traverse the array thrice.</p>
<pre> <code language="Java">
/* Paste your code here (You may delete these lines if not writing code) */
public class FindRepeatingAndMissing
{
  public static void main (String args[])
  {
    int arr[] = new int[] {4,2,1,6,5,6};
    int size = 6;
    
    for (int i = 0; i &lt; size; i++)
      if (arr[i] != i+1)
    {
      int tmp = arr[arr[i]-1];
      arr[arr[i]-1] = arr[i];
      arr[i] = tmp;
    }
    
    for (int i = 0; i &lt; size; i++)
      if (arr[i] != i+1)
    {
      int tmp = arr[arr[i]-1];
      arr[arr[i]-1] = arr[i];
      arr[i] = tmp;
    }
    
    for (int i = 0; i &lt; size; i++)
      if (arr[i] != i+1)
    {
      System.out.println (&quot;The repeating no is : &quot; + arr[i]);
      System.out.println (&quot;The missing no is : &quot; + (i+1));
    }
  }
}
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-nagesforyou odd alt thread-odd thread-alt depth-1" id="dsq-comment-7436">
        <div id="dsq-comment-header-7436" class="dsq-comment-header">
            <cite id="dsq-cite-7436">
                <span id="dsq-author-user-7436">Nages</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7436" class="dsq-comment-body">
            <div id="dsq-comment-message-7436" class="dsq-comment-message"><pre> <code language="Java">
public class ArrayDuplicate {

	public static void main(String[] args) {

		int a[] = new int[] { 3, 5, 1, 6, 4, 7, 5 };

		int len = a.length;

		int sum = 0;
		int sum2 = 0;

		for (int i = 0; i &lt; len; ++i) {
			sum += a[i];
			sum2 += a[i] * a[i];
		}

		int asum = (len * (len + 1)) / 2;
		int asum2 = (len * (len + 1) * (2 * len + 1)) / 6;

		int missDiff = asum - sum; // x -y
		int missDiff2 = asum2 - sum2; // x^2 - y^2 = (x+y) * (x-y)
		int missSum = missDiff2 / missDiff;

		System.out.println(&quot;Missing number : &quot; + (missDiff + missSum) / 2);
		System.out.println(&quot;Duplicated number : &quot; + (missSum - missDiff) / 2);
	}
}

</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-psychocoder even thread-even depth-1" id="dsq-comment-7419">
        <div id="dsq-comment-header-7419" class="dsq-comment-header">
            <cite id="dsq-cite-7419">
                <span id="dsq-author-user-7419">PsychoCoder</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7419" class="dsq-comment-body">
            <div id="dsq-comment-message-7419" class="dsq-comment-message"><p>In method 5 : we can detect two desired results. But can we find which one is missing and which one is repeating. I mean with traversing the array for another time to detect which one is missing or repeating!!</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-7424">
        <div id="dsq-comment-header-7424" class="dsq-comment-header">
            <cite id="dsq-cite-7424">
                <span id="dsq-author-user-7424">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7424" class="dsq-comment-body">
            <div id="dsq-comment-message-7424" class="dsq-comment-message"><p>Yes, we can add a postprocessing step to figure out which one is missing and which one is repeating. We have added a note for the same.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-7112">
        <div id="dsq-comment-header-7112" class="dsq-comment-header">
            <cite id="dsq-cite-7112">
                <span id="dsq-author-user-7112">Venkatesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7112" class="dsq-comment-body">
            <div id="dsq-comment-message-7112" class="dsq-comment-message"><p>correct me if i am wrong. seems like method 3 overruns array. </p>
<p>for ex: my input is 5 4 3 2. arr[abs(arr[i])-1] = arr[4] which is overrun. isn&#8217;t it?</p>
<p>for(i = 0; i  0)<br />
            arr[abs(arr[i])-1] = -arr[abs(arr[i])-1];<br />
        else<br />
            printf(&#8221; %d &#8220;, abs(arr[i]));<br />
    }</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-7109">
        <div id="dsq-comment-header-7109" class="dsq-comment-header">
            <cite id="dsq-cite-7109">
                <span id="dsq-author-user-7109">Venkatesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7109" class="dsq-comment-body">
            <div id="dsq-comment-message-7109" class="dsq-comment-message"><p><a href="http://www.c-sharpcorner.com/Blogs/7036/find-the-missing-and-repeating-number-in-an-array.aspx" rel="nofollow">http://www.c-sharpcorner.com/Blogs/7036/find-the-missing-and-repeating-number-in-an-array.aspx</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-7050">
        <div id="dsq-comment-header-7050" class="dsq-comment-header">
            <cite id="dsq-cite-7050">
                <span id="dsq-author-user-7050">Venkatesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7050" class="dsq-comment-body">
            <div id="dsq-comment-message-7050" class="dsq-comment-message"><p>what does following means</p>
<p>#include&amp;amp;amp;lt;stdio.h&amp;amp;amp;gt;<br />
#include&amp;amp;amp;lt;stdlib.h&amp;amp;amp;gt;</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-7051">
        <div id="dsq-comment-header-7051" class="dsq-comment-header">
            <cite id="dsq-cite-7051">
                <span id="dsq-author-user-7051">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7051" class="dsq-comment-body">
            <div id="dsq-comment-message-7051" class="dsq-comment-message"><p>This has been Fixed.  Please check now.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-5741">
        <div id="dsq-comment-header-5741" class="dsq-comment-header">
            <cite id="dsq-cite-5741">
http://www.geekyportal.com/                <span id="dsq-author-user-5741">GeekyPortal.com</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5741" class="dsq-comment-body">
            <div id="dsq-comment-message-5741" class="dsq-comment-message"><p>I think 2nd one is the easiest among all.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-5816">
        <div id="dsq-comment-header-5816" class="dsq-comment-header">
            <cite id="dsq-cite-5816">
http://www.nitinkumar.wordpress.com                <span id="dsq-author-user-5816">Nitin Kumar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5816" class="dsq-comment-body">
            <div id="dsq-comment-message-5816" class="dsq-comment-message"><p>But in case n is too large&#8230; then creating an array of that size is not possible.</p>
<p>and How come the complexity of method 5 is just O(n) ??</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-kartik even depth-3" id="dsq-comment-5818">
        <div id="dsq-comment-header-5818" class="dsq-comment-header">
            <cite id="dsq-cite-5818">
                <span id="dsq-author-user-5818">kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5818" class="dsq-comment-body">
            <div id="dsq-comment-message-5818" class="dsq-comment-message"><p>Time complexity of Method 5 is O(n) only.  There are no nested loops.  Why do you think that it is more than O(n)?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-4" id="dsq-comment-5822">
        <div id="dsq-comment-header-5822" class="dsq-comment-header">
            <cite id="dsq-cite-5822">
http://www.nitinkumar.wordpress.com                <span id="dsq-author-user-5822">Nitin Kumar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5822" class="dsq-comment-body">
            <div id="dsq-comment-message-5822" class="dsq-comment-message"><p>Ok I got it.. O(n)!!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-5476">
        <div id="dsq-comment-header-5476" class="dsq-comment-header">
            <cite id="dsq-cite-5476">
                <span id="dsq-author-user-5476">Satyarth</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5476" class="dsq-comment-body">
            <div id="dsq-comment-message-5476" class="dsq-comment-message"><p>I have another approach to solve this problem.</p>
<pre> <code language="C">#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;

void swap(int *x, int *y)
{
	int t;
	t = *x;
	*x = *y;
	*y = t;
}

void find_missing(int A[],int n){
	int i;
	for(i=1;i&lt;=n;++i){
		while(A[i]!=i &amp;&amp; A[i]!=A[A[i]]){
			swap(&amp;A[i],&amp;A[A[i]]);
		}
	}
	for(i=1;i&lt;=n;i++){
		if(A[i]!=i){
			printf(&quot;%d is missing and %d is repeated\n&quot;,i,A[i]);
		}
	}
}

int main(){
	int n,x,i;
	scanf(&quot;%d&quot;,&amp;n);
	int A[n+1];
	for(i=0;i&lt;n;i++){
		scanf(&quot;%d&quot;,&amp;A[i+1]);
	}
	find_missing(A,n);
	return 0;
}
</code> </pre>
<p>Time &#8211; O(n)<br />
Space &#8211; O(1)</p>
<p>Kindly let me know if something fails or is missing.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-5375">
        <div id="dsq-comment-header-5375" class="dsq-comment-header">
            <cite id="dsq-cite-5375">
                <span id="dsq-author-user-5375">Mritiyunjay</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5375" class="dsq-comment-body">
            <div id="dsq-comment-message-5375" class="dsq-comment-message"><p>Easiest and fastest way using sum and sum of squares formula.. </p>
<p>Assume the array is 1 to n and sum of the numbers in shuffled array(with one repeating and one missing number) be S.</p>
<p>Let a be the repeated number and b be the missing number.</p>
<p>so,<br />
s(actual sum of numbers) = n*(n+1)/2 + a -b &#8230;&#8230;(1)<br />
s'(actual sum of squares of numbers) = {n*(n+1)*(2n+1)/6} + a^2 &#8211; b^2 &#8230;.(2)</p>
<p>by (2)/(1) get value of a+b &#8230;(3)</p>
<p>Now, solve for a and b from equation (1) and (3)</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-caesiumx even thread-odd thread-alt depth-1" id="dsq-comment-5301">
        <div id="dsq-comment-header-5301" class="dsq-comment-header">
            <cite id="dsq-cite-5301">
                <span id="dsq-author-user-5301">CaesiumX</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5301" class="dsq-comment-body">
            <div id="dsq-comment-message-5301" class="dsq-comment-message"><p>how about this&#8230;</p>
<pre> <code language="C">
void tofind(int a[],int size)
{
	int i,j,cnt;
	for(i=1;i&lt;=size;i++)
	{
		for(cnt=0,j=0;j&lt;size;j++)
		{
			if(i==a[j])
				cnt++;
		}
		if(cnt&gt;1)
			printf(&quot;Repeating:%d\n&quot;,i);
		else if(cnt==0)
			printf(&quot;Missing:%d\n&quot;,i);
	}
}
</code> </pre>
<p>not sure if this is covered in the methods posted.<br />
Kindly let me know if something fails or is missing</p>
<p>Regards</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-5009">
        <div id="dsq-comment-header-5009" class="dsq-comment-header">
            <cite id="dsq-cite-5009">
http://www.geeksuper.com/                <span id="dsq-author-user-5009">Faisy</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5009" class="dsq-comment-body">
            <div id="dsq-comment-message-5009" class="dsq-comment-message"><p>I think Method 5 is the easiest.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-sandeep even thread-odd thread-alt depth-1" id="dsq-comment-4970">
        <div id="dsq-comment-header-4970" class="dsq-comment-header">
            <cite id="dsq-cite-4970">
http://geeksforgeeks.org/                <span id="dsq-author-user-4970">Sandeep</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4970" class="dsq-comment-body">
            <div id="dsq-comment-message-4970" class="dsq-comment-message"><p>@Manish Mishram, @disappearedng, @john and @LoneShadow:</p>
<p>Thanks for your contribution. We have added the suggested methods to the original post.  Keep it up!!</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-4966">
        <div id="dsq-comment-header-4966" class="dsq-comment-header">
            <cite id="dsq-cite-4966">
                <span id="dsq-author-user-4966">LoneShadow</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4966" class="dsq-comment-body">
            <div id="dsq-comment-message-4966" class="dsq-comment-message"><p>Another obvious solution I didnt see, but nlogn. Sort and walk the array.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-4944">
        <div id="dsq-comment-header-4944" class="dsq-comment-header">
            <cite id="dsq-cite-4944">
                <span id="dsq-author-user-4944">asd</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4944" class="dsq-comment-body">
            <div id="dsq-comment-message-4944" class="dsq-comment-message"><p>This gives the rightmost set bit </p>
<p>set_no_bits = (xor1&amp;-xor1) + 1</p>
<p>The one given in the code doesn&#8217;t work&#8230;</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-sandeep odd alt depth-2" id="dsq-comment-4945">
        <div id="dsq-comment-header-4945" class="dsq-comment-header">
            <cite id="dsq-cite-4945">
http://geeksforgeeks.org/                <span id="dsq-author-user-4945">Sandeep</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4945" class="dsq-comment-body">
            <div id="dsq-comment-message-4945" class="dsq-comment-message"><p>@asd: could you please provide an example for which the logic given in post didn&#8217;t work?</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-4879">
        <div id="dsq-comment-header-4879" class="dsq-comment-header">
            <cite id="dsq-cite-4879">
                <span id="dsq-author-user-4879">raman</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4879" class="dsq-comment-body">
            <div id="dsq-comment-message-4879" class="dsq-comment-message"><p>We can find the repeating element in O(n) by negating each element method.</p>
<p>then compute the sum of given array and compare with n*(n+1) find the difference<br />
the abs(difference)will be the missing element.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-manish_mnnit odd alt thread-odd thread-alt depth-1" id="dsq-comment-4280">
        <div id="dsq-comment-header-4280" class="dsq-comment-header">
            <cite id="dsq-cite-4280">
                <span id="dsq-author-user-4280">Manish Mishra</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4280" class="dsq-comment-body">
            <div id="dsq-comment-message-4280" class="dsq-comment-message"><p>how about this..</p>
<pre> <code language="C">
void printRepeating(int arr[], int size)
{
  int i;

  printf(&quot;\n The repeating element is&quot;);

  for(i = 0; i &lt; size; i++)
  {
    if(arr[abs(arr[i])-1] &gt; 0)
      arr[abs(arr[i])-1] = -arr[abs(arr[i])-1];
    else
      printf(&quot; %d &quot;, abs(arr[i]));
  }
 printf(&quot;\nand the missing element is &quot;);
 for(i=0;i&lt;size;i++)
 {
 if(arr[i]&gt;0)
  printf(&quot;%d&quot;,i+1);
 }
}
</code> </pre>
<p>This is same as the logic used in two of the previous questions..<br />
Correct me if the above code fails in any of the test cases..</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-sandeep even depth-2" id="dsq-comment-4301">
        <div id="dsq-comment-header-4301" class="dsq-comment-header">
            <cite id="dsq-cite-4301">
http://geeksforgeeks.org/                <span id="dsq-author-user-4301">Sandeep</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4301" class="dsq-comment-body">
            <div id="dsq-comment-message-4301" class="dsq-comment-message"><p>@Manish Mishra: Thanks for suggesting a new method.  The method seems to be working.  We will analyze and test it further and add to the original post.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-3822">
        <div id="dsq-comment-header-3822" class="dsq-comment-header">
            <cite id="dsq-cite-3822">
                <span id="dsq-author-user-3822">Gaurav</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3822" class="dsq-comment-body">
            <div id="dsq-comment-message-3822" class="dsq-comment-message"><p>/* Get the rightmost set bit in set_bit_no */<br />
  set_bit_no = xor1 &amp; ~(xor1-1);</p>
<p>Please explain this line.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-3796">
        <div id="dsq-comment-header-3796" class="dsq-comment-header">
            <cite id="dsq-cite-3796">
                <span id="dsq-author-user-3796">john</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3796" class="dsq-comment-body">
            <div id="dsq-comment-message-3796" class="dsq-comment-message"><p>disappearedng&#8217;s method can be improved to reduce the chance of overflow by replacing the multiplcations of all numbers with 1^2 + 2^2 + 3^2 + &#8230;. + n^2 = n(n+1)(2n+1)/6.<br />
 So we have<br />
A. n(n+1)/2 &#8211; duplicate + missing = sum_of_the_array<br />
B. n(n+1)(2n+1)/6 -duplicate^2 + missing^2 = sum_of_array_square<br />
We can solve the system to find the duplicate and missing in O(n) time and O(1) space. The chance of overflow can be reduced further in coding. Below is the Java implementation:  </p>
<pre> <code language="Java">
public void findMissionAndDuplicate(int[] arr) {
	long sum1 = 0;
	long sum2 = 0;
	for (int i = 0; i &lt; arr.length; i++) {
		sum1 += i + 1 - arr[i];
		sum2 += (i + 1 - arr[i]) * (i + 1 + arr[i]);
	}
	long d_minus_m = sum1;
	long d_plus_m = sum2 / d_minus_m;
	long m = (d_plus_m + d_minus_m) / 2;
	long d = (d_plus_m - d_minus_m) / 2;

	System.out.println(Arrays.toString(arr));
	System.out.println(&quot;Missing number: &quot; + m);
	System.out.println(&quot;Duplicated number: &quot; + d);
}
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-7528">
        <div id="dsq-comment-header-7528" class="dsq-comment-header">
            <cite id="dsq-cite-7528">
                <span id="dsq-author-user-7528">atul</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7528" class="dsq-comment-body">
            <div id="dsq-comment-message-7528" class="dsq-comment-message"><p>how did you solve these equations using these technique..i didnt get the idea.  </p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-disappearedng even thread-even depth-1" id="dsq-comment-3753">
        <div id="dsq-comment-header-3753" class="dsq-comment-header">
            <cite id="dsq-cite-3753">
                <span id="dsq-author-user-3753">disappearedng</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3753" class="dsq-comment-body">
            <div id="dsq-comment-message-3753" class="dsq-comment-message"><p>Actually,</p>
<p>I think rather than writing code, let&#8217;s step back and do some math.</p>
<p>Given 1&#8230;n, 1 missing and 1 repeated,<br />
let x be missing and y be repeated.</p>
<p>We have: </p>
<p>n(n+1)/2 &#8211; x + y = { sum of array computed }<br />
1*2*3*&#8230;*n * y / x = { multiplication of all elements }</p>
<p>Then you have two equations and you can solve.</p>
<p>You can code this up, but coding a solution for this might be a little tricky. </p>
<p>time: O(n)<br />
space: O(1) </p>
<p>This is easier to understand</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-3754">
        <div id="dsq-comment-header-3754" class="dsq-comment-header">
            <cite id="dsq-cite-3754">
                <span id="dsq-author-user-3754">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3754" class="dsq-comment-body">
            <div id="dsq-comment-message-3754" class="dsq-comment-message"><p>@disappearedng: Thanks for suggesting a new method. This is another method with O(n) time complexity and O(1) extra space.<br />
Following are the points to note when this method is compared with the XOR method given in post.<br />
(a)  This method also tells which one is repeating and which one is missing, XOR method doesn&#8217;t provide this info.<br />
(b) This method can cause airthmatic overflow which is not possible in XOR method.</p>
<p>We will analyze this further and add to the original post.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-3923">
        <div id="dsq-comment-header-3923" class="dsq-comment-header">
            <cite id="dsq-cite-3923">
                <span id="dsq-author-user-3923">Eatesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3923" class="dsq-comment-body">
            <div id="dsq-comment-message-3923" class="dsq-comment-message"><p>i guess time complexity of the suggested code is O(1) as we need to evaluate just an equation. Correct me if i am wrong.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-4" id="dsq-comment-3926">
        <div id="dsq-comment-header-3926" class="dsq-comment-header">
            <cite id="dsq-cite-3926">
                <span id="dsq-author-user-3926">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3926" class="dsq-comment-body">
            <div id="dsq-comment-message-3926" class="dsq-comment-message"><p>@Eatesh: O(n) is the correct time complexity.  We need to do O(n) operations to add all numbers and multiply all numbers.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-5" id="dsq-comment-3934">
        <div id="dsq-comment-header-3934" class="dsq-comment-header">
            <cite id="dsq-cite-3934">
                <span id="dsq-author-user-3934">Eatesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3934" class="dsq-comment-body">
            <div id="dsq-comment-message-3934" class="dsq-comment-message"><p>Thanks, interpreted it wrongly.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt depth-3" id="dsq-comment-9618">
        <div id="dsq-comment-header-9618" class="dsq-comment-header">
            <cite id="dsq-cite-9618">
http://algorithmsea.blogspot.com                <span id="dsq-author-user-9618">Vikky</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9618" class="dsq-comment-body">
            <div id="dsq-comment-message-9618" class="dsq-comment-message"><p>Hi,</p>
<p>Rather than multiplying the elements we can use sum of squares for finding out the solution,as follows:</p>
<p>Lets say missing number is x and repeating number is y.<br />
1) First get the sum of all the numbers,lets say it sum and get sum from formula n(n+1)/2 lets say it sum1, now subtract from (sum1-sum) we will get (x-y) &#8211; equation(1).</p>
<p>2) Now using sum of squares get another result n(n+1)(2*n+1)/6 lets say it sum2 and get square of all the numbers and add it lets say it sum3, now getting (sum2-sum3) we will get (x^2-y^2) &#8211; equation(2).</p>
<p>Now from equation 1 and 2 we can easily get x and y as equation 2 could be broken as (x+y)(x-y) and using value from equation 1 we get value of (x+y), now using this value and value from equation 1 again get the value of x and similarly value for y.</p>
<p>Hope this helps.!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-3746">
        <div id="dsq-comment-header-3746" class="dsq-comment-header">
            <cite id="dsq-cite-3746">
                <span id="dsq-author-user-3746">aman</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3746" class="dsq-comment-body">
            <div id="dsq-comment-message-3746" class="dsq-comment-message"><p>i did not understand the logic of XOR method. can anyone please explain?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-sandeep odd alt depth-2" id="dsq-comment-3747">
        <div id="dsq-comment-header-3747" class="dsq-comment-header">
            <cite id="dsq-cite-3747">
                <span id="dsq-author-user-3747">Sandeep</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3747" class="dsq-comment-body">
            <div id="dsq-comment-message-3747" class="dsq-comment-message"><p>@aman:<br />
The approach used here is similar to the method 4 of <a href="http://geeksforgeeks.org/?p=7953" rel="nofollow">this </a>post and method 2 of <a href="http://geeksforgeeks.org/?p=2457" rel="nofollow">this </a>post. </p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-3735">
        <div id="dsq-comment-header-3735" class="dsq-comment-header">
            <cite id="dsq-cite-3735">
                <span id="dsq-author-user-3735">Uttam</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3735" class="dsq-comment-body">
            <div id="dsq-comment-message-3735" class="dsq-comment-message"><p>The logic given for XOR will not work for the set {1,2,3}<br />
and input array 3,1,3.. it will give output 2 and 2.<br />
But Actual output is 2 and 3.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-3737">
        <div id="dsq-comment-header-3737" class="dsq-comment-header">
            <cite id="dsq-cite-3737">
                <span id="dsq-author-user-3737">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3737" class="dsq-comment-body">
            <div id="dsq-comment-message-3737" class="dsq-comment-message"><p>The code works fine for {3, 1, 3} and prints 2 and 3.  Could you please post the code that you tried?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-diver99 even depth-3" id="dsq-comment-3763">
        <div id="dsq-comment-header-3763" class="dsq-comment-header">
            <cite id="dsq-cite-3763">
                <span id="dsq-author-user-3763">diver99</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3763" class="dsq-comment-body">
            <div id="dsq-comment-message-3763" class="dsq-comment-message"><p>&#8220;So if we take any set bit (We have chosen the rightmost set bit in code) of xor1 and divide the elements of the array in two sets – one set of elements with same bit set and other set with same bit not set. By doing so, we will get x in one set and y in another set.&#8221;</p>
<p>Let&#8217;s say 1 was missing and 3 was repeated.<br />
Input = {2,3,3}<br />
When you partition the elements would&#8217;nt 1 and 3 end up in the same set?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-sandeep odd alt depth-4" id="dsq-comment-3764">
        <div id="dsq-comment-header-3764" class="dsq-comment-header">
            <cite id="dsq-cite-3764">
                <span id="dsq-author-user-3764">Sandeep</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3764" class="dsq-comment-body">
            <div id="dsq-comment-message-3764" class="dsq-comment-message"><p>@diver99: Please take a closer look. Wnen we do XOR of all array elements and numbers from 1 to n, we get XOR of the two required numbers.  For your example, XOR would be 1^3 which is 2 (0010).  Now we take a set bit from this XOR and divide in two sets, so 1 and 3 become part of different sets.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-slimshady even thread-odd thread-alt depth-1" id="dsq-comment-3728">
        <div id="dsq-comment-header-3728" class="dsq-comment-header">
            <cite id="dsq-cite-3728">
                <span id="dsq-author-user-3728">slimshady</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3728" class="dsq-comment-body">
            <div id="dsq-comment-message-3728" class="dsq-comment-message"><p>this is cool..thanks for posting</p>
</div>
        </div>

    </li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/find-a-repeating-and-a-missing-number/';
var disqus_identifier = '11946 http://geeksforgeeks.org/?p=11946';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Find the repeating and the missing | Added 3 new methods";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.217 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:34:49 -->

<!-- Compression = gzip -->
<!-- super cache -->