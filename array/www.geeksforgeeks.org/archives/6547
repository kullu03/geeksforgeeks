<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Check for balanced parentheses in an expression - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Check for balanced parentheses in an expression - GeeksforGeeks" />
<meta property="og:description" content="Given an expression string exp, write a program to examine whether the pairs and the orders of &#8220;{&#8220;,&#8221;}&#8221;,&#8221;(&#8220;,&#8221;)&#8221;,&#8221;[&#8220;,&#8221;]&#8221; are correct in exp. For example, the program should print true for exp = &#8220;[()]{}{[()()]()}&#8221; and false for exp = &#8220;[(])&#8221; Algorithm: 1) Declare a character stack S. 2) Now traverse the expression string exp. &nbsp; &nbsp; &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:section" content="Misc" />
<meta property="article:published_time" content="2010-04-12T18:45:06+00:00" />
<meta property="article:modified_time" content="2011-01-09T14:07:05+00:00" />
<meta property="og:updated_time" content="2011-01-09T14:07:05+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.597 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417110811 121.242.198.2';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Check for balanced parentheses in an expression</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Given an expression string exp, write a program to examine whether the pairs and the orders of &#8220;{&#8220;,&#8221;}&#8221;,&#8221;(&#8220;,&#8221;)&#8221;,&#8221;[&#8220;,&#8221;]&#8221; are correct in exp. <span id="more-6547"></span> For example, the program should print true for exp = &#8220;[()]{}{[()()]()}&#8221; and false for exp = &#8220;[(])&#8221;</p>
<p>Algorithm:<br />
1) Declare a character stack S.<br />
2) Now traverse the expression string exp.<br />
&nbsp; &nbsp;   a) If the current character is a starting bracket (&#8216;(&#8216; or &#8216;{&#8216; or &#8216;[&#8216;) then push it to stack.<br />
 &nbsp; &nbsp;  b) If the current character is a closing bracket (&#8216;)&#8217; or &#8216;}&#8217; or &#8216;]&#8217;) then pop from stack and if the popped character is the matching starting bracket then fine else parenthesis are not balanced.<br />
3) After complete traversal, if there is some starting bracket left in stack then &#8220;not balanced&#8221;</p>
<p>Implementation:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#define bool int

/* structure of a stack node */
struct sNode
{
   char data;
   struct sNode *next;
};

/* Function to push an item to stack*/
void push(struct sNode** top_ref, int new_data);

/* Function to pop an item from stack*/
int pop(struct sNode** top_ref);

/* Returns 1 if character1 and character2 are matching left
   and right Parenthesis */
bool isMatchingPair(char character1, char character2)
{
   if(character1 == '(' &amp;&amp; character2 == ')')
     return 1;
   else if(character1 == '{' &amp;&amp; character2 == '}')
     return 1;
   else if(character1 == '[' &amp;&amp; character2 == ']')
     return 1;
   else
     return 0;
}

/*Return 1 if expression has balanced Parenthesis */
bool areParenthesisBalanced(char exp[])
{
   int i = 0;

   /* Declare an empty character stack */
   struct sNode *stack = NULL;

   /* Traverse the given expression to check matching parenthesis */
   while(exp[i])
   {
      /*If the exp[i] is a starting parenthesis then push it*/
      if(exp[i] == '{' || exp[i] == '(' || exp[i] == '[')
        push(&amp;stack, exp[i]);

      /* If exp[i] is a ending parenthesis then pop from stack and 
          check if the popped parenthesis is a matching pair*/
      if(exp[i] == '}' || exp[i] == ')' || exp[i] == ']')
      {
            
          /*If we see an ending parenthesis without a pair then return false*/
         if(stack == NULL)
           return 0; 

         /* Pop the top element from stack, if it is not a pair 
            parenthesis of character then there is a mismatch.
            This happens for expressions like {(}) */
         else if ( !isMatchingPair(pop(&amp;stack), exp[i]) )
           return 0;
      }
      i++;
   }
   
   /* If there is something left in expression then there is a starting
      parenthesis without a closing parenthesis */
   if(stack == NULL)
     return 1; /*balanced*/
   else
     return 0;  /*not balanced*/
} 

/* UTILITY FUNCTIONS */
/*driver program to test above functions*/
int main()
{
  char exp[100] = &quot;{()}[]&quot;;
  if(areParenthesisBalanced(exp))
    printf(&quot;\n Balanced &quot;);
  else
    printf(&quot;\n Not Balanced &quot;);  \
  getchar();
}    

/* Function to push an item to stack*/
void push(struct sNode** top_ref, int new_data)
{
  /* allocate node */
  struct sNode* new_node =
            (struct sNode*) malloc(sizeof(struct sNode));

  if(new_node == NULL)
  {
     printf(&quot;Stack overflow \n&quot;);
     getchar();
     exit(0);
  }           

  /* put in the data  */
  new_node-&gt;data  = new_data;

  /* link the old list off the new node */
  new_node-&gt;next = (*top_ref);  

  /* move the head to point to the new node */
  (*top_ref)    = new_node;
}

/* Function to pop an item from stack*/
int pop(struct sNode** top_ref)
{
  char res;
  struct sNode *top;

  /*If stack is empty then error */
  if(*top_ref == NULL)
  {
     printf(&quot;Stack overflow \n&quot;);
     getchar();
     exit(0);
  }
  else
  {
     top = *top_ref;
     res = top-&gt;data;
     *top_ref = top-&gt;next;
     free(top);
     return res;
  }
}
</pre>
<p>Time Complexity: O(n)<br />
Auxiliary Space: O(n) for stack.</p>
<p>Please write comments if you find any bug in above codes/algorithms, or find other ways to solve the same problem</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/job-sequencing-problem-set-1-greedy-algorithm/" title="Job Sequencing Problem | Set 1 (Greedy Algorithm)">Job Sequencing Problem | Set 1 (Greedy Algorithm)</a></li><li><a href="http://www.geeksforgeeks.org/multiply-two-polynomials-2/" title="Multiply two polynomials">Multiply two polynomials</a></li><li><a href="http://www.geeksforgeeks.org/algorithm-practice-question-beginners-set-1/" title="Algorithm Practice Question for Beginners | Set 1">Algorithm Practice Question for Beginners | Set 1</a></li><li><a href="http://www.geeksforgeeks.org/count-distinct-non-negative-pairs-x-y-satisfy-inequality-xx-yy-n-2/" title="Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y &lt; n">Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y < n</a></li><li><a href="http://www.geeksforgeeks.org/binomial-heap-2/" title="Binomial Heap">Binomial Heap</a></li><li><a href="http://www.geeksforgeeks.org/print-increasing-sequences-length-k-first-n-natural-numbers/" title="Print all increasing sequences of length k from first n natural numbers">Print all increasing sequences of length k from first n natural numbers</a></li><li><a href="http://www.geeksforgeeks.org/find-nth-number-number-system-3-4/" title="Find n&#8217;th number in a number system with only 3 and 4">Find n&#8217;th number in a number system with only 3 and 4</a></li><li><a href="http://www.geeksforgeeks.org/minimum-cost-polygon-triangulation/" title="Minimum Cost Polygon Triangulation">Minimum Cost Polygon Triangulation</a></li></ul>
<p></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fcheck-for-balanced-parentheses-in-an-expression%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/" data-text="Check for balanced parentheses in an expression" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-33858">
        <div id="dsq-comment-header-33858" class="dsq-comment-header">
            <cite id="dsq-cite-33858">
                <span id="dsq-author-user-33858">Zheng Luo</span>
            </cite>
        </div>
        <div id="dsq-comment-body-33858" class="dsq-comment-body">
            <div id="dsq-comment-message-33858" class="dsq-comment-message"><p>Very Good implementation, thanks for sharing</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-28799">
        <div id="dsq-comment-header-28799" class="dsq-comment-header">
            <cite id="dsq-cite-28799">
                <span id="dsq-author-user-28799">archit</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28799" class="dsq-comment-body">
            <div id="dsq-comment-message-28799" class="dsq-comment-message"><p>How can we do this problem in distributed environment or parallel processing?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-28805">
        <div id="dsq-comment-header-28805" class="dsq-comment-header">
            <cite id="dsq-cite-28805">
                <span id="dsq-author-user-28805">Anil</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28805" class="dsq-comment-body">
            <div id="dsq-comment-message-28805" class="dsq-comment-message"><p>Well..Rough Idea..</p>
<p>Let say there are N+1 processor.</p>
<p>1) The distributing processor(main thread) Divide the string of length M for N processor, say processor ith get Mi/N. </p>
<p>2) Now each processor(system) do apply the logic of parenthesis matching. And return 0 on match or 1 on dismatch.<br />
3) The main distributing system, collect the intermediate result from each processor, say as bitwise, example for 8 processor, 01010101, and do check the each contiguous substring of ones must be even in the bitwise,<br />
if check succeed then return true else return false.</p>
<p>Example:<br />
01111000           Succeed<br />
01101011           Fails<br />
01110110           Fails<br />
01111011          Succeed</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-32543">
        <div id="dsq-comment-header-32543" class="dsq-comment-header">
            <cite id="dsq-cite-32543">
                <span id="dsq-author-user-32543">Siva Krishna</span>
            </cite>
        </div>
        <div id="dsq-comment-body-32543" class="dsq-comment-body">
            <div id="dsq-comment-message-32543" class="dsq-comment-message"><p>This approach can&#8217;t handle all cases. Let us take {} {} }{  etc.. In distributed processing suppose a process get mismatch -ve count in its way there is no way to say that it&#8217;s an error(because previous block may contain the cause for this).</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-_naive_ even thread-even depth-1" id="dsq-comment-19821">
        <div id="dsq-comment-header-19821" class="dsq-comment-header">
            <cite id="dsq-cite-19821">
                <span id="dsq-author-user-19821">_naive_</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19821" class="dsq-comment-body">
            <div id="dsq-comment-message-19821" class="dsq-comment-message"><p>we can simply take three integers, one for each three braces..<br />
if we encounter open braces then increment corresponding int and decrements when see closing braces..whenever any integer gets value < 0 return false otherwise true..</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-jainamit0909gmail-com odd alt depth-2" id="dsq-comment-20083">
        <div id="dsq-comment-header-20083" class="dsq-comment-header">
            <cite id="dsq-cite-20083">
                <span id="dsq-author-user-20083">AMIT</span>
            </cite>
        </div>
        <div id="dsq-comment-body-20083" class="dsq-comment-body">
            <div id="dsq-comment-message-20083" class="dsq-comment-message"><p>Your idea is wrong. You will return true for [(]) which is incorrect. Please correct me if I am wrong</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-6741">
        <div id="dsq-comment-header-6741" class="dsq-comment-header">
            <cite id="dsq-cite-6741">
                <span id="dsq-author-user-6741">Amadou</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6741" class="dsq-comment-body">
            <div id="dsq-comment-message-6741" class="dsq-comment-message"><pre> <code language="C">
#include&lt;iostream&gt;
#include&lt;stdlib.h&gt;
#include&lt;stdio.h&gt;

using namespace std;

template&lt; class T &gt;
class node{
  public:
    T data;
    node *next;
    node(T x){data=x; next=NULL;}              
};

template&lt;class T&gt;
class stack{
 private:
         node&lt;T&gt; *h;
 public:
        stack(){h=NULL;}
  
        void push(T x){ 
         node&lt;T&gt; *t = new node&lt;T&gt;(x);
         if(h == NULL){t-&gt;next=NULL; h=t;}
         else{
          t-&gt;next=h;
          h=t;
          }
         }      
  
       T pop(){
        if(!isEmpty()){
         T t=h-&gt;data;
         h=h-&gt;next;
         return t;
         }  
       }
  
       bool isEmpty(){
        if(h == NULL) return true;
        else return false;     
       }
  
      void print(){
       if(h == NULL) cout&lt;&lt;&quot;Empty!!&quot;&lt;&lt;endl;
       else {
        node&lt;T&gt; *p;
        p=h;
        while(p != NULL){
         cout&lt;&lt;p-&gt;data&lt;&lt;&quot; &quot;;
         p=p-&gt;next;
         }
         cout&lt;&lt;endl;
        }     
      }
};

bool isPairs(char c1, char c2){
 if((c1=='{')&amp;&amp;(c2=='}')) return true;     
 else if((c1=='(')&amp;&amp;(c2==')')) return true;     
 else if((c1=='[')&amp;&amp;(c2==']')) return true;     
 else if((c1=='&lt;')&amp;&amp;(c2=='&gt;')) return true;     
 else return false;
}

bool isBalanced(char a[]){
  stack&lt;char&gt;s;
  int i=0;
  while(a[i] != '&#92;&#48;'){
   if((a[i]=='{')||(a[i]=='(')||(a[i]=='[')||(a[i]=='&lt;'))
    s.push(a[i]);
   else if((a[i]=='}')||(a[i]==')')||(a[i]==']')||(a[i]=='&gt;')){
    if(s.isEmpty()) return false;
    else if(!isPairs(s.pop(),a[i])) return false;
   }           
   i++;
  }
  if(s.isEmpty()) return true;
  else return false;
 }

int main(){
 stack&lt;string&gt;s;

 FILE *f1=fopen(&quot;input.txt&quot;,&quot;r&quot;);
 FILE *f2=fopen(&quot;output.txt&quot;,&quot;wa&quot;);

 int i, n, m;
 char ch[40];

 fscanf(f1,&quot;%d&quot;,&amp;n);
 m=n;
 
 if(f1 == NULL){printf(&quot;File error!!\n&quot;); exit(1);}

  while(!feof(f1)&amp;&amp;m&gt;0){
   fscanf(f1,&quot;%s&quot;,ch);
   if(isBalanced(ch)) fprintf(f2,&quot;Parentheses-balanced\n&quot;);
   else  fprintf(f2,&quot;Not Parentheses-balanced\n&quot;);
   m--;
  }

  fclose(f1);
  fclose(f2);
system(&quot;pause&quot;);
return 0;    
}

</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-6604">
        <div id="dsq-comment-header-6604" class="dsq-comment-header">
            <cite id="dsq-cite-6604">
                <span id="dsq-author-user-6604">Tp</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6604" class="dsq-comment-body">
            <div id="dsq-comment-message-6604" class="dsq-comment-message"><p>This code doesnt check the order of the paranthesis.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-kartik even depth-2" id="dsq-comment-6605">
        <div id="dsq-comment-header-6605" class="dsq-comment-header">
            <cite id="dsq-cite-6605">
                <span id="dsq-author-user-6605">kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6605" class="dsq-comment-body">
            <div id="dsq-comment-message-6605" class="dsq-comment-message"><p>@Tp: It checks for order, isMatchingPair() does this.  Do you have any example for which it didn&#8217;t work?</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-bkachhal odd alt thread-odd thread-alt depth-1" id="dsq-comment-3141">
        <div id="dsq-comment-header-3141" class="dsq-comment-header">
            <cite id="dsq-cite-3141">
                <span id="dsq-author-user-3141">Bharat Kachhal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3141" class="dsq-comment-body">
            <div id="dsq-comment-message-3141" class="dsq-comment-message"><p>@yashwanth: your code will give true for this &#8220;[{]}&#8221; expression also but as per question it is unbalanced expression and false must be the output.<br />
Please correct me if i m wrong anywhere</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-3604">
        <div id="dsq-comment-header-3604" class="dsq-comment-header">
            <cite id="dsq-cite-3604">
                <span id="dsq-author-user-3604">Dreamer</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3604" class="dsq-comment-body">
            <div id="dsq-comment-message-3604" class="dsq-comment-message"><p>It will not give true, It will give you false only.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-3115">
        <div id="dsq-comment-header-3115" class="dsq-comment-header">
            <cite id="dsq-cite-3115">
                <span id="dsq-author-user-3115">yashwanth</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3115" class="dsq-comment-body">
            <div id="dsq-comment-message-3115" class="dsq-comment-message"><p>hi friends in the above code ther is an overhead of O(n) space complexity as we are using a stack </p>
<p>Instead of it we can do this</p>
<p>Algorithm<br />
1)Declare a variable counter and intialise it zero<br />
i.e counter1=0 ,counter2=0,counter3=0<br />
Counter1 for ( and )<br />
Counter2 for { and }<br />
Counter3 for [ and ]<br />
2)Traverse the string till null<br />
    a)When ever you encounter an open brace increment<br />
         &gt;counter1 if it is  &#8216;(&#8216;<br />
         &gt;counter2 if it is  &#8216;{&#8216;<br />
         &gt;counter3 if it is  &#8216;[&#8216;</p>
<p>   b)When ever you encounter a closed brace decrement<br />
         &gt;counter1 if it is  &#8216;)&#8217;<br />
         &gt;counter2 if it is  &#8216;}&#8217;<br />
         &gt;counter3 if it is  &#8216;]&#8217;<br />
3)After the string traversal if all the three counters are  zero then it is balanced otherwise unbalanced </p>
<pre> <code language="C">bool Isbalanced(char *str)
{
    if(*str==NULL)
       return TRUE;
    int counter1 =0,counter2=0,counter3=0;
    while(*str!='&#92;&#48;')
     {
         if(*str=='(')
           counter1++;
         else if(*str=='{')
           counter2++
         else if(*str=='[')
           counter3++
         else if (*str==')')
           counter1--;
         else if (*str=='}')
           counter2--;
         else if (*str==']')
           counter3--; 
         str++;
 }

if(counter1==0 &amp;&amp; counter2==0 &amp;&amp; counter3==0)
 return TRUE
else return FALSE

}</code> </pre>
<p>Here Timecomplexity is O(n) and Space complexity is O(n)</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-3870">
        <div id="dsq-comment-header-3870" class="dsq-comment-header">
            <cite id="dsq-cite-3870">
                <span id="dsq-author-user-3870">kiran</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3870" class="dsq-comment-body">
            <div id="dsq-comment-message-3870" class="dsq-comment-message"><p>this approach doesnt work if cases like:</p>
<p>{[}]</p>
<p>its not a balanced expression, but your code will say its balanced&#8230;</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-7217">
        <div id="dsq-comment-header-7217" class="dsq-comment-header">
            <cite id="dsq-cite-7217">
                <span id="dsq-author-user-7217">Lior</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7217" class="dsq-comment-body">
            <div id="dsq-comment-message-7217" class="dsq-comment-message"><p>add this to the traversal iteration:<br />
* if any counter becomes negative, the expression is unbalanced<br />
* if c1&gt;c2 || c2&gt;c3 || c1&gt;c3 the expression is unbalanced (wrong order).</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-7324">
        <div id="dsq-comment-header-7324" class="dsq-comment-header">
            <cite id="dsq-cite-7324">
                <span id="dsq-author-user-7324">Esailija</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7324" class="dsq-comment-body">
            <div id="dsq-comment-message-7324" class="dsq-comment-message"><p>You cannot do this with counters, it will fail on a simple &#8220;)(&#8220;, or  &#8220;][)(&#8221; and so on. Those are not balanced in any meaning of the word.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-2303">
        <div id="dsq-comment-header-2303" class="dsq-comment-header">
            <cite id="dsq-cite-2303">
http://raoulteeuwen.blogspot.com                <span id="dsq-author-user-2303">Raoul Teeuwen</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2303" class="dsq-comment-body">
            <div id="dsq-comment-message-2303" class="dsq-comment-message"><p>now put this online and have people check their code online :-)?!</p>
</div>
        </div>

    </li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/';
var disqus_identifier = '6547 http://geeksforgeeks.org/?p=6547';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Check for balanced parentheses in an expression";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.196 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:23:31 -->

<!-- Compression = gzip -->
<!-- super cache -->