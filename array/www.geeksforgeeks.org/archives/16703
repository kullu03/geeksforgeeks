<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Count total set bits in all numbers from 1 to n - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/count-total-set-bits-in-all-numbers-from-1-to-n/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Count total set bits in all numbers from 1 to n - GeeksforGeeks" />
<meta property="og:description" content="Given a positive integer n, count the total number of set bits in binary representation of all numbers from 1 to n. Examples: Input: n = 3 Output: 4 Input: n = 6 Output: 9 Input: n = 7 Output: 12 Input: n = 8 Output: 13 Source: Amazon Interview Question Method 1 (Simple) A &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/count-total-set-bits-in-all-numbers-from-1-to-n/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:tag" content="Amazon" />
<meta property="article:section" content="Bit Magic" />
<meta property="article:published_time" content="2012-06-21T19:07:53+00:00" />
<meta property="article:modified_time" content="2012-10-26T18:32:08+00:00" />
<meta property="og:updated_time" content="2012-10-26T18:32:08+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.531 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417111155 103.242.63.205';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Count total set bits in all numbers from 1 to n</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Given a positive integer n, count the total number of set bits in binary representation of all numbers from 1 to n.  <span id="more-16703"></span></p>
<p>Examples:</p>
<pre>
Input: n = 3
Output:  4

Input: n = 6
Output: 9

Input: n = 7
Output: 12

Input: n = 8
Output: 13
</pre>
<p>Source: <a href="http://geeksforgeeks.org/forum/topic/amazon-interview-question-for-software-engineerdeveloper-0-2-years-about-algorithms-17">Amazon Interview Question </a></p>
<p><strong>Method 1 (Simple)</strong><br />
A simple solution is to run a loop from 1 to n and sum the count of set bits in all numbers from 1 to n.</p>
<pre class="brush: cpp; highlight: [7,8,9,10,11,12,13,14,15,16]; title: ; notranslate" title="">
// A simple program to count set bits in all numbers from 1 to n.
#include &lt;stdio.h&gt;

// A utility function to count set bits in a number x
unsigned int countSetBitsUtil(unsigned int x);

// Returns count of set bits present in all numbers from 1 to n
unsigned int countSetBits(unsigned int n)
{
    int bitCount = 0; // initialize the result

    for(int i = 1; i &lt;= n; i++)
       bitCount += countSetBitsUtil(i);

    return bitCount;
}

// A utility function to count set bits in a number x
unsigned int countSetBitsUtil(unsigned int x)
{
    if (x &lt;= 0)
        return 0;
    return (x %2 == 0? 0: 1) + countSetBitsUtil (x/2);
}

// Driver program to test above functions
int main()
{
   int n = 4;
   printf (&quot;Total set bit count is %d&quot;, countSetBits(n));
   return 0;
}
</pre>
<p>Output:
<pre>Total set bit count is 6</pre>
<p>Time Complexity: O(nLogn) </p>
<p></br><br />
<strong>Method 2 (Tricky) </strong><br />
If the input number is of the form 2^b -1 e.g., 1,3,7,15.. etc, the number of set bits is b * 2^(b-1). This is because for all the numbers 0 to (2^b)-1, if you complement and flip the list you end up with the same list (half the bits are on, half off). </p>
<p>If the number does not have all set bits, then some position m is the position of leftmost set bit. The number of set bits in that position is n &#8211; (1 << m) + 1. The remaining set bits are in two parts:</p>
<p>1) The bits in the (m-1) positions down to the point where the leftmost bit becomes 0, and<br />
2) The 2^(m-1) numbers below that point, which is the closed form above.</p>
<p>An easy way to look at it is to consider the number 6:</p>
<pre>
0|0 0
0|0 1
0|1 0
0|1 1
-|&#8211;
1|0 0
1|0 1
1|1 0
</pre>
<p>The leftmost set bit is in position 2 (positions are considered starting from 0). If we mask that off what remains is 2 (the &#8220;1 0&#8243; in the right part of the last row.) So the number of bits in the 2nd position (the lower left box) is 3 (that is, 2 + 1). The set bits from 0-3 (the upper right box above) is 2*2^(2-1) = 4. The box in the lower right is the remaining bits we haven&#8217;t yet counted, and is the number of set bits for all the numbers up to 2 (the value of the last entry in the lower right box) which can be figured recursively.</p>
<pre class="brush: cpp; highlight: [34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63]; title: ; notranslate" title="">
// A O(Logn) complexity program to count set bits in all numbers from 1 to n
#include &lt;stdio.h&gt;

/* Returns position of leftmost set bit. The rightmost
   position is considered as 0 */
unsigned int getLeftmostBit (int n)
{
   int m = 0;
   while (n  &gt; 1)
   {
      n = n &gt;&gt; 1;
      m++;
   }
   return m;
}

/* Given the position of previous leftmost set bit in n (or an upper
   bound on leftmost position) returns the new position of leftmost
   set bit in n  */
unsigned int getNextLeftmostBit (int n, int m)
{
   unsigned int temp = 1 &lt;&lt; m;
   while (n  &lt; temp)
   {
      temp = temp &gt;&gt; 1;
      m--;
   }
   return m;
}

// The main recursive function used by countSetBits()
unsigned int _countSetBits(unsigned int n, int m);

// Returns count of set bits present in all numbers from 1 to n
unsigned int countSetBits(unsigned int n)
{
   // Get the position of leftmost set bit in n. This will be
   // used as an upper bound for next set bit function
   int m = getLeftmostBit (n);

   // Use the position
   return _countSetBits (n, m);
}

unsigned int _countSetBits(unsigned int n, int m)
{
    // Base Case: if n is 0, then set bit count is 0
    if (n == 0)
       return 0;

    /* get position of next leftmost set bit */
    m = getNextLeftmostBit(n, m);

    // If n is of the form 2^x-1, i.e., if n is like 1, 3, 7, 15, 31,.. etc, 
    // then we are done. 
    // Since positions are considered starting from 0, 1 is added to m
    if (n == ((unsigned int)1&lt;&lt;(m+1))-1)
        return (unsigned int)(m+1)*(1&lt;&lt;m);

    // update n for next recursive call
    n = n - (1&lt;&lt;m);
    return (n+1) + countSetBits(n) + m*(1&lt;&lt;(m-1));
}

// Driver program to test above functions
int main()
{
   int n = 17;
   printf (&quot;Total set bit count is %d&quot;, countSetBits(n));
   return 0;
}
</pre>
<pre>
Total set bit count is 35</pre>
<p>Time Complexity: O(Logn).  From the first look at the implementation, time complexity looks more. But if we take a closer look, statements inside while loop of getNextLeftmostBit() are executed for all 0 bits in n. And the number of times recursion is executed is less than or equal to set bits in n. In other words, if the control goes inside while loop of getNextLeftmostBit(), then it skips those many bits in recursion. </p>
<p>Thanks to <a href="http://geeksforgeeks.org/forum/topic/amazon-interview-question-for-software-engineerdeveloper-0-2-years-about-algorithms-17#post-34987">agatsu </a>and <a href="http://geeksforgeeks.org/forum/topic/amazon-interview-question-for-software-engineerdeveloper-0-2-years-about-algorithms-17#post-34436">IC</a> for suggesting this solution.</p>
<p><strong>See <a href="http://www.geeksforgeeks.org/archives/16703#comment-9236">this </a>for another solution suggested by Piyush Kapoor.</strong></p>
<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/check-binary-representation-number-palindrome/" title="Check if binary representation of a number is palindrome">Check if binary representation of a number is palindrome</a></li><li><a href="http://www.geeksforgeeks.org/swap-two-nibbles-byte/" title="Swap two nibbles in a byte">Swap two nibbles in a byte</a></li><li><a href="http://www.geeksforgeeks.org/how-to-turn-off-a-particular-bit-in-a-number/" title="How to turn off a particular bit in a number?">How to turn off a particular bit in a number?</a></li><li><a href="http://www.geeksforgeeks.org/divisibility-9-using-bitwise-operators/" title="Check if a number is multiple of 9 using bitwise operators">Check if a number is multiple of 9 using bitwise operators</a></li><li><a href="http://www.geeksforgeeks.org/swap-two-numbers-without-using-temporary-variable/" title="How to swap two numbers without using a temporary variable?">How to swap two numbers without using a temporary variable?</a></li><li><a href="http://www.geeksforgeeks.org/divide-and-conquer-set-2-karatsuba-algorithm-for-fast-multiplication/" title="Divide and Conquer | Set 4 (Karatsuba algorithm for fast multiplication)">Divide and Conquer | Set 4 (Karatsuba algorithm for fast multiplication)</a></li><li><a href="http://www.geeksforgeeks.org/find-position-of-the-only-set-bit/" title="Find position of the only set bit">Find position of the only set bit</a></li><li><a href="http://www.geeksforgeeks.org/swap-all-odd-and-even-bits/" title="Swap all odd and even bits">Swap all odd and even bits</a></li></ul>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/amazon/" rel="tag">Amazon</a></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fcount-total-set-bits-in-all-numbers-from-1-to-n%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/count-total-set-bits-in-all-numbers-from-1-to-n/" data-text="Count total set bits in all numbers from 1 to n" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/count-total-set-bits-in-all-numbers-from-1-to-n/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-33820">
        <div id="dsq-comment-header-33820" class="dsq-comment-header">
            <cite id="dsq-cite-33820">
                <span id="dsq-author-user-33820">Deepak Gupta</span>
            </cite>
        </div>
        <div id="dsq-comment-body-33820" class="dsq-comment-body">
            <div id="dsq-comment-message-33820" class="dsq-comment-message"><p>Do anyone know how to do it in O(1). This solution along with all the solutions provided in the link are O(log(n)) solution. I need O(1) solution for this problem:</p>
<p><a href="http://www.spoj.com/problems/BIT2/" rel="nofollow">http://www.spoj.com/problems/BIT2/</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-32675">
        <div id="dsq-comment-header-32675" class="dsq-comment-header">
            <cite id="dsq-cite-32675">
                <span id="dsq-author-user-32675">being_coder</span>
            </cite>
        </div>
        <div id="dsq-comment-body-32675" class="dsq-comment-body">
            <div id="dsq-comment-message-32675" class="dsq-comment-message"><p>#define INT_SIZE 32</p>
<p>int main()<br />
 {</p>
<p>   int sum=0,x,i,j;<br />
   int n=4;</p>
<p>  for(i=0;i&lt;INT_SIZE;i++)<br />
  {<br />
   x=1&lt;&lt;i;</p>
<p>  for(j=1;j&lt;=n;j++)<br />
  if(j&amp;x)<br />
   sum++;</p>
<p> }</p>
<p> printf(&quot;The sum of bits is %dn&quot;,sum);</p>
<p>}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-32557">
        <div id="dsq-comment-header-32557" class="dsq-comment-header">
            <cite id="dsq-cite-32557">
                <span id="dsq-author-user-32557">???? ????????</span>
            </cite>
        </div>
        <div id="dsq-comment-body-32557" class="dsq-comment-body">
            <div id="dsq-comment-message-32557" class="dsq-comment-message"><p>public static int count(int n){<br />
        int tmp = 1;<br />
        int  k = 0;<br />
        int count = 0;</p>
<p>        do {<br />
            int h = 1 &lt;&lt; (k + 1);</p>
<p>            count += (n + 1) / h * (1 &lt;&lt; k);<br />
            count += ((n + 1) % h &#8211; (1 &lt; 0 ? (n + 1) % h &#8211; (1 &lt;&lt; k) : 0;</p>
<p>            k++;<br />
            tmp &lt;&lt;= 1;<br />
        }<br />
        while (tmp &lt;= n);</p>
<p>        return count;<br />
    }</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-31814">
        <div id="dsq-comment-header-31814" class="dsq-comment-header">
            <cite id="dsq-cite-31814">
                <span id="dsq-author-user-31814">Kai</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31814" class="dsq-comment-body">
            <div id="dsq-comment-message-31814" class="dsq-comment-message"><p>I dought that getNextLeftmostBit() is required here, we always get (m-1) from this function, y don&#8217;t we directly return (m-1) from getLeftmostBit().</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-29435">
        <div id="dsq-comment-header-29435" class="dsq-comment-header">
            <cite id="dsq-cite-29435">
                <span id="dsq-author-user-29435">Ajay</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29435" class="dsq-comment-body">
            <div id="dsq-comment-message-29435" class="dsq-comment-message"><p>Here is a short recursive sulution</p>
<p><code></p>
<p>#include</p>
<p>int getLeftMostBit(int n)</p>
<p>{</p>
<p>    int m=0;</p>
<p>    while(n&gt;1)</p>
<p>    {</p>
<p>        n = n &gt;&gt; 1;</p>
<p>        m++;</p>
<p>    }</p>
<p>    return m;</p>
<p>}</p>
<p>int countBits(int n)</p>
<p>{</p>
<p>    if(n==0)</p>
<p>        return 0;</p>
<p>    int b = getLeftMostBit(n);</p>
<p>    int sum = 1;</p>
<p>    if(b&gt;0)</p>
<p>        sum = b*(1&lt;&lt;(b-1)) + 1;</p>
<p>    n = n-(1&lt;&lt;b);</p>
<p>    return (sum + 2*countBits(n));</p>
<p>}</p>
<p>int main()</p>
<p>{</p>
<p>    printf(&quot;n%dn&quot;, countBits(17));</p>
<p>    return 0;</p>
<p>}</p>
<p></code></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-28996">
        <div id="dsq-comment-header-28996" class="dsq-comment-header">
            <cite id="dsq-cite-28996">
                <span id="dsq-author-user-28996">sumit</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28996" class="dsq-comment-body">
            <div id="dsq-comment-message-28996" class="dsq-comment-message"><p>can any one tell me when the while loop inside getNextLeftmostBit() will be execute &#8230;.. bcoz every time when we call this function it give same value of m</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-29693">
        <div id="dsq-comment-header-29693" class="dsq-comment-header">
            <cite id="dsq-cite-29693">
                <span id="dsq-author-user-29693">manish</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29693" class="dsq-comment-body">
            <div id="dsq-comment-message-29693" class="dsq-comment-message"><p>@admin , plz some one reply for this comment , i have same problem &#8230; thanks</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-31815">
        <div id="dsq-comment-header-31815" class="dsq-comment-header">
            <cite id="dsq-cite-31815">
                <span id="dsq-author-user-31815">Kai</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31815" class="dsq-comment-body">
            <div id="dsq-comment-message-31815" class="dsq-comment-message"><p>It returns (m-1) always .. eg: for n=16, we get m = 5, from getLeftMostBit() method, In getNextLeftmostBit() , 2^5 = 32 which is &#8216;temp&#8217; value, iterate&#8217;s once to give m=m-1; ( 16 &lt; 16 , fail&#039;s )</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-27075">
        <div id="dsq-comment-header-27075" class="dsq-comment-header">
            <cite id="dsq-cite-27075">
                <span id="dsq-author-user-27075">Guest</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27075" class="dsq-comment-body">
            <div id="dsq-comment-message-27075" class="dsq-comment-message"><p>#include</p>
<p>#include</p>
<p>int count(int n)</p>
<p>{</p>
<p>    if(n==0) return 0;</p>
<p>    int x = log2(n);</p>
<p>    int cnt = x*(1&lt;&lt;(x-1)) + n &#8211; (1&lt;&lt;x) + 1;</p>
<p>    return cnt + count(n^(1&lt;&lt;x));</p>
<p>}</p>
<p>int main()</p>
<p>{</p>
<p>    int n=17;</p>
<p>    std::cout&lt;&lt;count(n);</p>
<p>    return 0;</p>
<p>}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-27073">
        <div id="dsq-comment-header-27073" class="dsq-comment-header">
            <cite id="dsq-cite-27073">
                <span id="dsq-author-user-27073">Guest</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27073" class="dsq-comment-body">
            <div id="dsq-comment-message-27073" class="dsq-comment-message"><p>#include</p>
<p>#include</p>
<p>using namespace std;</p>
<p>int count(int n)</p>
<p>{</p>
<p>    if(n==0) return 0;</p>
<p>    int x = log2(n);</p>
<p>    int cnt= x*(1&lt;&lt;(x-1)) + n &#8211; (1&lt;&lt;x) + 1;</p>
<p>    return cnt + count(n &#8211; (1&lt;&lt;x));</p>
<p>}</p>
<p>int main()</p>
<p>{</p>
<p>    int n;</p>
<p>    n=17;</p>
<p>    cout&lt;&lt;count(n);</p>
<p>}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-27072">
        <div id="dsq-comment-header-27072" class="dsq-comment-header">
            <cite id="dsq-cite-27072">
                <span id="dsq-author-user-27072">Guest</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27072" class="dsq-comment-body">
            <div id="dsq-comment-message-27072" class="dsq-comment-message"><p>#include<br />
#include<br />
using namespace std;</p>
<p>int count(int n)<br />
{<br />
    if(n==0) return 0;<br />
    int x = log2(n);<br />
    int cnt= x*(1&lt;&lt;(x-1)) + n &#8211; (1&lt;&lt;x) + 1;</p>
<p>    return cnt + count(n &#8211; (1&lt;&lt;x));<br />
}</p>
<p>int main()<br />
{<br />
    int n;<br />
    n=17;<br />
    cout&lt;&lt;count(n);<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-27071">
        <div id="dsq-comment-header-27071" class="dsq-comment-header">
            <cite id="dsq-cite-27071">
                <span id="dsq-author-user-27071">Guest</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27071" class="dsq-comment-body">
            <div id="dsq-comment-message-27071" class="dsq-comment-message"><p>#include<br />
#include<br />
using namespace std;</p>
<p>int count(int n)<br />
{<br />
    if(n==0) return 0;<br />
    int x = log2(n);<br />
    int cnt= x*(1&lt;&lt;(x-1)) + n &#8211; (1&lt;&lt;x) + 1;</p>
<p>    return cnt + count(n &#8211; (1&lt;&lt;x));<br />
}</p>
<p>int main()<br />
{<br />
    int n;<br />
    n=17;<br />
    cout&lt;&lt;count(n);<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-25166">
        <div id="dsq-comment-header-25166" class="dsq-comment-header">
            <cite id="dsq-cite-25166">
                <span id="dsq-author-user-25166">Prajit</span>
            </cite>
        </div>
        <div id="dsq-comment-body-25166" class="dsq-comment-body">
            <div id="dsq-comment-message-25166" class="dsq-comment-message"><p>//fact that n&amp;(n-1) will unset rightmost set bit</p>
<p>int count_bit(int n)<br />
{<br />
	int i,tmp,sum=0;<br />
	if(n&lt;0)	{	return -1;	}<br />
	for(i=1;i0)<br />
			{<br />
				tmp=tmp&amp;(tmp-1);<br />
				sum++;<br />
			}<br />
		}<br />
	return sum;<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-22887">
        <div id="dsq-comment-header-22887" class="dsq-comment-header">
            <cite id="dsq-cite-22887">
                <span id="dsq-author-user-22887">sumit</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22887" class="dsq-comment-body">
            <div id="dsq-comment-message-22887" class="dsq-comment-message"><p>int count_set_bits(int n)<br />
{<br />
	int count=0;<br />
while(n!=0)<br />
{<br />
	n=n&amp;(n-1);<br />
	count++;<br />
}</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-anshul-chauhan even thread-even depth-1" id="dsq-comment-22294">
        <div id="dsq-comment-header-22294" class="dsq-comment-header">
            <cite id="dsq-cite-22294">
                <span id="dsq-author-user-22294">anshul.chauhan</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22294" class="dsq-comment-body">
            <div id="dsq-comment-message-22294" class="dsq-comment-message"><p>A simple algo would be to count it for each bit position. It will run in constant time. We just need to check how many 2^i pairs have occurred in ith position.  For eg. if on 3rd lsd 4 pairs of 4 has occured we just need to add 4*4/2 no. of 1s and move on. In case some remainder is left add that too if no of pairs is odd.</p>
<p>public static int countSetBits(int n) {<br />
	int totalBits = 0;<br />
	int i=0;<br />
	while(i&lt;32) {<br />
		int d=(int)Math.pow(2, i);<br />
		if(d&gt;n)break;<br />
		int q=(n+1)/d;<br />
		int r = n-(q*d)+1;<br />
		if(q%2==0)<br />
			totalBits+=q*d/2;<br />
		else<br />
			totalBits+=(q-1)*d/2+r;<br />
		i++;<br />
	}<br />
	return totalBits;<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-pribic odd alt thread-odd thread-alt depth-1" id="dsq-comment-21677">
        <div id="dsq-comment-header-21677" class="dsq-comment-header">
            <cite id="dsq-cite-21677">
                <span id="dsq-author-user-21677">pribic</span>
            </cite>
        </div>
        <div id="dsq-comment-body-21677" class="dsq-comment-body">
            <div id="dsq-comment-message-21677" class="dsq-comment-message"><pre> <code language="Java">
public class SetBitsUptoN {
    public static void main(String[] args) {
	int n = 20;
	for (int i = 0; i &lt;= n; i++)
	    System.out.println(i + &quot; :&quot; + new SetBitsUptoN().countSetBits(i));
    }

    int countSetBits(int n) {
	if (n == 0) {
	    return 0;
	}
	int c = 0;
	n++;
	int bits = (int) Math.ceil(Math.log10(n) / Math.log10(2));
	for (int i = 1; i &lt;= bits; i++) {
	    double interval = Math.pow(2, i);
	    double multi = interval / 2;
	    double integral = Math.floor(n / interval) * multi;
	    double reminderPart = (n % interval - multi &lt;= 0) ? 0 : (n % interval - multi);
	    double noOfBitinCurrentPosition = integral + reminderPart;
	    c += noOfBitinCurrentPosition;
	}
	return c;
    }
}
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-onlynishant even thread-even depth-1" id="dsq-comment-18327">
        <div id="dsq-comment-header-18327" class="dsq-comment-header">
            <cite id="dsq-cite-18327">
https://sites.google.com/site/nishantonl9/                <span id="dsq-author-user-18327">Nishant Kumar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-18327" class="dsq-comment-body">
            <div id="dsq-comment-message-18327" class="dsq-comment-message"><p>Algo of method 2 is good but in the code of method 2 getNextLeftmostBit() is useless and why countSetBits() and _countSetBits() are used if we can achieve same only by _countSetBits().</p>
<pre> <code language="C">
int myTotalSetBitCount(int n){
	if(n==0)
		return 0;
	int m = getLeftmostBit(n);

	if(n==((1&lt;&lt;(m+1))-1))
		return (m+1)*(1&lt;&lt;m);

	n = n - (1&lt;&lt;m);

	return (n+1) + myTotalSetBitCount(n) + m*(1&lt;&lt;(m-1));
}
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-18646">
        <div id="dsq-comment-header-18646" class="dsq-comment-header">
            <cite id="dsq-cite-18646">
                <span id="dsq-author-user-18646">Ashutosh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-18646" class="dsq-comment-body">
            <div id="dsq-comment-message-18646" class="dsq-comment-message"><p>Absolutely.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-19436">
        <div id="dsq-comment-header-19436" class="dsq-comment-header">
            <cite id="dsq-cite-19436">
                <span id="dsq-author-user-19436">Hanish Bansal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19436" class="dsq-comment-body">
            <div id="dsq-comment-message-19436" class="dsq-comment-message"><p>Exactly !!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-rahul23 odd alt thread-odd thread-alt depth-1" id="dsq-comment-18151">
        <div id="dsq-comment-header-18151" class="dsq-comment-header">
            <cite id="dsq-cite-18151">
                <span id="dsq-author-user-18151">rahul23</span>
            </cite>
        </div>
        <div id="dsq-comment-body-18151" class="dsq-comment-body">
            <div id="dsq-comment-message-18151" class="dsq-comment-message"><p>@geeksforgeeks&#8230;Why are you using getNExtleft fxn&#8230;whose while loop will never be executed&#8230;.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-cfchou even thread-even depth-1" id="dsq-comment-15493">
        <div id="dsq-comment-header-15493" class="dsq-comment-header">
            <cite id="dsq-cite-15493">
                <span id="dsq-author-user-15493">cfchou</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15493" class="dsq-comment-body">
            <div id="dsq-comment-message-15493" class="dsq-comment-message"><p>Try this in haskell with acceleration through meomoization. It might be in the same spirit of method 2 or 3 but I haven&#8217;t checked.</p>
<p>import Data.Array</p>
<p>allOnes :: Int -&gt; Int<br />
allOnes n<br />
    | n &lt;= 0 = 0<br />
    | otherwise = let k = log2Floor n<br />
                      arr = mkArray k<br />
                  in  allOnes&#8217; n arr</p>
<p>allOnes&#8217; :: Int -&gt; Array Int Int -&gt; Int<br />
allOnes&#8217; 0 _ = 0<br />
allOnes&#8217; n arr = let k = log2Floor n<br />
                     d = n &#8211; (2^k &#8211; 1)<br />
                 in  if d == 0 then arr ! k<br />
                     else (arr ! k) + d + (allOnes&#8217; (d &#8211; 1) arr)</p>
<p>log2Floor :: Int -&gt; Int<br />
log2Floor n = floor $ logBase 2 (fromIntegral n)</p>
<p>mkArray :: Int -&gt; Array Int Int<br />
mkArray k = array (0, k) [ (i, f i) | i &lt;- [0..k] ]<br />
    where f 0 = 0<br />
          f 1 = 1<br />
          f n = 2^(n &#8211; 1) + 2 * (f (n &#8211; 1))</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-cfchou odd alt depth-2" id="dsq-comment-15494">
        <div id="dsq-comment-header-15494" class="dsq-comment-header">
            <cite id="dsq-cite-15494">
                <span id="dsq-author-user-15494">cfchou</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15494" class="dsq-comment-body">
            <div id="dsq-comment-message-15494" class="dsq-comment-message"><p>better formatted<br />
<a href="https://gist.github.com/cfchou/5005354" rel="nofollow">https://gist.github.com/cfchou/5005354</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-15019">
        <div id="dsq-comment-header-15019" class="dsq-comment-header">
            <cite id="dsq-cite-15019">
                <span id="dsq-author-user-15019">san</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15019" class="dsq-comment-body">
            <div id="dsq-comment-message-15019" class="dsq-comment-message"><p>If the input number is of the form 2^b -1 e.g., 1,3,7,15.. etc, the number of set bits is b * 2^(b-1).<br />
this is incorrect<br />
if number is of the form 2^b -1 , the number of set bits is b.</p>
<p>eg<br />
1  0001 (2^1 &#8211; 1)  1<br />
3  0011 (2^2 &#8211; 1)  2<br />
7  0111 (3^2 &#8211; 1)  3<br />
15 1111 (4^2 &#8211; 1)  4</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-11314">
        <div id="dsq-comment-header-11314" class="dsq-comment-header">
            <cite id="dsq-cite-11314">
                <span id="dsq-author-user-11314">hero</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11314" class="dsq-comment-body">
            <div id="dsq-comment-message-11314" class="dsq-comment-message"><p>count=0;<br />
for (x=1;x&lt;=n;x++)<br />
{<br />
     while(x)<br />
     {<br />
             x&amp;(x-1);<br />
             count++;<br />
      }<br />
}<br />
return count;</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-10095">
        <div id="dsq-comment-header-10095" class="dsq-comment-header">
            <cite id="dsq-cite-10095">
                <span id="dsq-author-user-10095">White Tiger</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10095" class="dsq-comment-body">
            <div id="dsq-comment-message-10095" class="dsq-comment-message"><pre> <code language="C">
int findSetBits(int n)
{
	int i=0,k=n,count=0,total=0;
	char arr[32];
	while(k)
	{
		arr[i++]=(k&amp;1)+48;
		k=k&gt;&gt;1;
	}
	arr[i--]='&#092;&#048;';
	while(i&gt;=0)
	{
		if(arr[i]==49)
		{
			total+=(i+2*count)*pow(2,i-1)+1;
			count++;
		}
		i--;
	}
	return total;
}
</code> </pre>
<p>Time Complexity: O(log n)</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-9457">
        <div id="dsq-comment-header-9457" class="dsq-comment-header">
            <cite id="dsq-cite-9457">
http://facebook.com/sourabh.mehrotra                <span id="dsq-author-user-9457">Sourabh mehrotra</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9457" class="dsq-comment-body">
            <div id="dsq-comment-message-9457" class="dsq-comment-message"><pre> <code language="C">
#include &lt;stdio.h&gt;
#include &lt;math.h&gt;

int main(int argc,char **str)
{
    int num=17,i,sum=0,aux,b;
    b=countbits(num);
    b--;
    sum=b*pow(2,b-1);
    aux=1&lt;&lt;b;
    printf(&quot;%d\n&quot;,aux);
    while(aux&lt;=num)
    {
        sum+=count1(aux);
        aux++;
    }
    printf(&quot;%d&quot;,sum);
    getchar();
    return 0;
}

int count1(int n)
{
    int i,cnt=0;
    while(n&gt;0)
    {
        if(n&amp;0x1)
            cnt++;
        n=n&gt;&gt;1;
    }
    return cnt;
}

int countbits(int n)
{
    int i=1,x=1;
    while(x&lt;n)
    {
        i++;
        x=x&lt;&lt;1;
    }
    if(n==1)
        return i;
    return i-1;
}

/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-9446">
        <div id="dsq-comment-header-9446" class="dsq-comment-header">
            <cite id="dsq-cite-9446">
                <span id="dsq-author-user-9446">Anil</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9446" class="dsq-comment-body">
            <div id="dsq-comment-message-9446" class="dsq-comment-message"><p>Please sent me steps how to count bits ?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-9413">
        <div id="dsq-comment-header-9413" class="dsq-comment-header">
            <cite id="dsq-cite-9413">
                <span id="dsq-author-user-9413">lomash</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9413" class="dsq-comment-body">
            <div id="dsq-comment-message-9413" class="dsq-comment-message"><p>for this problem-we can do the following approach<br />
1)count the no of bits in the number-<br />
   while(n)<br />
    {<br />
        n=n/2;<br />
        count++;<br />
    }<br />
2) return count+pow(2,count-1);</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-9414">
        <div id="dsq-comment-header-9414" class="dsq-comment-header">
            <cite id="dsq-cite-9414">
                <span id="dsq-author-user-9414">lomash</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9414" class="dsq-comment-body">
            <div id="dsq-comment-message-9414" class="dsq-comment-message"><p>sorry i have written the wrong code..</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-9415">
        <div id="dsq-comment-header-9415" class="dsq-comment-header">
            <cite id="dsq-cite-9415">
                <span id="dsq-author-user-9415">LOMASH</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9415" class="dsq-comment-body">
            <div id="dsq-comment-message-9415" class="dsq-comment-message"><p>int countsetbitsupton(int n)<br />
{<br />
   y=countsetbitsuptonn(n);<br />
   int x=n-2^y-1;<br />
    return(countsetbitsupton(2^n-1)+x+countsetbitsupton(x));<br />
}</p>
<p>PLEASE TELL ME THE COMPLEXITY OF THIS</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-9321">
        <div id="dsq-comment-header-9321" class="dsq-comment-header">
            <cite id="dsq-cite-9321">
                <span id="dsq-author-user-9321">Ravi aka smash</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9321" class="dsq-comment-body">
            <div id="dsq-comment-message-9321" class="dsq-comment-message"><pre> <code language="C">
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;math.h&gt;
int sum=0;
unsigned int getleftmostbit(unsigned int n)
{
    int k=0;
    while(n&gt;1)
    {
        k++;
        n=n&gt;&gt;1;
    }
    return k;
}
unsigned int get(unsigned int n)
{
    int m=0;
    m=getleftmostbit(n);
    if(n==0)
    return 0;
    if(n==((1&lt;&lt;m)-1))
    return (m*(1&lt;&lt;(m-1)));
    n=(n-(1&lt;&lt;m));

    sum=sum+(n+1)+m*(1&lt;&lt;(m-1))+get(n);
    return sum;
}
int main()
{
    int n=7,k=0;
    k=get(n);
    printf(&quot;total bit %d \n&quot;,k);
    return 0;
}

</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-10138">
        <div id="dsq-comment-header-10138" class="dsq-comment-header">
            <cite id="dsq-cite-10138">
                <span id="dsq-author-user-10138">Oar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10138" class="dsq-comment-body">
            <div id="dsq-comment-message-10138" class="dsq-comment-message"><p>This one is better than the code posted by the author. &#8216;getNextLeftmostBit&#8217; does the same work as &#8216;getLeftmostBit&#8217;</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-9247">
        <div id="dsq-comment-header-9247" class="dsq-comment-header">
            <cite id="dsq-cite-9247">
                <span id="dsq-author-user-9247">krishna</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9247" class="dsq-comment-body">
            <div id="dsq-comment-message-9247" class="dsq-comment-message"><p>Can any one please put the above mathematical logic in words, so that it would be easy to understand.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-9245">
        <div id="dsq-comment-header-9245" class="dsq-comment-header">
            <cite id="dsq-cite-9245">
                <span id="dsq-author-user-9245">krishna</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9245" class="dsq-comment-body">
            <div id="dsq-comment-message-9245" class="dsq-comment-message"><p>For the method 1 : the running time must be O(n), since finding numbers of ones is a const time operation for a given size integer</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-9243">
        <div id="dsq-comment-header-9243" class="dsq-comment-header">
            <cite id="dsq-cite-9243">
                <span id="dsq-author-user-9243">Narendra</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9243" class="dsq-comment-body">
            <div id="dsq-comment-message-9243" class="dsq-comment-message"><p>#include </p>
<p>unsigned count_set_bits(unsigned num);</p>
<p>int main(int argc, char *argv[])<br />
{<br />
        unsigned i, n, cnt;</p>
<p>        cnt = 0;</p>
<p>        printf(&#8220;Enter the range: &#8220;);<br />
        scanf(&#8220;%u&#8221;, &amp;n);</p>
<p>        for (i = 1; i &gt; 1) &amp; 0x55555555);<br />
        num = (num &amp; 0x33333333) + ((num &gt;&gt; 2) &amp; 0x33333333);<br />
        num = (num &amp; 0x0f0f0f0f) + ((num &gt;&gt; 4) &amp; 0x0f0f0f0f);<br />
        num = (num &amp; 0x00ff00ff) + ((num &gt;&gt; 8) &amp; 0x00ff00ff);<br />
        num = (num &amp; 0x0000ffff) + ((num &gt;&gt; 16) &amp; 0x0000ffff);</p>
<p>        return num;<br />
}</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-9244">
        <div id="dsq-comment-header-9244" class="dsq-comment-header">
            <cite id="dsq-cite-9244">
                <span id="dsq-author-user-9244">Narendra</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9244" class="dsq-comment-body">
            <div id="dsq-comment-message-9244" class="dsq-comment-message"><p>Sorry i paste here wrong code.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-9236">
        <div id="dsq-comment-header-9236" class="dsq-comment-header">
            <cite id="dsq-cite-9236">
                <span id="dsq-author-user-9236">Piyush Kapoor</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9236" class="dsq-comment-body">
            <div id="dsq-comment-message-9236" class="dsq-comment-message"><p>A simple solution , using the fact that for the ith least significant bit, answer will be (N/2^i)*2^(i-1)+ X<br />
where X = N%(2^i) &#8211; (2^(i-1)-1) iff N%(2^i)&gt;=(2^(i-1)-1) </p>
<pre> <code language="C">
int getSetBitsFromOneToN(int N){
    int two = 2,ans = 0;
    int n = N;
    while(n){
        ans += (N/two)*(two&gt;&gt;1);
        if((N&amp;(two-1)) &gt; (two&gt;&gt;1)-1) ans += (N&amp;(two-1)) - (two&gt;&gt;1)+1;
        two &lt;&lt;= 1;
        n &gt;&gt;= 1;
    }
    return ans;
}
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-9242">
        <div id="dsq-comment-header-9242" class="dsq-comment-header">
            <cite id="dsq-cite-9242">
                <span id="dsq-author-user-9242">kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9242" class="dsq-comment-body">
            <div id="dsq-comment-message-9242" class="dsq-comment-message"><p>@Piyush Kapoor: Thanks for sharing your code. Your method looks better. We will add it to the original post.  It will helpful for us if you provide more explanation so that we can add the same with your approach.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-9248">
        <div id="dsq-comment-header-9248" class="dsq-comment-header">
            <cite id="dsq-cite-9248">
                <span id="dsq-author-user-9248">Piyush Kapoor</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9248" class="dsq-comment-body">
            <div id="dsq-comment-message-9248" class="dsq-comment-message"><p>Consider the ith least significant bit(1 based indexing) for numbers from 1 to N , then they repeat with a period equal to 2^i.And in the period , first half of the values are 0 and the next half are ones.For example :-<br />
For numbers from 0 to 7,(0 will contribute nothing so no effect)<br />
000<br />
001<br />
010<br />
011<br />
100<br />
101<br />
110<br />
111<br />
1st least significant bit = 01010101 Period=2<br />
2nd least significant bit = 00110011 Period=4<br />
3rd least significant bit = 00001111 Period=8<br />
and so on.<br />
So for the ith least significant bit ,answer will be (N/Period)*(Half of Period Size) + (N%Remainder &#8211; Half of Period Size)<br />
The second term will only be taken when N%Remainder is greater than or equal to Half of Period Size.<br />
Also , N%(2^i) can be written as N&amp;(2^i &#8211; 1)</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-4" id="dsq-comment-9249">
        <div id="dsq-comment-header-9249" class="dsq-comment-header">
            <cite id="dsq-cite-9249">
                <span id="dsq-author-user-9249">Piyush Kapoor</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9249" class="dsq-comment-body">
            <div id="dsq-comment-message-9249" class="dsq-comment-message"><p>A correction :<br />
Second Term in the answer is<br />
 N%(2^i &#8211; 1) &#8211; Half of Period Size + 1</p>
<p>which is only taken when N%(2^i &#8211; 1) is greater than or equal to the (Half of Period Size &#8211; 1)</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-5" id="dsq-comment-9250">
        <div id="dsq-comment-header-9250" class="dsq-comment-header">
            <cite id="dsq-cite-9250">
                <span id="dsq-author-user-9250">kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9250" class="dsq-comment-body">
            <div id="dsq-comment-message-9250" class="dsq-comment-message"><p>Thanks Piyush. We will soon add it to the original post.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-5" id="dsq-comment-9252">
        <div id="dsq-comment-header-9252" class="dsq-comment-header">
            <cite id="dsq-cite-9252">
                <span id="dsq-author-user-9252">Abhijeet Sinha</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9252" class="dsq-comment-body">
            <div id="dsq-comment-message-9252" class="dsq-comment-message"><p>awesome <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":-)" class="wp-smiley" /></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-5" id="dsq-comment-9254">
        <div id="dsq-comment-header-9254" class="dsq-comment-header">
            <cite id="dsq-cite-9254">
                <span id="dsq-author-user-9254">User</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9254" class="dsq-comment-body">
            <div id="dsq-comment-message-9254" class="dsq-comment-message"><p>@Piyush Kapoor: I couldnt understand this part.<br />
if((N&amp;(two-1)) &gt; (two&gt;&gt;1)-1) ans += (N&amp;(two-1)) &#8211; (two&gt;&gt;1)+1;</p>
<p>Please explain on this more.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt depth-4" id="dsq-comment-19437">
        <div id="dsq-comment-header-19437" class="dsq-comment-header">
            <cite id="dsq-cite-19437">
                <span id="dsq-author-user-19437">Hanish Bansal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19437" class="dsq-comment-body">
            <div id="dsq-comment-message-19437" class="dsq-comment-message"><p>Really nice !!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-9235">
        <div id="dsq-comment-header-9235" class="dsq-comment-header">
            <cite id="dsq-cite-9235">
                <span id="dsq-author-user-9235">Piyush</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9235" class="dsq-comment-body">
            <div id="dsq-comment-message-9235" class="dsq-comment-message"><p>A simple solution , using the fact that for the ith least significant bit, answer will be (N/2^i)*2^(i-1)+ X<br />
where X = N%(2^i) &#8211; (2^(i-1)-1) if N%(2^i)&gt;=(2^(i-1)-1) </p>
<pre> <code language="C">
int getSetBitsFromOneToN(int N){
    int two = 2,ans = 0;
    int n = N;
    while(n){
        ans += (N/two)*(two&gt;&gt;1);
        if((N&amp;(two-1)) &gt; (two&gt;&gt;1)-1) ans += (N&amp;(two-1)) - (two&gt;&gt;1)+1;
        two &lt;&lt;= 1;
        n &gt;&gt;= 1;
    }
    return ans;
}</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-10551">
        <div id="dsq-comment-header-10551" class="dsq-comment-header">
            <cite id="dsq-cite-10551">
                <span id="dsq-author-user-10551">Chiranjeev Kumar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10551" class="dsq-comment-body">
            <div id="dsq-comment-message-10551" class="dsq-comment-message"><p>wowwwwwww <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /><br />
awesome <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":-)" class="wp-smiley" /></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-13853">
        <div id="dsq-comment-header-13853" class="dsq-comment-header">
            <cite id="dsq-cite-13853">
                <span id="dsq-author-user-13853">dipendra</span>
            </cite>
        </div>
        <div id="dsq-comment-body-13853" class="dsq-comment-body">
            <div id="dsq-comment-message-13853" class="dsq-comment-message"><p>could not get the second part</p>
<p>if((N&amp;(two-1)) &gt; (two&gt;&gt;1)-1) ans += (N&amp;(two-1)) &#8211; (two&gt;&gt;1)+1;</p>
<p>can you explain it&#8230;.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-21720">
        <div id="dsq-comment-header-21720" class="dsq-comment-header">
            <cite id="dsq-cite-21720">
                <span id="dsq-author-user-21720">indra kumar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-21720" class="dsq-comment-body">
            <div id="dsq-comment-message-21720" class="dsq-comment-message"><p>very good method</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-9232">
        <div id="dsq-comment-header-9232" class="dsq-comment-header">
            <cite id="dsq-cite-9232">
                <span id="dsq-author-user-9232">pkm</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9232" class="dsq-comment-body">
            <div id="dsq-comment-message-9232" class="dsq-comment-message"><p>@agatsu &amp; @GfG<br />
Awesome work</p>
</div>
        </div>

    </li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/count-total-set-bits-in-all-numbers-from-1-to-n/';
var disqus_identifier = '16703 http://www.geeksforgeeks.org/?p=16703';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Count total set bits in all numbers from 1 to n";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.217 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:29:16 -->

<!-- Compression = gzip -->
<!-- super cache -->