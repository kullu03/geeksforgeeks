<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>fork() and Binary Tree - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/fork-and-binary-tree/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="fork() and Binary Tree - GeeksforGeeks" />
<meta property="og:description" content="Given a program on fork() system call. How many processes will be spawned after executing the above program? A fork() system call spawn processes as leaves of growing binary tree. If we call fork() twice, it will spawn 22 = 4 processes. All these 4 processes forms the leaf children of binary tree. In general &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/fork-and-binary-tree/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:section" content="C/C++ Puzzles" />
<meta property="article:published_time" content="2011-02-13T10:06:09+00:00" />
<meta property="article:modified_time" content="2011-02-17T18:53:49+00:00" />
<meta property="og:updated_time" content="2011-02-17T18:53:49+00:00" />
<meta property="og:image" content="http://geeksforgeeks.org/wp-content/uploads/forkPuzzle4.jpg" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.560 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417110816 89.187.219.9';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">fork() and Binary Tree</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Given a program on <strong>fork()</strong> system call.<span id="more-10484"></span></p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
int main()
{
   fork();
   fork() &amp;&amp; fork() || fork();
   fork();

   printf(&quot;forked\n&quot;);
   return 0;
}
</pre>
<p>How many processes will be spawned after executing the above program?</p>
<p>A<em> fork()</em> system call spawn processes as leaves of growing binary tree. If we call fork() twice, it will spawn 2<sup>2</sup> = 4 processes. All these 4 processes forms the leaf children of binary tree. In general if we are level <strong>l</strong>, and fork() called unconditionally, we will have <strong>2<sup>l</sup></strong> processes at level (<strong>l+1</strong>). It is equivalent to number of maximum child nodes in a binary tree at level (<strong>l+1</strong>).</p>
<p>As another example, assume that we have invoked fork() call 3 times unconditionally. We can represent the spawned process using a full binary tree with 3 levels. At level 3, we will have 2<sup>3</sup> = 8 child nodes, which corresponds to number of processes running.</p>
<p><strong>A note on C/C++ logical operators:</strong></p>
<p>The logical operator &amp;&amp; has more precedence than ||, and have left to right associativity. After executing left operand, the final result will be estimated and execution of right operand depends on outcome of left operand as well as type of operation.</p>
<p>In case of AND (&amp;&amp;), after evaluation of left operand, right operand will be evaluated only if left operand evaluates to <strong>non-zero</strong>. In case of OR (||), after evaluation of left operand, right operand will be evaluated only if left operand evaluates to <strong>zero</strong>.</p>
<p><strong>Return value of fork():</strong></p>
<p>The man pages of fork() cites the following excerpt on return value,</p>
<p>&#8220;<em>On success, the PID of the child process is returned in the parent, and </em><em>0 is returned in the child.  On failure, -1 is returned in the  parent, </em><em>no child process is created, and errno is set appropriately.</em>&#8221;</p>
<p>A PID is like handle of process and represented as <em>unsigned int</em>. We can conclude, the fork() will return a non-zero in parent and zero in child. Let us analyse the program. For easy notation, label each fork() as shown below,</p>
<pre>#include &lt;stdio.h&gt;
int main()
{
   fork(); /* A */
   ( fork()  /* B */ &amp;&amp;
     fork()  /* C */ ) || /* B and C are grouped according to precedence */
   fork(); /* D */
   fork(); /* E */

   printf("forked\n");
   return 0;
}</pre>
<p>The following diagram provides pictorial representation of fork-ing new processes. All newly created processes are propagated on right side of tree, and parents are propagated on left side of tree, in consecutive levels.</p>
<p style="text-align: center"><a href="http://geeksforgeeks.org/wp-content/uploads/forkPuzzle.jpg"><img class="aligncenter size-full wp-image-10519" src="http://geeksforgeeks.org/wp-content/uploads/forkPuzzle4.jpg" alt="" width="560" height="318" /></a></p>
<p>The first two fork() calls are called unconditionally.</p>
<p>At level 0, we have only main process. The main (m in diagram) will create child C1 and both will continue execution. The children are numbered in increasing order of their creation.</p>
<p>At level 1, we have m and C1 running, and ready to execute fork() &#8211; B. (Note that B, C and D named as operands of &amp;&amp; and || operators). The initial expression B will be executed in every children and parent process running at this level.</p>
<p>At level 2, due to fork() &#8211; B executed by m and C1, we have m and C1 as parents and, C2 and C3 as children.</p>
<p>The return value of fork() &#8211; B is non-zero in parent, and zero in child. Since the first operator is &amp;&amp;, because of zero return value, the children C2 and C3 <strong>will not</strong> execute next expression (fork()- C). Parents processes m and C1 will continue with fork() &#8211; C. The children C2 and C3 will directly execute fork() &#8211; D, to evaluate value of logical OR operation.</p>
<p>At level 3, we have m, C1, C2, C3 as running processes and C4, C5 as children. The expression is now simplified to ((B &amp;&amp; C) || D), and at this point the value of (B &amp;&amp; C) is obvious. In parents it is non-zero and in children it is zero. Hence, the parents aware of outcome of overall B &amp;&amp; C || D, will skip execution of fork() &#8211; D. Since, in the children (B &amp;&amp; C) evaluated to zero, they will execute fork() &#8211; D. We should note that children C2 and C3 created at level 2, will also run fork() &#8211; D as mentioned above.</p>
<p>At level 4, we will have m, C1, C2, C3, C4, C5 as running processes and C6, C7, C8 and C9 as child processes. All these processes unconditionally execute fork() &#8211; E, and spawns one child.</p>
<p>At level 5, we will have 20 processes running. The program (on Ubuntu Maverick, GCC 4.4.5) printed &#8220;forked&#8221; 20 times. Once by root parent (main) and rest by children. Overall there will be 19 processes spawned.</p>
<p><strong>A note on order of evaluation:</strong></p>
<p>The evaluation order of expressions in binary operators is unspecified. For details read the post <a href="http://geeksforgeeks.org/?p=8389" target="_blank">Evaluation order of operands</a>. However, the logical operators are an exception. They are guaranteed to evaluate from left to right.</p>
<p>Contributed by <strong>Venki</strong>. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/comparison-float-value-c/" title="Comparison of a float with a value in C">Comparison of a float with a value in C</a></li><li><a href="http://www.geeksforgeeks.org/pure-virtual-destructor-c/" title="Pure virtual destructor in C++">Pure virtual destructor in C++</a></li><li><a href="http://www.geeksforgeeks.org/c-mutable-keyword/" title="C++ mutable keyword">C++ mutable keyword</a></li><li><a href="http://www.geeksforgeeks.org/possible-call-constructor-destructor-explicitly/" title="Is it possible to call constructor and destructor explicitly?">Is it possible to call constructor and destructor explicitly?</a></li><li><a href="http://www.geeksforgeeks.org/multithreading-c-2/" title="Multithreading in C">Multithreading in C</a></li><li><a href="http://www.geeksforgeeks.org/c-prgram-print-range-basic-data-types-without-library-function-constant/" title="How to print range of basic data types without any library function and constant in C?">How to print range of basic data types without any library function and constant in C?</a></li><li><a href="http://www.geeksforgeeks.org/c-final-specifier/" title="C++ final specifier">C++ final specifier</a></li><li><a href="http://www.geeksforgeeks.org/print-substring-of-a-given-string-without-using-any-string-function-and-loop-in-c/" title="Print substring of a given string without using any string function and loop in C">Print substring of a given string without using any string function and loop in C</a></li></ul>
<p></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Ffork-and-binary-tree%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/fork-and-binary-tree/" data-text="fork() and Binary Tree" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/fork-and-binary-tree/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-32835">
        <div id="dsq-comment-header-32835" class="dsq-comment-header">
            <cite id="dsq-cite-32835">
                <span id="dsq-author-user-32835">sunita</span>
            </cite>
        </div>
        <div id="dsq-comment-body-32835" class="dsq-comment-body">
            <div id="dsq-comment-message-32835" class="dsq-comment-message"><p>what will be answer to this question ???(Number of child processes??)<br />
fork();<br />
fork() || fork() &amp;&amp; fork();<br />
fork()</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-31983">
        <div id="dsq-comment-header-31983" class="dsq-comment-header">
            <cite id="dsq-cite-31983">
                <span id="dsq-author-user-31983">fateh_singh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31983" class="dsq-comment-body">
            <div id="dsq-comment-message-31983" class="dsq-comment-message"><p>awsme explainations&#8230;.:)</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-31010">
        <div id="dsq-comment-header-31010" class="dsq-comment-header">
            <cite id="dsq-cite-31010">
http://www.tigoo.com/                <span id="dsq-author-user-31010">tigoo</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31010" class="dsq-comment-body">
            <div id="dsq-comment-message-31010" class="dsq-comment-message"><p>Tie Trees is a New York based company that specializes in making </p>
<p>hand crafted wood ties from local resources.  All of our ties are </p>
<p>handmade in New York, using wood that is either recycled or from </p>
<p>local vendors.  Much like the individual who wears our ties, no two</p>
<p>ties are alike.  Our handmade quality ensures that each tie we make</p>
<p>has it&#8217;s own unique style.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-28236">
        <div id="dsq-comment-header-28236" class="dsq-comment-header">
            <cite id="dsq-cite-28236">
                <span id="dsq-author-user-28236">Mansoor Ahmed</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28236" class="dsq-comment-body">
            <div id="dsq-comment-message-28236" class="dsq-comment-message"><p>what will be the output of the following?</p>
<p>#include<br />
#include<br />
int main()<br />
{<br />
/* fork a child process */<br />
fork();<br />
/* fork another child process */<br />
fork();<br />
/* fork another child process */<br />
fork();<br />
return 0;<br />
}</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-31984">
        <div id="dsq-comment-header-31984" class="dsq-comment-header">
            <cite id="dsq-cite-31984">
                <span id="dsq-author-user-31984">fateh_singh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31984" class="dsq-comment-body">
            <div id="dsq-comment-message-31984" class="dsq-comment-message"><p>7 child +1 parent</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-coderfrmhell odd alt thread-even depth-1" id="dsq-comment-21021">
        <div id="dsq-comment-header-21021" class="dsq-comment-header">
            <cite id="dsq-cite-21021">
                <span id="dsq-author-user-21021">Javed</span>
            </cite>
        </div>
        <div id="dsq-comment-body-21021" class="dsq-comment-body">
            <div id="dsq-comment-message-21021" class="dsq-comment-message"><pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-agniswar even thread-odd thread-alt depth-1" id="dsq-comment-4776">
        <div id="dsq-comment-header-4776" class="dsq-comment-header">
            <cite id="dsq-cite-4776">
                <span id="dsq-author-user-4776">Agniswar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4776" class="dsq-comment-body">
            <div id="dsq-comment-message-4776" class="dsq-comment-message"><p>@Mrigendra Nagar -I think if the question was &#8211;<br />
fork();<br />
fork1() || fork2() &amp;&amp; fork3();<br />
fork();<br />
then the answer should be 15..please tell me if i am wrong..</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-4906">
        <div id="dsq-comment-header-4906" class="dsq-comment-header">
            <cite id="dsq-cite-4906">
                <span id="dsq-author-user-4906">dang3r</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4906" class="dsq-comment-body">
            <div id="dsq-comment-message-4906" class="dsq-comment-message"><p>I think it should be 19 in that case as well.</p>
<p>fork();</p>
<p>(fork() || (fork() &amp;&amp; fork()) );</p>
<p>fork();</p>
<p>Correct me if I&#8217;m wrong&#8230;</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-agniswar even depth-3" id="dsq-comment-4907">
        <div id="dsq-comment-header-4907" class="dsq-comment-header">
            <cite id="dsq-cite-4907">
                <span id="dsq-author-user-4907">Agniswar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4907" class="dsq-comment-body">
            <div id="dsq-comment-message-4907" class="dsq-comment-message"><p>Yes..you are right..it should be 19 in that case and 15 in the other.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-4" id="dsq-comment-4908">
        <div id="dsq-comment-header-4908" class="dsq-comment-header">
            <cite id="dsq-cite-4908">
                <span id="dsq-author-user-4908">dang3r</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4908" class="dsq-comment-body">
            <div id="dsq-comment-message-4908" class="dsq-comment-message"><p>Now I confirmed it&#8230;Please forget previous post.</p>
<p>if condition is:</p>
<p>fork() &amp;&amp; fork || fork();</p>
<p>Ans:-&gt; 19</p>
<p>if condition is:</p>
<p>fork() || fork() &amp;&amp; fork();<br />
Ans:-&gt; 15</p>
<p>Regards!</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-5" id="dsq-comment-4909">
        <div id="dsq-comment-header-4909" class="dsq-comment-header">
            <cite id="dsq-cite-4909">
                <span id="dsq-author-user-4909">dang3r</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4909" class="dsq-comment-body">
            <div id="dsq-comment-message-4909" class="dsq-comment-message"><p>I mean 15 in 2nd case&#8230;</p>
<p>How the hell I edit previos post&#8230;</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-geeksforgeeks odd alt depth-5" id="dsq-comment-4911">
        <div id="dsq-comment-header-4911" class="dsq-comment-header">
            <cite id="dsq-cite-4911">
                <span id="dsq-author-user-4911">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4911" class="dsq-comment-body">
            <div id="dsq-comment-message-4911" class="dsq-comment-message"><p>To edit your comments, refresh the page and you will see an edit button.  The comment can be edited within 30 minutes of submission.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-4727">
        <div id="dsq-comment-header-4727" class="dsq-comment-header">
            <cite id="dsq-cite-4727">
                <span id="dsq-author-user-4727">Atul Pratap Singh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4727" class="dsq-comment-body">
            <div id="dsq-comment-message-4727" class="dsq-comment-message"><p>The operators &amp;&amp; and || are also called logical short-circuit operators. Which are not having any precedence to each other. It is in the order of operands found in the expression. The rule of using these is as follows.<br />
Eg. A &amp;&amp; B =&gt;If A is non-zero ONLY then B will be evaluated.<br />
    A || B =&gt;Irrespective of what A is B will be evaluated and the result would be logical OR of A and B.<br />
A &amp;&amp; B || C=&gt;If A is zero, B will not be evaluated and only the C will be evaluated, which will give final expression value.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-3309">
        <div id="dsq-comment-header-3309" class="dsq-comment-header">
            <cite id="dsq-cite-3309">
                <span id="dsq-author-user-3309">Mrigendra Nagar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3309" class="dsq-comment-body">
            <div id="dsq-comment-message-3309" class="dsq-comment-message"><p>I Think following is not correct<br />
&gt;&gt; The logical operators &amp;&amp; and || falls into same category of precedence level </p>
<p>&amp;&amp; has higher precedence over ||.</p>
<p>fork()&amp;&amp;fork()||fork() can be seen as (fork()&amp;&amp;fork())||fork()</p>
<p>and</p>
<p>fork()||fork()&amp;&amp;fork() can be seen as fork()||(fork()&amp;&amp;fork())</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-venki bypostauthor even depth-2" id="dsq-comment-3311">
        <div id="dsq-comment-header-3311" class="dsq-comment-header">
            <cite id="dsq-cite-3311">
http://www.linkedin.com/in/ramanawithu                <span id="dsq-author-user-3311">Venki</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3311" class="dsq-comment-body">
            <div id="dsq-comment-message-3311" class="dsq-comment-message"><p>Oops, yeah you are right. Thank you, I have updated the post. Silly mistake, sometime costs heavily. I missed it.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-3308">
        <div id="dsq-comment-header-3308" class="dsq-comment-header">
            <cite id="dsq-cite-3308">
                <span id="dsq-author-user-3308">Mrigendra Nagar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3308" class="dsq-comment-body">
            <div id="dsq-comment-message-3308" class="dsq-comment-message"><p>fork();<br />
fork() &amp;&amp; fork() || fork();<br />
fork(); </p>
<p>It returns 20 threads.</p>
<p>but</p>
<p>fork();<br />
fork1() || fork2() &amp;&amp; fork3();<br />
fork();</p>
<p>It returns 16 threads.</p>
</div>
        </div>

    </li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/fork-and-binary-tree/';
var disqus_identifier = '10484 http://geeksforgeeks.org/?p=10484';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "fork() and Binary Tree";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.204 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:23:37 -->

<!-- Compression = gzip -->
<!-- super cache -->