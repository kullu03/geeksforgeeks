<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Maximum and minimum of an array using minimum number of comparisons - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/maximum-and-minimum-in-an-array/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Maximum and minimum of an array using minimum number of comparisons - GeeksforGeeks" />
<meta property="og:description" content="Write a C function to return minimum and maximum in an array. You program should make minimum number of comparisons. First of all, how do we return multiple values from a C function? We can do it either using structures or pointers. We have created a structure named pair (which contains min and max) to &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/maximum-and-minimum-in-an-array/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:tag" content="Divide and Conquer" />
<meta property="article:section" content="Arrays" />
<meta property="article:published_time" content="2010-02-15T13:59:42+00:00" />
<meta property="article:modified_time" content="2013-09-26T22:40:10+00:00" />
<meta property="og:updated_time" content="2013-09-26T22:40:10+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.481 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417111178 27.49.105.240';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Maximum and minimum of an array using minimum number of comparisons</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p><strong>Write a C function to return minimum and maximum in an array.  You program should make minimum number of comparisons.</strong>  <span id="more-4583"></span></p>
<p>First of all, how do we return multiple values from a C function?   We can do it either using structures or pointers. </p>
<p>We have created a structure named pair (which contains min and max) to return multiple values. </p>
<pre class="brush: cpp; title: ; notranslate" title="">
struct pair 
{
  int min;
  int max;
};  
</pre>
<p>And the function declaration becomes: struct pair getMinMax(int arr[], int n)  where arr[] is the array of size n whose minimum and maximum are needed.  </p>
<p><strong>METHOD 1 (Simple Linear Search)</strong><br />
Initialize values of min and max as minimum and maximum of the first two elements respectively.  Starting from 3rd, compare each element with max and min, and change max and min accordingly (i.e., if the element is smaller than min then change min, else if the element is greater than max then change max, else ignore the element)</p>
<pre class="brush: cpp; title: ; notranslate" title="">
/* structure is used to return two values from minMax() */
#include&lt;stdio.h&gt;
struct pair 
{
  int min;
  int max;
};  

struct pair getMinMax(int arr[], int n)
{
  struct pair minmax;     
  int i;
  
  /*If there is only one element then return it as min and max both*/
  if (n == 1)
  {
     minmax.max = arr[0];
     minmax.min = arr[0];     
     return minmax;
  }    

  /* If there are more than one elements, then initialize min 
      and max*/
  if (arr[0] &gt; arr[1])  
  {
      minmax.max = arr[0];
      minmax.min = arr[1];
  }  
  else
  {
      minmax.max = arr[1];
      minmax.min = arr[0];
  }    

  for (i = 2; i&lt;n; i++)
  {
    if (arr[i] &gt;  minmax.max)      
      minmax.max = arr[i];
  
    else if (arr[i] &lt;  minmax.min)      
      minmax.min = arr[i];
  }
  
  return minmax;
}

/* Driver program to test above function */
int main()
{
  int arr[] = {1000, 11, 445, 1, 330, 3000};
  int arr_size = 6;
  struct pair minmax = getMinMax (arr, arr_size);
  printf(&quot;\nMinimum element is %d&quot;, minmax.min);
  printf(&quot;\nMaximum element is %d&quot;, minmax.max);
  getchar();
}  
</pre>
<p>Time Complexity:  O(n)</p>
<p>In this method, total number of comparisons is 1 + 2(n-2) in worst case and 1 + n – 2 in best case.<br />
In the above implementation, worst case occurs when elements are sorted in descending order and best case occurs when elements are sorted in ascending order.</p>
<p></br><br />
<strong>METHOD 2 (Tournament Method)</strong><br />
Divide the array into two parts and compare the maximums and minimums of the the two parts to get the maximum and the minimum of the the whole array.</p>
<pre>
Pair MaxMin(array, array_size)
   if array_size = 1
      return element as both max and min
   else if arry_size = 2
      one comparison to determine max and min
      return that pair
   else    /* array_size  > 2 */
      recur for max and min of left half
      recur for max and min of right half
      one comparison determines true max of the two candidates
      one comparison determines true min of the two candidates
      return the pair of max and min
</pre>
<p>Implementation</p>
<pre class="brush: cpp; title: ; notranslate" title="">
/* structure is used to return two values from minMax() */
#include&lt;stdio.h&gt;
struct pair 
{
  int min;
  int max;
};  

struct pair getMinMax(int arr[], int low, int high)
{
  struct pair minmax, mml, mmr;       
  int mid;
  
  /* If there is only on element */
  if (low == high)
  {
     minmax.max = arr[low];
     minmax.min = arr[low];     
     return minmax;
  }    
  
  /* If there are two elements */
  if (high == low + 1)
  {  
     if (arr[low] &gt; arr[high])  
     {
        minmax.max = arr[low];
        minmax.min = arr[high];
     }  
     else
     {
        minmax.max = arr[high];
        minmax.min = arr[low];
     }  
     return minmax;
  }
  
  /* If there are more than 2 elements */
  mid = (low + high)/2;  
  mml = getMinMax(arr, low, mid);
  mmr = getMinMax(arr, mid+1, high);  
  
  /* compare minimums of two parts*/
  if (mml.min &lt; mmr.min)
    minmax.min = mml.min;
  else
    minmax.min = mmr.min;     

  /* compare maximums of two parts*/
  if (mml.max &gt; mmr.max)
    minmax.max = mml.max;
  else
    minmax.max = mmr.max;     
 
  return minmax;
}

/* Driver program to test above function */
int main()
{
  int arr[] = {1000, 11, 445, 1, 330, 3000};
  int arr_size = 6;
  struct pair minmax = getMinMax(arr, 0, arr_size-1);
  printf(&quot;\nMinimum element is %d&quot;, minmax.min);
  printf(&quot;\nMaximum element is %d&quot;, minmax.max);
  getchar();
}
</pre>
<p>Time Complexity:  O(n)<br />
Total number of comparisons:  let number of comparisons be T(n).  T(n) can be written as follows:<br />
Algorithmic Paradigm: Divide and Conquer</p>
<pre>             
  T(n) = T(floor(n/2)) + T(ceil(n/2)) + 2  
  T(2) = 1
  T(1) = 0
</pre>
<p>If n is a power of 2, then we can write T(n) as:</p>
<pre>   T(n) = 2T(n/2) + 2 </pre>
<p>After solving above recursion, we get </p>
<pre>  T(n)  = 3/2n -2 </pre>
<p>Thus, the approach does 3/2n -2 comparisons if n is a power of 2.  And it does more than 3/2n -2 comparisons if n is not a power of 2.</p>
<p></br><br />
<strong>METHOD 3 (Compare in Pairs)</strong><br />
If n is odd then initialize min and max as first element.<br />
If n is even then initialize min and max as minimum and maximum of the first two elements respectively.<br />
For rest of the elements, pick them in pairs and compare their<br />
maximum and minimum with max and min respectively.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include&lt;stdio.h&gt;

/* structure is used to return two values from minMax() */
struct pair 
{
  int min;
  int max;
};  

struct pair getMinMax(int arr[], int n)
{
  struct pair minmax;     
  int i;  

  /* If array has even number of elements then 
    initialize the first two elements as minimum and 
    maximum */
  if (n%2 == 0)
  {         
    if (arr[0] &gt; arr[1])     
    {
      minmax.max = arr[0];
      minmax.min = arr[1];
    }  
    else
    {
      minmax.min = arr[0];
      minmax.max = arr[1];
    }
    i = 2;  /* set the startung index for loop */
  }  

   /* If array has odd number of elements then 
    initialize the first element as minimum and 
    maximum */ 
  else
  {
    minmax.min = arr[0];
    minmax.max = arr[0];
    i = 1;  /* set the startung index for loop */
  }
  
  /* In the while loop, pick elements in pair and 
     compare the pair with max and min so far */    
  while (i &lt; n-1)  
  {          
    if (arr[i] &gt; arr[i+1])          
    {
      if(arr[i] &gt; minmax.max)        
        minmax.max = arr[i];
      if(arr[i+1] &lt; minmax.min)          
        minmax.min = arr[i+1];        
    } 
    else         
    {
      if (arr[i+1] &gt; minmax.max)        
        minmax.max = arr[i+1];
      if (arr[i] &lt; minmax.min)          
        minmax.min = arr[i];        
    }        
    i += 2; /* Increment the index by 2 as two 
               elements are processed in loop */
  }            

  return minmax;
}    

/* Driver program to test above function */
int main()
{
  int arr[] = {1000, 11, 445, 1, 330, 3000};
  int arr_size = 6;
  struct pair minmax = getMinMax (arr, arr_size);
  printf(&quot;\nMinimum element is %d&quot;, minmax.min);
  printf(&quot;\nMaximum element is %d&quot;, minmax.max);
  getchar();
}
</pre>
<p>Time Complexity:  O(n)</p>
<p>Total number of comparisons:  Different for even and odd n, see below:</p>
<pre>
       If n is odd:    3*(n-1)/2  
       If n is even:   1 Initial comparison for initializing min and max, 
                           and 3(n-2)/2 comparisons for rest of the elements  
                      =  1 + 3*(n-2)/2 = 3n/2 -2
</pre>
<p>Second and third approaches make equal number of comparisons when n is a power of 2.  </p>
<p>In general, method 3 seems to be the best.</p>
<p>Please write comments if you find any bug in the above programs/algorithms or a better way to solve the same problem.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array-set-2-expected-linear-time/" title="K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)">K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)</a></li><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array/" title="K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1">K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1</a></li><li><a href="http://www.geeksforgeeks.org/time-complexity-insertion-sort-inversions/" title="Time complexity of insertion sort when there are O(n) inversions?">Time complexity of insertion sort when there are O(n) inversions?</a></li><li><a href="http://www.geeksforgeeks.org/check-two-given-sets-disjoint/" title="How to check if two given sets are disjoint?">How to check if two given sets are disjoint?</a></li><li><a href="http://www.geeksforgeeks.org/minimum-number-platforms-required-railwaybus-station/" title="Minimum Number of Platforms Required for a Railway/Bus Station">Minimum Number of Platforms Required for a Railway/Bus Station</a></li><li><a href="http://www.geeksforgeeks.org/given-two-sorted-arrays-number-x-find-pair-whose-sum-closest-x/" title="Find the closest pair from two sorted arrays">Find the closest pair from two sorted arrays</a></li><li><a href="http://www.geeksforgeeks.org/print-elements-sorted-order-row-column-wise-sorted-matrix/" title="Print all elements in sorted order from row and column wise sorted matrix">Print all elements in sorted order from row and column wise sorted matrix</a></li><li><a href="http://www.geeksforgeeks.org/length-largest-subarray-contiguous-elements-set-1/" title="Length of the largest subarray with contiguous elements | Set 1">Length of the largest subarray with contiguous elements | Set 1</a></li></ul>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/divide-and-conquer/" rel="tag">Divide and Conquer</a></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fmaximum-and-minimum-in-an-array%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/maximum-and-minimum-in-an-array/" data-text="Maximum and minimum of an array using minimum number of comparisons" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/maximum-and-minimum-in-an-array/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-32680">
        <div id="dsq-comment-header-32680" class="dsq-comment-header">
            <cite id="dsq-cite-32680">
                <span id="dsq-author-user-32680">xxmajia</span>
            </cite>
        </div>
        <div id="dsq-comment-body-32680" class="dsq-comment-body">
            <div id="dsq-comment-message-32680" class="dsq-comment-message"><p>how about that, use the below max(a,b) and min(a,b) function that can give you the max or min from [a,b] without any comparision at all, then do a linear search, with time complexisty O(N), and 0 comparsion</p>
<p>max(a,b) {<br />
c = a-b;<br />
k = c&gt;&gt;31;<br />
return a-k*c;<br />
}</p>
<p>min(a, b) {<br />
return a+b-max(a,b);<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-31511">
        <div id="dsq-comment-header-31511" class="dsq-comment-header">
            <cite id="dsq-cite-31511">
                <span id="dsq-author-user-31511">zealfire</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31511" class="dsq-comment-body">
            <div id="dsq-comment-message-31511" class="dsq-comment-message"><p>how is t(n)=2(n/2)+2,=&gt;3n/2-2</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-28141">
        <div id="dsq-comment-header-28141" class="dsq-comment-header">
            <cite id="dsq-cite-28141">
                <span id="dsq-author-user-28141">Aniket</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28141" class="dsq-comment-body">
            <div id="dsq-comment-message-28141" class="dsq-comment-message"><p>It can be done by using merge sort by nlogn time complexity.While merging two sorted array just compare the first element of both the array that will give smallest and by comparing the last itemof two array will give largest.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-27853">
        <div id="dsq-comment-header-27853" class="dsq-comment-header">
            <cite id="dsq-cite-27853">
                <span id="dsq-author-user-27853">Marsha Donna</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27853" class="dsq-comment-body">
            <div id="dsq-comment-message-27853" class="dsq-comment-message"><p>can sum1 pls explain the logic behind method3</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-27852">
        <div id="dsq-comment-header-27852" class="dsq-comment-header">
            <cite id="dsq-cite-27852">
                <span id="dsq-author-user-27852">Marsha Donna</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27852" class="dsq-comment-body">
            <div id="dsq-comment-message-27852" class="dsq-comment-message"><p>can sum1 pls explain the logic behind method3</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-19675">
        <div id="dsq-comment-header-19675" class="dsq-comment-header">
            <cite id="dsq-cite-19675">
                <span id="dsq-author-user-19675">Gautam</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19675" class="dsq-comment-body">
            <div id="dsq-comment-message-19675" class="dsq-comment-message"><p>In 1st method if else block should be like this&#8230;<br />
 else<br />
  {<br />
      minmax.max = arr[1];<br />
      minmax.min = arr[0];<br />
  }</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-27846">
        <div id="dsq-comment-header-27846" class="dsq-comment-header">
            <cite id="dsq-cite-27846">
                <span id="dsq-author-user-27846">Marsha Donna</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27846" class="dsq-comment-body">
            <div id="dsq-comment-message-27846" class="dsq-comment-message"><p>yes ur right</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-28142">
        <div id="dsq-comment-header-28142" class="dsq-comment-header">
            <cite id="dsq-cite-28142">
                <span id="dsq-author-user-28142">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28142" class="dsq-comment-body">
            <div id="dsq-comment-message-28142" class="dsq-comment-message"><p>Thanks for pointing this out.  We have updated the code of 1st method.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-19674">
        <div id="dsq-comment-header-19674" class="dsq-comment-header">
            <cite id="dsq-cite-19674">
                <span id="dsq-author-user-19674">Gautam</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19674" class="dsq-comment-body">
            <div id="dsq-comment-message-19674" class="dsq-comment-message"><p>In 1st method the if else block should not be like this??<br />
if(arr[0] &gt; arr[1])<br />
  {<br />
      minmax.max = arr[0];<br />
      minmax.min = arr[1];<br />
  }<br />
  else<br />
  {<br />
      minmax.max = arr[1];<br />
      minmax.min = arr[0];<br />
  }</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-5801">
        <div id="dsq-comment-header-5801" class="dsq-comment-header">
            <cite id="dsq-cite-5801">
                <span id="dsq-author-user-5801">radhakrishna</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5801" class="dsq-comment-body">
            <div id="dsq-comment-message-5801" class="dsq-comment-message"><p>DPM solution. let me know if there is anything wrong about it.</p>
<p>for i : 1 to n array</p>
<p>MinMax[i] : min max pair of array window ending at i  </p>
<p>base case : (a[1], a[1])    if i =1</p>
<p>general case : Max(MinMax[i-1].max, a[i]) , Min(MinMax[i-1].min,a[i])</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-16683">
        <div id="dsq-comment-header-16683" class="dsq-comment-header">
            <cite id="dsq-cite-16683">
                <span id="dsq-author-user-16683">bhavneet</span>
            </cite>
        </div>
        <div id="dsq-comment-body-16683" class="dsq-comment-body">
            <div id="dsq-comment-message-16683" class="dsq-comment-message"><p>it has got 2*(n-1) comparisons </p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-5048">
        <div id="dsq-comment-header-5048" class="dsq-comment-header">
            <cite id="dsq-cite-5048">
                <span id="dsq-author-user-5048">jiabul(ju)</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5048" class="dsq-comment-body">
            <div id="dsq-comment-message-5048" class="dsq-comment-message"><p>/*maxmin*/</p>
<p>  int maximum(int a[],int low,int right)<br />
 {<br />
  int m1 ;<br />
  int  m2,mid;<br />
    if(low&amp;rt;right)<br />
    {<br />
    mid=(low+right)/2;<br />
     m1=maximum(a,0,mid);<br />
     m2=maximum(a,mid+1,right);<br />
     return ((m1&amp;rt;m2)?m1:m2);</p>
<p>    }</p>
<p> int minimum(int a[],int low,int right)<br />
 {<br />
  int m1 ;<br />
  int  m2,mid;<br />
    if(low&lt;right)<br />
    {<br />
    mid=(low+right)/2;<br />
     m1=minimum(a,0,mid);<br />
     m2=minimum(a,mid+1,right);<br />
     return ((m1&lt;m2)?m1:m2);</p>
<p>    }<br />
    return a[low];</p>
<p> }<br />
 void printMaxMinimum(int a[],int n)<br />
 {<br />
 printf(&quot;Max is %dn&quot;,maximum(a,0,n-1));<br />
 printf(&quot;min is %d&quot;,minimum(a,0,n-1));<br />
 }</p>
<p>int  main()<br />
{</p>
<p>   int a[]={1,2,3,4,5,2,7,8,1,1};<br />
   int n=sizeof(a)/sizeof(a[0]);<br />
   printMaxMinimum(a,n);</p>
<p>return 0;<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-5047">
        <div id="dsq-comment-header-5047" class="dsq-comment-header">
            <cite id="dsq-cite-5047">
                <span id="dsq-author-user-5047">jiabul(ju)</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5047" class="dsq-comment-body">
            <div id="dsq-comment-message-5047" class="dsq-comment-message"><p>it can be done by o(log n).</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-28762">
        <div id="dsq-comment-header-28762" class="dsq-comment-header">
            <cite id="dsq-cite-28762">
                <span id="dsq-author-user-28762">Priyanka Gupta</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28762" class="dsq-comment-body">
            <div id="dsq-comment-message-28762" class="dsq-comment-message"><p>exactly that wt i thought using divide and conquer</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-rajneesh2k10 even thread-even depth-1" id="dsq-comment-4641">
        <div id="dsq-comment-header-4641" class="dsq-comment-header">
            <cite id="dsq-cite-4641">
http://rajneesh2k10.wordpress.com/                <span id="dsq-author-user-4641">Rajneesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4641" class="dsq-comment-body">
            <div id="dsq-comment-message-4641" class="dsq-comment-message"><p>Can&#8217;t we do a radix sort and get the result without even comparing at all?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-8330">
        <div id="dsq-comment-header-8330" class="dsq-comment-header">
            <cite id="dsq-cite-8330">
                <span id="dsq-author-user-8330">shrivats</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8330" class="dsq-comment-body">
            <div id="dsq-comment-message-8330" class="dsq-comment-message"><p>Sorting is o(nlgn)</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-14203">
        <div id="dsq-comment-header-14203" class="dsq-comment-header">
            <cite id="dsq-cite-14203">
                <span id="dsq-author-user-14203">abc</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14203" class="dsq-comment-body">
            <div id="dsq-comment-message-14203" class="dsq-comment-message"><p>Radix Sort is O(N)</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-3760">
        <div id="dsq-comment-header-3760" class="dsq-comment-header">
            <cite id="dsq-cite-3760">
http://ashutosh7s.blogspot.com/                <span id="dsq-author-user-3760">WgpShashank</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3760" class="dsq-comment-body">
            <div id="dsq-comment-message-3760" class="dsq-comment-message"><p>Proof of TC of Method 2 </p>
<p>T(2)=1<br />
T(n)= 2·T(n/2)+2 for n&gt;2 (recurrence)<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;<br />
n=2^m //every where its  n=2^m</p>
<p>T(2m)=2·T(2m-1)+2<br />
T(2m)=2·(2T(2m-2)+2)+2…<br />
.<br />
T(2m)=2m-1·T(21)+2m-1+2m- 2+…+21 //2^m-1 </p>
<p>//also we know : T(n)=2n-1+2n-2+…+2+1=2n-1</p>
<p>T(2m)=2m-1·T(21)+2m-2=3·2m/2-2=3n/2-2.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-2651">
        <div id="dsq-comment-header-2651" class="dsq-comment-header">
            <cite id="dsq-cite-2651">
                <span id="dsq-author-user-2651">pramod</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2651" class="dsq-comment-body">
            <div id="dsq-comment-message-2651" class="dsq-comment-message"><p>we can do it by making max heap and min heap .O(n)</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-soundbalaji odd alt depth-2" id="dsq-comment-2751">
        <div id="dsq-comment-header-2751" class="dsq-comment-header">
            <cite id="dsq-cite-2751">
                <span id="dsq-author-user-2751">bala</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2751" class="dsq-comment-body">
            <div id="dsq-comment-message-2751" class="dsq-comment-message"><p>Building a Max and Min heap are both O(nlogn) time complexities , not O(n). Correct me if you are trying to convey something else</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-sandeep even depth-3" id="dsq-comment-2752">
        <div id="dsq-comment-header-2752" class="dsq-comment-header">
            <cite id="dsq-cite-2752">
                <span id="dsq-author-user-2752">Sandeep</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2752" class="dsq-comment-body">
            <div id="dsq-comment-message-2752" class="dsq-comment-message"><p>@bala: Building a Heap is O(n), not O(nLogn).  Please refer <a href="http://www.personal.kent.edu/~rmuhamma/Algorithms/MyAlgorithms/Sorting/heapSort.htm" rel="nofollow">this </a>link.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-soundbalaji odd alt depth-4" id="dsq-comment-2753">
        <div id="dsq-comment-header-2753" class="dsq-comment-header">
            <cite id="dsq-cite-2753">
                <span id="dsq-author-user-2753">bala</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2753" class="dsq-comment-body">
            <div id="dsq-comment-message-2753" class="dsq-comment-message"><p>@Sandeep : yes, I am wrong. The max heap build takes approx O(n logn) but the asymptotically tighter bound is O(n). Thanks for reminding !</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-4" id="dsq-comment-3903">
        <div id="dsq-comment-header-3903" class="dsq-comment-header">
            <cite id="dsq-cite-3903">
                <span id="dsq-author-user-3903">Algoseekar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3903" class="dsq-comment-body">
            <div id="dsq-comment-message-3903" class="dsq-comment-message"><p>@sandeep can u please provide the poof of time complexity of 2nd method please reply asap..it doesn&#8217;t comes out to be what u says..???</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-5" id="dsq-comment-5316">
        <div id="dsq-comment-header-5316" class="dsq-comment-header">
            <cite id="dsq-cite-5316">
                <span id="dsq-author-user-5316">apps</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5316" class="dsq-comment-body">
            <div id="dsq-comment-message-5316" class="dsq-comment-message"><p>just think in general way&#8230;</p>
<p>leaf nodes will be &#8216;N&#8217;</p>
<p>internal nodes = &#8216;N-1&#8242;</p>
<p>height  no. of comparision<br />
&#8212;&#8211;   &#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
 1             0<br />
 2            N/2 __&#8211; 2 elm comp<br />
 3         2*(N/4)  |<br />
 4         2*(N/8)  |  2 elm comp<br />
 .             .    |&#8211;for min &amp;<br />
 .             .    |  max<br />
 N            2*1 __|<br />
         &#8212;&#8212;&#8212;&#8212;-</p>
<p>noc = N/2 + 2 * [ N/4 + N/8 + &#8230; + 1 ]<br />
noc = N/2 + N/4 + N/8 + &#8230; + 1 +<br />
            N/4 + N/8 + &#8230; + 1</p>
<p>w.k.t<br />
N/2 + N/4 + N/8 + .. + 1 = N-1 = no. of internal nodes.</p>
<p>thus , </p>
<p>noc = N-1 + ( N-1 ) &#8211; N/2<br />
noc = N-1+N/2-1<br />
noc = 3N/2 -2</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-5" id="dsq-comment-5319">
        <div id="dsq-comment-header-5319" class="dsq-comment-header">
            <cite id="dsq-cite-5319">
                <span id="dsq-author-user-5319">apps</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5319" class="dsq-comment-body">
            <div id="dsq-comment-message-5319" class="dsq-comment-message"><p>height&#8230;no. of comparision<br />
&#8212;&#8212;&#8230;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
.1&#8230;&#8230;&#8230;.0<br />
.2&#8230;&#8230;&#8230;..N/2___&#8211; 2 elm comp<br />
.3&#8230;&#8230;..2*(N/4) |<br />
.4&#8230;&#8230;..2*(N/8) |..2 elm comp<br />
&#8230;&#8230;&#8230;&#8230;&#8230;.. |&#8211;for min &amp;<br />
&#8230;&#8230;&#8230;&#8230;&#8230;.. |..max<br />
.N&#8230;&#8230;&#8230;.2*1___|<br />
&#8212;&#8212;&#8212;&#8212;-</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-venki odd alt thread-odd thread-alt depth-1" id="dsq-comment-1496">
        <div id="dsq-comment-header-1496" class="dsq-comment-header">
            <cite id="dsq-cite-1496">
                <span id="dsq-author-user-1496">Venki</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1496" class="dsq-comment-body">
            <div id="dsq-comment-message-1496" class="dsq-comment-message"><p>Refer Sara Baase (Computer Algorithms) and Dromey (How to solve it by computer)</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-1457">
        <div id="dsq-comment-header-1457" class="dsq-comment-header">
            <cite id="dsq-cite-1457">
                <span id="dsq-author-user-1457">Anunay</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1457" class="dsq-comment-body">
            <div id="dsq-comment-message-1457" class="dsq-comment-message"><p>Instead of creating struct and additional checks before starting the loop, Method 1 can be implemented as (C# code)</p>
<p>public void MinMaxInArray()<br />
{<br />
    int[] arr = { 11, 14, 5, 140 };<br />
    int min = int.MaxValue;<br />
    int max = int.MinValue;</p>
<p>    for (int i = 0; i &lt; arr.Length; i++)<br />
    {<br />
        if (arr[i] &lt; min)<br />
            min = arr[i];</p>
<p>        if (arr[i] &gt; max)<br />
            max = arr[i];<br />
    }</p>
<p>    Console.WriteLine(&quot;Min: {0}\nMax: {1}&quot;, min, max );<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-1013">
        <div id="dsq-comment-header-1013" class="dsq-comment-header">
            <cite id="dsq-cite-1013">
                <span id="dsq-author-user-1013">Gauri</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1013" class="dsq-comment-body">
            <div id="dsq-comment-message-1013" class="dsq-comment-message"><p>In case of method 2 , how solving the recurrence relation </p>
<p>T(n) = 2*T(n/2) + 2 and T(2) = 1 and T(1) = 0</p>
<p>comes out to be </p>
<p>   T(n)  = 3/2n -2 </p>
<p>Since solving this recurrence as following results in T(n) = 2*(n -1)</p>
<p>T(n/2) = 2*T(n/4) + 2 we have<br />
T(n) = 2*(2*T(n/4) + 2)) + 2 = 4*T(n/4) + 4 +2<br />
substituting for T(n/4) we obtain<br />
T(n) = 4*(2*T(n/8) + 2)) + 4 + 2 = 8*T(n/8) + 8 + 4 + 2</p>
<p>Continuing in this manner we find that<br />
T(n) = pow(2,k) * T(n/pow(2,k)) + 2*(pow(2,k) -1)</p>
<p>After k=log2(n) substitutions we have</p>
<p>T(n) = pow( 2,log2(n))*T(n/pow(2,log2(n))) + 2*(pow(2,log2(n)) -1)<br />
Noting that pow( 2,log2(n)) = n we have</p>
<p>T(n) = n * T(1) +2*(n -1)<br />
     = 2*n-2	</p>
<p>Please point out the error in the above calculation</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-3192">
        <div id="dsq-comment-header-3192" class="dsq-comment-header">
            <cite id="dsq-cite-3192">
                <span id="dsq-author-user-3192">abc</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3192" class="dsq-comment-body">
            <div id="dsq-comment-message-3192" class="dsq-comment-message"><p>The complexity calculated in this comment is correct. Right?<br />
I am confused as I don&#8217;t see any replies to this and even the post has not been modified. Request you to please clarify</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt thread-even depth-1" id="dsq-comment-592">
        <div id="dsq-comment-header-592" class="dsq-comment-header">
            <cite id="dsq-cite-592">
                <span id="dsq-author-user-592">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-592" class="dsq-comment-body">
            <div id="dsq-comment-message-592" class="dsq-comment-message"><p>@B: We have modified the code to make the suggested optimization. </p>
<p>In method 1, total number of comparisons (after the suggested optimization) is 1 + 2(n-2) in worst case and 1 + n &#8211; 2 in best case.<br />
In the above implementation, worst case occurs when elements are sorted in descending order and best case occurs when elements are sorted in ascending order.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-init-2 even depth-2" id="dsq-comment-1325">
        <div id="dsq-comment-header-1325" class="dsq-comment-header">
            <cite id="dsq-cite-1325">
                <span id="dsq-author-user-1325">init</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1325" class="dsq-comment-body">
            <div id="dsq-comment-message-1325" class="dsq-comment-message"><p>still the complexity of method 2 is 2*(n-1)???<br />
correct me if i am wrong!!</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-30028">
        <div id="dsq-comment-header-30028" class="dsq-comment-header">
            <cite id="dsq-cite-30028">
                <span id="dsq-author-user-30028">Vipul</span>
            </cite>
        </div>
        <div id="dsq-comment-body-30028" class="dsq-comment-body">
            <div id="dsq-comment-message-30028" class="dsq-comment-message"><p>worst case occur while sorting in both ascending or descending, it depends which condition are you checking first i.e. maximum or minimm</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-588">
        <div id="dsq-comment-header-588" class="dsq-comment-header">
            <cite id="dsq-cite-588">
                <span id="dsq-author-user-588">B</span>
            </cite>
        </div>
        <div id="dsq-comment-body-588" class="dsq-comment-body">
            <div id="dsq-comment-message-588" class="dsq-comment-message"><p>for method1,</p>
<pre> <code language="C">
  for(i = 2; i&lt;n; i++)
  {
    if(arr[i] &gt;  minmax.max)
      minmax.max = arr[i];
 
    if(arr[i] &lt;  minmax.min)
      minmax.min = arr[i];
  }
 

Should be optimized to 
  for(i = 2; i&lt;n; i++)
  {
    if(arr[i] &gt;  minmax.max)
      minmax.max = arr[i];
 
    else if(arr[i] &lt;  minmax.min)
      minmax.min = arr[i];
  }
</code> </pre>
<p>So, the no. of comparisons would pretty much be 3n/2 for all of the methods.<br />
I would not recommend Method 2, as it would have huge function-loads overhead.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-34797">
        <div id="dsq-comment-header-34797" class="dsq-comment-header">
            <cite id="dsq-cite-34797">
                <span id="dsq-author-user-34797">Dishant</span>
            </cite>
        </div>
        <div id="dsq-comment-body-34797" class="dsq-comment-body">
            <div id="dsq-comment-message-34797" class="dsq-comment-message"><p>Thanks so much for sharing this.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/maximum-and-minimum-in-an-array/';
var disqus_identifier = '4583 http://geeksforgeeks.org/?p=4583';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Maximum and minimum of an array using minimum number of comparisons";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.206 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:29:38 -->

<!-- Compression = gzip -->
<!-- super cache -->