<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>If you are given two traversal sequences, can you construct the binary tree? - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/if-you-are-given-two-traversal-sequences-can-you-construct-the-binary-tree/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="If you are given two traversal sequences, can you construct the binary tree? - GeeksforGeeks" />
<meta property="og:description" content="It depends on what traversals are given. If one of the traversal methods is Inorder then the tree can be constructed, otherwise not. Therefore, following combination can uniquely identify a tree. Inorder and Preorder. Inorder and Postorder. Inorder and Level-order. And following do not. Postorder and Preorder. Preorder and Level-order. Postorder and Level-order. For example, &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/if-you-are-given-two-traversal-sequences-can-you-construct-the-binary-tree/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:tag" content="Binary Tree" />
<meta property="article:tag" content="Tree Traveral" />
<meta property="article:section" content="Trees" />
<meta property="article:published_time" content="2009-08-02T13:12:47+00:00" />
<meta property="article:modified_time" content="2011-04-11T12:43:38+00:00" />
<meta property="og:updated_time" content="2011-04-11T12:43:38+00:00" />
<meta property="og:image" content="http://geeksforgeeks.org/wp-content/uploads/2009/06/Mirror.GIF" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.527 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417111161 210.212.53.139 172.19.11.169';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">If you are given two traversal sequences, can you construct the binary tree?</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>It depends on what traversals are given.  If one of the traversal methods is Inorder then the tree can be  constructed, otherwise not.<br />
<span id="more-657"></span><br />
<img src="http://geeksforgeeks.org/wp-content/uploads/2009/06/Mirror.GIF" alt="Mirror" title="Mirror" width="328" height="166" class="aligncenter size-full wp-image-659" /><br />
<strong>Therefore, following combination can uniquely identify a tree.</strong></p>
<p>Inorder and Preorder.<br />
Inorder and Postorder.<br />
Inorder and Level-order.<br />
<strong><br />
And following do not.</strong><br />
Postorder and Preorder.<br />
Preorder and Level-order.<br />
Postorder and Level-order.</p>
<p>For example,  Preorder, Level-order and Postorder traversals are same for the trees given in above diagram. </p>
<p>Preorder Traversal      = AB<br />
Postorder Traversal     = BA<br />
Level-Order Traversal  = AB</p>
<p>So, even if three of them (Pre, Post and Level) are given,  the tree can not be constructed.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/perfect-binary-tree-specific-level-order-traversal/" title="Perfect Binary Tree Specific Level Order Traversal">Perfect Binary Tree Specific Level Order Traversal</a></li><li><a href="http://www.geeksforgeeks.org/print-nodes-top-view-binary-tree/" title="Print Nodes in Top View of Binary Tree">Print Nodes in Top View of Binary Tree</a></li><li><a href="http://www.geeksforgeeks.org/k-dimensional-tree/" title="K Dimensional Tree">K Dimensional Tree</a></li><li><a href="http://www.geeksforgeeks.org/convert-binary-tree-threaded-binary-tree/" title="Convert a Binary Tree to Threaded binary tree">Convert a Binary Tree to Threaded binary tree</a></li><li><a href="http://www.geeksforgeeks.org/serialize-deserialize-n-ary-tree/" title="Serialize and Deserialize an N-ary Tree">Serialize and Deserialize an N-ary Tree</a></li><li><a href="http://www.geeksforgeeks.org/serialize-deserialize-binary-tree/" title="Serialize and Deserialize a Binary Tree">Serialize and Deserialize a Binary Tree</a></li><li><a href="http://www.geeksforgeeks.org/given-binary-tree-print-nodes-two-given-level-numbers/" title="Print nodes between two given level numbers of a binary tree">Print nodes between two given level numbers of a binary tree</a></li><li><a href="http://www.geeksforgeeks.org/find-height-binary-tree-represented-parent-array/" title="Find Height of Binary Tree represented by Parent array">Find Height of Binary Tree represented by Parent array</a></li></ul>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/binary-tree/" rel="tag">Binary Tree</a>, <a href="http://www.geeksforgeeks.org/tag/tree-traveral/" rel="tag">Tree Traveral</a></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fif-you-are-given-two-traversal-sequences-can-you-construct-the-binary-tree%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/if-you-are-given-two-traversal-sequences-can-you-construct-the-binary-tree/" data-text="If you are given two traversal sequences, can you construct the binary tree?" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/if-you-are-given-two-traversal-sequences-can-you-construct-the-binary-tree/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-31140">
        <div id="dsq-comment-header-31140" class="dsq-comment-header">
            <cite id="dsq-cite-31140">
                <span id="dsq-author-user-31140">smith</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31140" class="dsq-comment-body">
            <div id="dsq-comment-message-31140" class="dsq-comment-message"><p>when preorder and inorder is given:</p>
<p>code is</p>
<p>#include</p>
<p>#include</p>
<p>struct node </p>
<p>{</p>
<p>	int data;</p>
<p>	struct node *left;</p>
<p>	struct node *right;</p>
<p>};</p>
<p>struct node *construct(int *,int *,struct node *,int ,int,int,int);</p>
<p>struct node *newnode(int data);</p>
<p>int partition(int *,int,int,int);</p>
<p>void travers(struct node *);</p>
<p>void printnode(struct node *,int);</p>
<p>int main()</p>
<p>{</p>
<p>	int inorder[]={4,2,5,1,3};</p>
<p>	int preorder[]={1,2,3,5,3};</p>
<p>	struct node *root=NULL;int i=0;int n=5;</p>
<p>	root=construct(inorder,preorder,root,i,0,n-1,n);</p>
<p>	travers(root);</p>
<p>}</p>
<p>void printnode(struct node *root,int level)</p>
<p>{</p>
<p>	if(root==NULL)return ;</p>
<p>	if(level==1)printf(&#8220;%d &#8220;,root-&gt;data);</p>
<p>	printnode(root-&gt;left,level-1);</p>
<p>	printnode(root-&gt;right,level-1);</p>
<p>}</p>
<p>void travers(struct node *root)</p>
<p>{</p>
<p>	for(int i=1;ihigh)return NULL;</p>
<p>    if(low==high)return newnode(ino[low]);</p>
<p>    (root)=newnode(preo[i]);</p>
<p>     k=partition(ino,preo[i],low,high);</p>
<p>    root-&gt;left=construct(ino,preo,((root)-&gt;left),i+1,low,k-1,n);</p>
<p>    root-&gt;right=construct(ino,preo,((root)-&gt;right),i+1,k+1,high,n);</p>
<p>    return root;</p>
<p>}</p>
<p>int partition(int *ino,int x,int low,int high)</p>
<p>{</p>
<p>	for(int i=low;idata=data;</p>
<p>	newnod-&gt;left=NULL;</p>
<p>	newnod-&gt;right=NULL;</p>
<p>	return newnod;</p>
<p>}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-18659">
        <div id="dsq-comment-header-18659" class="dsq-comment-header">
            <cite id="dsq-cite-18659">
                <span id="dsq-author-user-18659">Rahul Singh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-18659" class="dsq-comment-body">
            <div id="dsq-comment-message-18659" class="dsq-comment-message"><p>@geeksforgeeks team if we know any one of the traversal except inorder we can construct the unique BST . because we can ourself find the  inorder traversal by sort the given traversal sequence.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-19161">
        <div id="dsq-comment-header-19161" class="dsq-comment-header">
            <cite id="dsq-cite-19161">
                <span id="dsq-author-user-19161">Rahul</span>
            </cite>
        </div>
        <div id="dsq-comment-body-19161" class="dsq-comment-body">
            <div id="dsq-comment-message-19161" class="dsq-comment-message"><p>@Rahul Singh </p>
<p>We are talking about Binary tree not BST</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-15293">
        <div id="dsq-comment-header-15293" class="dsq-comment-header">
            <cite id="dsq-cite-15293">
                <span id="dsq-author-user-15293">trilok sharma</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15293" class="dsq-comment-body">
            <div id="dsq-comment-message-15293" class="dsq-comment-message"><p>#include<br />
#include<br />
#include<br />
using namespace std;</p>
<p>struct node<br />
{<br />
	int data;<br />
	node *left;<br />
	node *right;<br />
};</p>
<p>node* Newnode(int data)<br />
{<br />
node * curr;<br />
	curr = (node *)malloc(sizeof(node));<br />
	curr-&gt;data = data;<br />
	curr-&gt;left = curr-&gt;right = NULL;<br />
return(curr);<br />
}</p>
<p>int search(int inorder[],int start,int end,int data)<br />
{<br />
	for(int i=start;i end)<br />
		 return NULL;</p>
<p>	data=postorder[post_index&#8211;];<br />
	node *root=Newnode(data);</p>
<p>	if(start == end)<br />
		 return root;	</p>
<p>	in_pos=search(inorder,start,end,data);<br />
	root-&gt;right=createTree(postorder,inorder,in_pos+1,end);<br />
	root-&gt;left=createTree(postorder,inorder,start,in_pos-1);</p>
<p>return root;<br />
}</p>
<p>void display_inOrder(struct node* node)<br />
{<br />
  if (node == NULL)<br />
    return;</p>
<p>  display_inOrder(node-&gt;left);<br />
  printf(&#8220;%d &#8220;, node-&gt;data);<br />
  display_inOrder(node-&gt;right);<br />
} </p>
<p>int main()<br />
{<br />
int n,in[100000],post[100000],i;<br />
node *root;</p>
<p>    cout&lt;&gt;n;</p>
<p>	cout&lt;&lt;&quot;Enter postorder sequence = &quot;;<br />
	for(i=0;i&gt;post[i];</p>
<p>	cout&lt;&lt;&quot;Enter inorder sequence = &quot;;<br />
	for(i=0;i&gt;in[i];</p>
<p>	root=createTree(post,in,0,n-1);</p>
<p>	cout&lt;&lt;&quot;output inorder sequence = &quot;;<br />
	display_inOrder(root);</p>
<p>return 0;<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-12295">
        <div id="dsq-comment-header-12295" class="dsq-comment-header">
            <cite id="dsq-cite-12295">
                <span id="dsq-author-user-12295">Himanshu</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12295" class="dsq-comment-body">
            <div id="dsq-comment-message-12295" class="dsq-comment-message"><p>Here is a an algorithm from the URL <a href="http://stackoverflow.com/questions/4575719/binary-tree-from-in-order-and-level-order-traversals" rel="nofollow">http://stackoverflow.com/questions/4575719/binary-tree-from-in-order-and-level-order-traversals</a> that mentions how to construct a BST given inorder and level order.</p>
<p>f(inorder, levelorder):<br />
      if length(levelorder) == 0:<br />
          return None<br />
      root = levelorder[0]#set root to first element in levelorder<br />
      subIn1, subIn2 = partition(inorder, levelorder[0]) #partition inorder based on root<br />
      subLevel1 = extract(levelOrder, subIn1)#remove elements in level order not in subIn1<br />
      subLevel2 = extract(levelOrder, subIn2)#remove elements in level order not in subIn2<br />
      root-&gt;left = f(subIn1, subLevel1)<br />
      root-&gt;right = f(subIn2, subLevel2)<br />
      return root</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-7475">
        <div id="dsq-comment-header-7475" class="dsq-comment-header">
            <cite id="dsq-cite-7475">
                <span id="dsq-author-user-7475">Avinash</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7475" class="dsq-comment-body">
            <div id="dsq-comment-message-7475" class="dsq-comment-message"><pre> <code language="C">
/* Paste your code here (You may delete these lines if not 
writing code) */
Construct Tree from given Inorder and Preorder traversals
April 16, 2010
Let us consider the below traversals:

Inorder sequence: D B E A F C
Preorder sequence: A B D E C F

BuildTree(inorder[],preorder[],start,end)
{
	static int preindex=0;
	If start&gt;end return NULL;
	
	struct node *newnode=new(preorder(preindex));
	preindex=preindex+1;
	
	If start==end return node;
	
	int searchind=search(inorder,start,end,node-&gt;data);
	
	node-&gt;left=BuildTree(inorder,preorder,start,searchind-1);
	node-&gt;right=BuildTree(inorder,preorder,searchind+1,end);
	
	return newnode;
}
=========================
Given inorder and postorder traversals construct a binary tree

Inorder sequence: D B E A F C
Postorder sequence: D E B F C A

struct node *BuidTree(int postorder[], int inorder[], int start, int end)
{
	static int postindex=n-1;
	int searchindex;
	If start&gt;end return NULL;
	struct node *newNode=new(postorder[postindex--]);
	If (start==end) return newNode;
	searchindex=search(inorder,start,end);
	newNode-&gt;right=BuildTree(postorder, inorder, searchindex+1,end);
	newNode-&gt;left=BuildTree(postorder,inorder,start,searchindex-1);
	
	return newNode;
}
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-7474">
        <div id="dsq-comment-header-7474" class="dsq-comment-header">
            <cite id="dsq-cite-7474">
                <span id="dsq-author-user-7474">Avinash</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7474" class="dsq-comment-body">
            <div id="dsq-comment-message-7474" class="dsq-comment-message"><p>Let us consider the below traversals:</p>
<p>Inorder sequence: D B E A F C<br />
Preorder sequence: A B D E C F</p>
<p>BuildTree(inorder[],preorder[],start,end)<br />
{<br />
	static int preindex=0;<br />
	If start&gt;end return NULL;</p>
<p>	struct node *newnode=new(preorder(preindex));<br />
	preindex=preindex+1;</p>
<p>	If start==end return node;</p>
<p>	int searchind=search(inorder,start,end,node-&gt;data);</p>
<p>	node-&gt;left=BuildTree(inorder,preorder,start,searchind-1);<br />
	node-&gt;right=BuildTree(inorder,preorder,searchind+1,end);</p>
<p>	return newnode;<br />
}<br />
=========================<br />
Given inorder and postorder traversals construct a binary tree</p>
<p>Inorder sequence: D B E A F C<br />
Postorder sequence: D E B F C A</p>
<p>struct node *BuidTree(int postorder[], int inorder[], int start, int end)<br />
{<br />
	static int postindex=n-1;<br />
	int searchindex;<br />
	If start&gt;end return NULL;<br />
	struct node *newNode=new(postorder[postindex&#8211;]);<br />
	If (start==end) return newNode;<br />
	searchindex=search(inorder,start,end);<br />
	newNode-&gt;right=BuildTree(postorder, inorder, searchindex+1,end);<br />
	newNode-&gt;left=BuildTree(postorder,inorder,start,searchindex-1);</p>
<p>	return newNode;<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-6774">
        <div id="dsq-comment-header-6774" class="dsq-comment-header">
            <cite id="dsq-cite-6774">
                <span id="dsq-author-user-6774">Devansh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6774" class="dsq-comment-body">
            <div id="dsq-comment-message-6774" class="dsq-comment-message"><p>Inorder of a tree is must as from other traversal we are getting the root node of that tree and from inorder we get the child nodes which are in left subtree and right subtree as nodes which are in left subtree appears before root node in inorder traversal and the ones which are in right subtree appears after root.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-4757">
        <div id="dsq-comment-header-4757" class="dsq-comment-header">
            <cite id="dsq-cite-4757">
                <span id="dsq-author-user-4757">An</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4757" class="dsq-comment-body">
            <div id="dsq-comment-message-4757" class="dsq-comment-message"><p>Hey can u xplain how to create a tree from inorder and level order !! I tried but can&#8217;t figure out how we will get the knowledge of which child to attach to which root.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-4364">
        <div id="dsq-comment-header-4364" class="dsq-comment-header">
            <cite id="dsq-cite-4364">
                <span id="dsq-author-user-4364">Anand</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4364" class="dsq-comment-body">
            <div id="dsq-comment-message-4364" class="dsq-comment-message"><p>Given a post order and pre order traversal you can still construct a unique tree provide each internal nodes has two childern&#8217;s<br />
anandtechblog.blogspot.com/2011/06/construct-given-tree-from-pre-order-and.html</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-4363">
        <div id="dsq-comment-header-4363" class="dsq-comment-header">
            <cite id="dsq-cite-4363">
                <span id="dsq-author-user-4363">Anand</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4363" class="dsq-comment-body">
            <div id="dsq-comment-message-4363" class="dsq-comment-message"><p>anandtechblog.blogspot.com/2011/06/construct-given-tree-from-inorder-and.html</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-manishj odd alt thread-even depth-1" id="dsq-comment-3501">
        <div id="dsq-comment-header-3501" class="dsq-comment-header">
            <cite id="dsq-cite-3501">
                <span id="dsq-author-user-3501">manishj</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3501" class="dsq-comment-body">
            <div id="dsq-comment-message-3501" class="dsq-comment-message"><p>Let I(n) = i0,i1,i2,i3&#8230;.in be elements of a inorder traversal of a binary tree.<br />
Simillarly let Pre(n) = p0,p1,p2&#8230;&#8230;pn be the elements of a preorder traversal of a binary tree. </p>
<p>Now If we know that ik is root of binary tree , we can be sure that elements i0..ik-1 are in left subtree of tree and elements from 1k+1..in are in right-subtree rooted at ik(we can prove this by contradiction).</p>
<p>Now , if we fix ik to be root. We inturn fix its left subtree (i0..ik-1), and its right right-subtree(ik+1&#8230;n), thus in essence we fix the tree (we can apply induction on n to mathematically prove this).  </p>
<p>Inorder to fix the root , we can use either pre-order traversal.In any  preorder traversal Pre(n) ,p0 is root of the the binarytree. We can also use Postorder traversal Post(n) say q0..qn  in which qn is always the root of the tree.</p>
<p>So this proves that inorder combined with either post-order or preorder uniquely determine a tree.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-2757">
        <div id="dsq-comment-header-2757" class="dsq-comment-header">
            <cite id="dsq-cite-2757">
                <span id="dsq-author-user-2757">Himanshu Aggarwal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2757" class="dsq-comment-body">
            <div id="dsq-comment-message-2757" class="dsq-comment-message"><p>Similarly, for trees like : </p>
<pre>
    A                 A
   /       and          \
 B                        B
</pre>
<p>both have preorder(and level-order) AB and postorder BA</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-2756">
        <div id="dsq-comment-header-2756" class="dsq-comment-header">
            <cite id="dsq-cite-2756">
                <span id="dsq-author-user-2756">Himanshu Aggarwal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2756" class="dsq-comment-body">
            <div id="dsq-comment-message-2756" class="dsq-comment-message"><p>consider Two Binary Trees</p>
<p>For tree1 :<br />
Root = A<br />
Left Chid = B</p>
<p>Preorder: A,B<br />
Postorder: B,A</p>
<p>and for tree 2:<br />
Root = A<br />
Right Child = B</p>
<p>Preorder: A,B<br />
Postorder: B,A</p>
<p>For given preorder and postorder two different binary trees can be formed</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-9052">
        <div id="dsq-comment-header-9052" class="dsq-comment-header">
            <cite id="dsq-cite-9052">
                <span id="dsq-author-user-9052">Karthick</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9052" class="dsq-comment-body">
            <div id="dsq-comment-message-9052" class="dsq-comment-message"><p>Forget about binary tree.  What about a BST with just pre-order or a post-order?</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-wgpshashank odd alt thread-odd thread-alt depth-1" id="dsq-comment-2755">
        <div id="dsq-comment-header-2755" class="dsq-comment-header">
            <cite id="dsq-cite-2755">
http://www.wgpshashank.co.cc                <span id="dsq-author-user-2755">wgpshashank</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2755" class="dsq-comment-body">
            <div id="dsq-comment-message-2755" class="dsq-comment-message"><p>It is not very clear why InOrder is a must to recreate the tree.<br />
Can you please provide more details regarding the same?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-tech-login-id2 even thread-even depth-1" id="dsq-comment-1977">
        <div id="dsq-comment-header-1977" class="dsq-comment-header">
            <cite id="dsq-cite-1977">
                <span id="dsq-author-user-1977">tech.login.id2</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1977" class="dsq-comment-body">
            <div id="dsq-comment-message-1977" class="dsq-comment-message"><p>It is not very clear why InOrder is a must to recreate the tree.<br />
Can you please provide more details regarding the same?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-734">
        <div id="dsq-comment-header-734" class="dsq-comment-header">
            <cite id="dsq-cite-734">
                <span id="dsq-author-user-734">Rohini</span>
            </cite>
        </div>
        <div id="dsq-comment-body-734" class="dsq-comment-body">
            <div id="dsq-comment-message-734" class="dsq-comment-message"><p>//preIndex is global</p>
<pre> <code language="C">
node* BST::buildTree(int in[],int inStrt,int inEnd,int len,int pre[])
{
    if(preIndex &gt;= len || inStrt &gt; inEnd)
        return NULL;

    node *retNode = makeNode(pre[preIndex++]);

    if(inStrt == inEnd)
        return retNode;

    int inIndex = findNodeIn(in,inStrt, inEnd, retNode-&gt;data);
    retNode-&gt;left = buildTree(in, inStrt,inIndex-1,len,pre);
    retNode-&gt;right = buildTree(in,inIndex+1,inEnd,len,pre);

    return retNode;

}

int BST::findNodeIn(int in[],int inStrt, int inEnd,int value)
{
    int i = inStrt ;
    for(;i&lt;=inEnd;i++)
        if(in[i] == value)
            return i;


}

//test code
int preIndex;

int main()
{
preIndex = 0;
int in[] = {1,2,3,4,5,7,8};
int pre[] = {4,2,1,3,7,5,8};
root = buildTree(in,0,6,7,pre);
}
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor even depth-2" id="dsq-comment-806">
        <div id="dsq-comment-header-806" class="dsq-comment-header">
            <cite id="dsq-cite-806">
                <span id="dsq-author-user-806">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-806" class="dsq-comment-body">
            <div id="dsq-comment-message-806" class="dsq-comment-message"><p>@Rohini: Thanks for providing the code. We have published it <a href="http://geeksforgeeks.org/?p=6633" rel="nofollow">here</a>.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-27591">
        <div id="dsq-comment-header-27591" class="dsq-comment-header">
            <cite id="dsq-cite-27591">
                <span id="dsq-author-user-27591">abhi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27591" class="dsq-comment-body">
            <div id="dsq-comment-message-27591" class="dsq-comment-message"><p>What about the case when we have duplicates in the Binary Tree ?</p>
<p>We can&#8217;t identify the tree, right ?<br />
suppose for the case : when all node values are 1&#8217;s only.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/if-you-are-given-two-traversal-sequences-can-you-construct-the-binary-tree/';
var disqus_identifier = '657 http://geeksforgeeks.org/?p=657';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "If you are given two traversal sequences, can you construct the binary tree?";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.192 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:29:21 -->

<!-- Compression = gzip -->
<!-- super cache -->