<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Operating Systems | Set 17 - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/operating-systems-set-17/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Operating Systems | Set 17 - GeeksforGeeks" />
<meta property="og:description" content="Following question has been asked in GATE 2012 CS exam. Fetch_And_Add(X,i) is an atomic Read-Modify-Write instruction that reads the value of memory location X, increments it by the value i, and returns the old value of X. It is used in the pseudocode shown below to implement a busy-wait lock. L is an unsigned integer &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/operating-systems-set-17/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:tag" content="GATE" />
<meta property="article:tag" content="GATE-CS-2012" />
<meta property="article:tag" content="Operating systems" />
<meta property="article:section" content="MCQ" />
<meta property="article:published_time" content="2012-11-04T21:38:18+00:00" />
<meta property="article:modified_time" content="2012-11-04T21:42:34+00:00" />
<meta property="og:updated_time" content="2012-11-04T21:42:34+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.486 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417112648 14.139.128.14 10.178.240.181';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Operating Systems | Set 17</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Following question has been asked in GATE 2012 CS exam. <span id="more-26987"></span></p>
<p><strong>Fetch_And_Add(X,i) is an atomic Read-Modify-Write instruction that reads the value of memory location X, increments it by the value i, and returns the old value of X. It is used in the pseudocode shown below to implement a busy-wait lock. L is an unsigned integer shared variable initialized to 0. The value of 0 corresponds to lock being available, while any non-zero value corresponds to the lock being not available.<br />
</strong></p>
<pre>
  AcquireLock(L){
         while (Fetch_And_Add(L,1))
               L = 1;
   }
  ReleaseLock(L){
         L = 0;
   } </pre>
<p><strong>This implementation</strong><br />
(A) fails as L can overflow<br />
(B) fails as L can take on a non-zero value when the lock is actually available<br />
(C) works correctly but may starve some processes<br />
(D) works correctly without starvation</p>
<p>Answer (B)<br />
Take closer look the below while loop.</p>
<pre>
     while (Fetch_And_Add(L,1))
               L = 1;  // A waiting process can be here just after 
                       // the lock is released, and can make L = 1.
</pre>
<p>Consider a situation where a process has just released the lock and made L = 0. Let there be one more process waiting for the lock, means executing the AcquireLock() function. Just after the L was made 0, let the waiting processes executed the line L = 1. Now, the lock is available and L = 1.  Since L is 1, the waiting process (and any other future coming processes) can not come out of the while loop.</p>
<p>The above problem can be resolved by changing the AcuireLock() to following.  </p>
<pre>
  AcquireLock(L){
         while (Fetch_And_Add(L,1))
         { // Do Nothing }
   }
</pre>
<p>Source: <a href="http://www.geeksforgeeks.org/forum/topic/gate-2012">GATE 2012</a></p>
<p>Please write comments if you find any of the answers/explanations incorrect, or you want to share more information about the topics discussed above.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/data-structures-algorithms-set-34/" title="Data Structures and Algorithms | Set 35">Data Structures and Algorithms | Set 35</a></li><li><a href="http://www.geeksforgeeks.org/data-structures-algorithms-set-34-2/" title="Data Structures and Algorithms | Set 34">Data Structures and Algorithms | Set 34</a></li><li><a href="http://www.geeksforgeeks.org/data-structures-algorithms-set-33/" title="Data Structures and Algorithms | Set 33">Data Structures and Algorithms | Set 33</a></li><li><a href="http://www.geeksforgeeks.org/c-language-set-10/" title="C Language | Set 10">C Language | Set 10</a></li><li><a href="http://www.geeksforgeeks.org/data-structures-algorithms-set-32/" title="Data Structures and Algorithms | Set 32">Data Structures and Algorithms | Set 32</a></li><li><a href="http://www.geeksforgeeks.org/data-structures-and-algorithms-set-31/" title="Data Structures and Algorithms | Set 31">Data Structures and Algorithms | Set 31</a></li><li><a href="http://www.geeksforgeeks.org/data-structures-and-algorithms-set-30-2/" title="Data Structures and Algorithms | Set 30">Data Structures and Algorithms | Set 30</a></li><li><a href="http://www.geeksforgeeks.org/automata-theory-set-5-2/" title="Automata Theory | Set 6">Automata Theory | Set 6</a></li></ul>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/gate/" rel="tag">GATE</a>, <a href="http://www.geeksforgeeks.org/tag/gate-cs-2012/" rel="tag">GATE-CS-2012</a>, <a href="http://www.geeksforgeeks.org/tag/operating-systems/" rel="tag">Operating systems</a></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Foperating-systems-set-17%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/operating-systems-set-17/" data-text="Operating Systems | Set 17" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/operating-systems-set-17/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-33429">
        <div id="dsq-comment-header-33429" class="dsq-comment-header">
            <cite id="dsq-cite-33429">
http://www-users.cs.umn.edu/~verma/                <span id="dsq-author-user-33429">Saurabh Verma</span>
            </cite>
        </div>
        <div id="dsq-comment-body-33429" class="dsq-comment-body">
            <div id="dsq-comment-message-33429" class="dsq-comment-message"><p>&#8220;The above problem can be resolved by changing the AcuireLock() to following.  </p>
<p>  AcquireLock(L){<br />
         while (Fetch_And_Add(L,1))<br />
         { // Do Nothing }<br />
   }&#8221;</p>
<p>This will overflow the L value as you are executing Fetch_And_Add(L,1) without resetting (as it was doing earlier L=1).</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-29235">
        <div id="dsq-comment-header-29235" class="dsq-comment-header">
            <cite id="dsq-cite-29235">
                <span id="dsq-author-user-29235">deepak</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29235" class="dsq-comment-body">
            <div id="dsq-comment-message-29235" class="dsq-comment-message"><p>Although the problem is solved it will give overflow</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-13303">
        <div id="dsq-comment-header-13303" class="dsq-comment-header">
            <cite id="dsq-cite-13303">
                <span id="dsq-author-user-13303">ANIL TAGALE</span>
            </cite>
        </div>
        <div id="dsq-comment-body-13303" class="dsq-comment-body">
            <div id="dsq-comment-message-13303" class="dsq-comment-message"><pre> <code language="C">
 
1.AcquireLock(L){
2.                while (Fetch_And_Add(L,1))
3.                  L = 1;
                }
4.  ReleaseLock(L){
5.                  L = 0;
                  }

write the above code like given below that make better sense while analysing.

 1.AcquireLock(L)
   {                
 2. while (Fetch_And_Add(L,1))
       { 
 3.     L = 1;
       }         
   }
4.  ReleaseLock(L)
    {
5.    L = 0;
    }

let suppose process p1 comes in 
here L=0 and i=1 in starting 
   
   L
_______
|__0___|

p1 will have L=0 and execute Fetch_And_Add(L,1) which modify content of L=0 to L=0+1(as i=1)=1 and return old value of L=0.
means Fetch_And_Add(L,1)=0 so while(0) is evaluate to false and p1 is not going to execute  statement 3.

now L=1;
now suppose p2 comes and execute 1 statement so it have L=1 
and goes to execute statement 2. 
so it execute  Fetch_And_Add(L,1) which change content of L=1 to L=2 and return old L=1 so while condition evaluates to true now 
p2 executing 2-3-2-3-2-3-2  statement and get preempted. we know preemption is temporary and p2 will come back and start execution from 3 as it last time executed statement 2.  

important now suppose p1 after executing 4 statement executing 5 statement L=0 and now p2 come back it will change L=0 to L=1 and keep moving in while loop as L=1 remain and now p2 and other process will not able to come in critical section as L is not going to be 0 in future that will makes while condition false. so processes caught in barrier . 
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-13302">
        <div id="dsq-comment-header-13302" class="dsq-comment-header">
            <cite id="dsq-cite-13302">
                <span id="dsq-author-user-13302">ANIL TAGALE</span>
            </cite>
        </div>
        <div id="dsq-comment-body-13302" class="dsq-comment-body">
            <div id="dsq-comment-message-13302" class="dsq-comment-message"><p>1.AcquireLock(L){<br />
2.                while (Fetch_And_Add(L,1))<br />
3.                  L = 1;<br />
                }<br />
4.  ReleaseLock(L){<br />
5.                  L = 0;<br />
                  }</p>
<p>write the above code like given below that make better sense while analyzing.</p>
<p> 1.AcquireLock(L)<br />
   {<br />
 2. while (Fetch_And_Add(L,1))<br />
       {<br />
 3.     L = 1;<br />
       }<br />
   }<br />
4.  ReleaseLock(L)<br />
    {<br />
5.    L = 0;<br />
    }</p>
<p>let suppose process p1 comes in<br />
here L=0 and i=1 in starting </p>
<p>   L<br />
_______<br />
|__0___|</p>
<p>p1 will have L=0 and execute Fetch_And_Add(L,1) which modify content of L=0 to L=0+1(as i=1)=1 and return old value of L=0.<br />
means Fetch_And_Add(L,1)=0 so while(0) is evaluate to false and p1 is not going to execute  statement 3.</p>
<p>now L=1;<br />
now suppose p2 comes and execute 1 statement so it have L=1<br />
and goes to execute statement 2.<br />
so it execute  Fetch_And_Add(L,1) which change content of L=1 to L=2 and return old L=1 so while condition evaluates to true now<br />
p2 executing 2-3-2-3-2-3-2  statement and get preempted. we know preemption is temporary and p2 will come back and start execution from 3 as it last time executed statement 2.  </p>
<p>important now suppose p1 after executing 4 statement executing 5 statement L=0 and now p2 come back it will change L=0 to L=1 and keep moving in while loop as L=1 remain and now p2 and other process will not able to come in critical section as L is not going to be 0 in future that will makes while condition false. so processes caught in barrier .</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-12893">
        <div id="dsq-comment-header-12893" class="dsq-comment-header">
            <cite id="dsq-cite-12893">
                <span id="dsq-author-user-12893">Pradeep</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12893" class="dsq-comment-body">
            <div id="dsq-comment-message-12893" class="dsq-comment-message"><p>@kartik : It seems to me that it would give overflow.</p>
<p>perhaps it should work : it will avoid setting L to 1 after L becomes 0.</p>
<pre> <code language="C">
AcquireLock(L){
         while (Fetch_And_Add(L,1))
         { 
              if(L!=0)L=1;
         }
}
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-29599">
        <div id="dsq-comment-header-29599" class="dsq-comment-header">
            <cite id="dsq-cite-29599">
                <span id="dsq-author-user-29599">sumit007</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29599" class="dsq-comment-body">
            <div id="dsq-comment-message-29599" class="dsq-comment-message"><p>It can also produce infinite loop.</p>
<p>Take for an example Process 0 executes above AcquireLock(L) and context switch happens when it was inside if loop.</p>
<p>if(L!=0){<br />
   //Context Switch occurs<br />
    L=1;<br />
}</p>
<p>CPU was assigned to Process 1, which releases the lock and made L = 0. Now, after one more context switch, process 0 starts executing the above code and hence execute the line L=1;<br />
Since L is 1, the waiting process (and any other future coming processes) can not come out of the while loop.</p>
<p>That&#8217;s why we need ATOMIC OPERATIONS.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-12817">
        <div id="dsq-comment-header-12817" class="dsq-comment-header">
            <cite id="dsq-cite-12817">
                <span id="dsq-author-user-12817">Meet Shah</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12817" class="dsq-comment-body">
            <div id="dsq-comment-message-12817" class="dsq-comment-message"><p>In the below code i.e. the changed code for AcquireLock(), isn&#8217;t there a chance of overflow in L?</p>
<pre> <code language="C">
AcquireLock(L){
         while (Fetch_And_Add(L,1))
         { // Do Nothing }
   }
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-12279">
        <div id="dsq-comment-header-12279" class="dsq-comment-header">
            <cite id="dsq-cite-12279">
                <span id="dsq-author-user-12279">sudhir</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12279" class="dsq-comment-body">
            <div id="dsq-comment-message-12279" class="dsq-comment-message"><p>@kartik: plz can u tell me, when a process p2(which is stuckng in while loop) reads L=0 made by process p1 and while reading L=1 line it will enter in critical section&#8230;where is problem of process p2 for watting satate..plz explain </p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-12280">
        <div id="dsq-comment-header-12280" class="dsq-comment-header">
            <cite id="dsq-cite-12280">
                <span id="dsq-author-user-12280">Kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12280" class="dsq-comment-body">
            <div id="dsq-comment-message-12280" class="dsq-comment-message"><p>See <a href="http://www.geeksforgeeks.org/archives/26987/comment-page-1#comment-12270" rel="nofollow">this</a> comment.  </p>
<p>To add to above comment, the problematic situation is, P1 releases locks between following two events in P2<br />
1) after the execution of while condition check in P2<br />
2) and before the execution of line &#8220;L = 1;&#8221; in P2</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-12269">
        <div id="dsq-comment-header-12269" class="dsq-comment-header">
            <cite id="dsq-cite-12269">
                <span id="dsq-author-user-12269">Ashish</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12269" class="dsq-comment-body">
            <div id="dsq-comment-message-12269" class="dsq-comment-message"><p>&#8220;Just after the L was made 0, let the waiting processes executed the line L = 1. Now, the lock is available and L = 1. Since L is 1, the waiting process (and any other future coming processes) can not come out of the while loop.&#8221;<br />
 please explain these lines a bit more&#8230;.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-12270">
        <div id="dsq-comment-header-12270" class="dsq-comment-header">
            <cite id="dsq-cite-12270">
                <span id="dsq-author-user-12270">Kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12270" class="dsq-comment-body">
            <div id="dsq-comment-message-12270" class="dsq-comment-message"><p>Let there be two processes P1 and P2, both of them want to enter critical section.</p>
<p>Let P1 first acquires the lock, executes the critical section and releases the lock by making L = 0.  The moment P1 makes L = 0, say P2 executes the line L = 1 and makes L = 1. So Lock is available now, but L is 1.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-12275">
        <div id="dsq-comment-header-12275" class="dsq-comment-header">
            <cite id="dsq-cite-12275">
                <span id="dsq-author-user-12275">Ashish</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12275" class="dsq-comment-body">
            <div id="dsq-comment-message-12275" class="dsq-comment-message"><p>ohoooooo&#8230; got it. thanx @kartik</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-4" id="dsq-comment-31844">
        <div id="dsq-comment-header-31844" class="dsq-comment-header">
            <cite id="dsq-cite-31844">
                <span id="dsq-author-user-31844">SwamiJi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31844" class="dsq-comment-body">
            <div id="dsq-comment-message-31844" class="dsq-comment-message"><p>&#8220;The moment P1 makes L = 0, say P2 executes the line L = 1 and makes L = 1 . So Lock is available&#8221;..<br />
.This is, in my opinion, is wrong.. as statement says..The value of L=0 corresponds to lock being available&#8230; i.e.<br />
Lock is available only when a process comes out of while loop&#8230;i.e. when L=0.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-5" id="dsq-comment-31845">
        <div id="dsq-comment-header-31845" class="dsq-comment-header">
            <cite id="dsq-cite-31845">
                <span id="dsq-author-user-31845">SwamiJi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31845" class="dsq-comment-body">
            <div id="dsq-comment-message-31845" class="dsq-comment-message"><p>L=1 does not mean lock is available.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-5" id="dsq-comment-31846">
        <div id="dsq-comment-header-31846" class="dsq-comment-header">
            <cite id="dsq-cite-31846">
                <span id="dsq-author-user-31846">SwamiJi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31846" class="dsq-comment-body">
            <div id="dsq-comment-message-31846" class="dsq-comment-message"><p>Answer should be C.. as it does not maintain a FIFO queue (as semaphore does), and any low priority process may starve if high priority processes keep on acquiring lock&#8230;.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-5" id="dsq-comment-31889">
        <div id="dsq-comment-header-31889" class="dsq-comment-header">
            <cite id="dsq-cite-31889">
                <span id="dsq-author-user-31889">SwamiJi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31889" class="dsq-comment-body">
            <div id="dsq-comment-message-31889" class="dsq-comment-message"><p>my mistake,,,B is correct!!</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-5" id="dsq-comment-32180">
        <div id="dsq-comment-header-32180" class="dsq-comment-header">
            <cite id="dsq-cite-32180">
                <span id="dsq-author-user-32180">fritzrage</span>
            </cite>
        </div>
        <div id="dsq-comment-body-32180" class="dsq-comment-body">
            <div id="dsq-comment-message-32180" class="dsq-comment-message"><p>Hi. Why do you now feel that B is correct? I mean what point in the question got you to this conclusion?</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/operating-systems-set-17/';
var disqus_identifier = '26987 http://www.geeksforgeeks.org/?p=26987';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Operating Systems | Set 17";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.186 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:54:08 -->

<!-- Compression = gzip -->
<!-- super cache -->