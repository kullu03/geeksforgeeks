<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Nth node from the end of a Linked List - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/nth-node-from-the-end-of-a-linked-list/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Nth node from the end of a Linked List - GeeksforGeeks" />
<meta property="og:description" content="Given a Linked List and a number n, write a function that returns the value at the nth node from end of the Linked List. Method 1 (Use length of linked list) 1) Calculate the length of Linked List. Let the length be len. 2) Print the (len &#8211; n + 1)th node from the &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/nth-node-from-the-end-of-a-linked-list/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:tag" content="Linked Lists" />
<meta property="article:section" content="Linked Lists" />
<meta property="article:published_time" content="2009-07-17T22:25:13+00:00" />
<meta property="article:modified_time" content="2011-11-10T22:04:50+00:00" />
<meta property="og:updated_time" content="2011-11-10T22:04:50+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.576 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417111062 210.212.53.139 172.19.11.169';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Nth node from the end of a Linked List</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Given a Linked List and a number n, write a function that returns the value at the nth node from end of the Linked List.<span id="more-824"></span></p>
<p><strong>Method 1 (Use length of linked list)</strong><br />
1) Calculate the length of Linked List.  Let the length be len.<br />
2) Print the (len &#8211; n + 1)th node from the begining of the Linked List.</p>
<pre class="brush: cpp; highlight: [11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]; title: ; notranslate" title="">
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;

/* Link list node */
struct node
{
  int data;
  struct node* next;
};

/* Function to get the nth node from the last of a linked list*/
void printNthFromLast(struct node* head, int n)
{
    int len = 0, i;
    struct node *temp = head;

    // 1) count the number of nodes in Linked List
    while (temp != NULL)
    {
        temp = temp-&gt;next;
        len++;
    }

    // check if value of n is not more than length of the linked list
    if (len &lt; n)
      return;

    temp = head;

    // 2) get the (n-len+1)th node from the begining
    for (i = 1; i &lt; len-n+1; i++)
       temp = temp-&gt;next;

    printf (&quot;%d&quot;, temp-&gt;data);

    return;
}

void push(struct node** head_ref, int new_data)
{
  /* allocate node */
  struct node* new_node =
          (struct node*) malloc(sizeof(struct node));

  /* put in the data  */
  new_node-&gt;data  = new_data;

  /* link the old list off the new node */
  new_node-&gt;next = (*head_ref);

  /* move the head to point to the new node */
  (*head_ref)    = new_node;
}

/* Drier program to test above function*/
int main()
{
  /* Start with the empty list */
  struct node* head = NULL;

  // create linked 35-&gt;15-&gt;4-&gt;20
  push(&amp;head, 20);
  push(&amp;head, 4);
  push(&amp;head, 15);
  push(&amp;head, 35);

  printNthFromLast(head, 5);
  getchar();
  return 0; 
}
</pre>
<p>Following is a recursive C code for the same method.  Thanks to <a href="http://www.geeksforgeeks.org/archives/824/comment-page-1#comment-6420">Anuj Bansal</a> for providing following code.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
void printNthFromLast(struct node* head, int n) 
{
    static int i = 0;
    if(head == NULL)
       return;
    printNthFromLast(head-&gt;next, n);
    if(++i == n)
       printf(&quot;%d&quot;, head-&gt;data);
}
</pre>
<p><strong>Time Complexity:</strong> O(n) where n is the length of linked list.</p>
<p></br><br />
<strong>Method 2 (Use two pointers) </strong><br />
Maintain two pointers &#8211; reference pointer and main pointer.  Initialize both reference and main pointers to head.  First move reference pointer to n nodes from head.  Now move both pointers one by one until reference pointer reaches end. Now main pointer will point to nth node from the end. Return main pointer.</p>
<p><!--more--></p>
<p><strong>Implementation:</strong></p>
<pre class="brush: cpp; highlight: [11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]; title: ; notranslate" title="">
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;

/* Link list node */
struct node
{
  int data;
  struct node* next;
};

/* Function to get the nth node from the last of a linked list*/
void printNthFromLast(struct node *head, int n)
{
  struct node *main_ptr = head;
  struct node *ref_ptr = head;

  int count = 0;
  if(head != NULL)
  {
     while( count &lt; n )
     {
        if(ref_ptr == NULL)
        {
           printf(&quot;%d is greater than the no. of &quot;
                    &quot;nodes in list&quot;, n);
           return;
        }
        ref_ptr = ref_ptr-&gt;next;
        count++;
     } /* End of while*/

     while(ref_ptr != NULL)
     {
        main_ptr = main_ptr-&gt;next;
        ref_ptr  = ref_ptr-&gt;next;
     }
     printf(&quot;Node no. %d from last is %d &quot;, 
              n, main_ptr-&gt;data);
  }
}

void push(struct node** head_ref, int new_data)
{
  /* allocate node */
  struct node* new_node =
          (struct node*) malloc(sizeof(struct node));

  /* put in the data  */
  new_node-&gt;data  = new_data;

  /* link the old list off the new node */
  new_node-&gt;next = (*head_ref);    

  /* move the head to point to the new node */
  (*head_ref)    = new_node;
}

/* Drier program to test above function*/
int main()
{
  /* Start with the empty list */
  struct node* head = NULL;
  push(&amp;head, 20);
  push(&amp;head, 4);
  push(&amp;head, 15); 

  printNthFromLast(head, 3);
  getchar();
}
</pre>
<p><strong>Time Complexity:</strong> O(n) where n is the length of linked list.</p>
<p>Please write comments if you find the above codes/algorithms incorrect, or find other ways to solve the same problem.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/given-linked-list-reverse-alternate-nodes-append-end/" title="Given a linked list, reverse alternate nodes and append at the end">Given a linked list, reverse alternate nodes and append at the end</a></li><li><a href="http://www.geeksforgeeks.org/pairwise-swap-elements-of-a-given-linked-list-by-changing-links/" title="Pairwise swap elements of a given linked list by changing links">Pairwise swap elements of a given linked list by changing links</a></li><li><a href="http://www.geeksforgeeks.org/self-organizing-list-set-1-introduction/" title="Self Organizing List | Set 1 (Introduction)">Self Organizing List | Set 1 (Introduction)</a></li><li><a href="http://www.geeksforgeeks.org/merge-a-linked-list-into-another-linked-list-at-alternate-positions/" title="Merge a linked list into another linked list at alternate positions">Merge a linked list into another linked list at alternate positions</a></li><li><a href="http://www.geeksforgeeks.org/quicksort-on-singly-linked-list/" title="QuickSort on Singly Linked List">QuickSort on Singly Linked List</a></li><li><a href="http://www.geeksforgeeks.org/delete-n-nodes-after-m-nodes-of-a-linked-list/" title="Delete N nodes after M nodes of a linked list">Delete N nodes after M nodes of a linked list</a></li><li><a href="http://www.geeksforgeeks.org/design-a-stack-with-find-middle-operation/" title="Design a stack with operations on middle element">Design a stack with operations on middle element</a></li><li><a href="http://www.geeksforgeeks.org/swap-kth-node-from-beginning-with-kth-node-from-end-in-a-linked-list/" title="Swap Kth node from beginning with Kth node from end in a Linked List">Swap Kth node from beginning with Kth node from end in a Linked List</a></li></ul>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/linked-list/" rel="tag">Linked Lists</a></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fnth-node-from-the-end-of-a-linked-list%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/nth-node-from-the-end-of-a-linked-list/" data-text="Nth node from the end of a Linked List" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/nth-node-from-the-end-of-a-linked-list/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-34466">
        <div id="dsq-comment-header-34466" class="dsq-comment-header">
            <cite id="dsq-cite-34466">
                <span id="dsq-author-user-34466">Arvind</span>
            </cite>
        </div>
        <div id="dsq-comment-body-34466" class="dsq-comment-body">
            <div id="dsq-comment-message-34466" class="dsq-comment-message"><p>seems second method gives nth node from beginning instead of end. am i wrong? tried to run it on ideone.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-34467">
        <div id="dsq-comment-header-34467" class="dsq-comment-header">
            <cite id="dsq-cite-34467">
                <span id="dsq-author-user-34467">VeridisQuo</span>
            </cite>
        </div>
        <div id="dsq-comment-body-34467" class="dsq-comment-body">
            <div id="dsq-comment-message-34467" class="dsq-comment-message"><p>the program is correct<br />
Note: the function push adds an element to the beginning of the linked list.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-34722">
        <div id="dsq-comment-header-34722" class="dsq-comment-header">
            <cite id="dsq-cite-34722">
https://www.facebook.com/?q=#/jambotkar?ref=tn_tnmn                <span id="dsq-author-user-34722">AMIT JAMBOTKAR</span>
            </cite>
        </div>
        <div id="dsq-comment-body-34722" class="dsq-comment-body">
            <div id="dsq-comment-message-34722" class="dsq-comment-message"><p>can you explain it.How it make diff adding elements from beginning</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-34344">
        <div id="dsq-comment-header-34344" class="dsq-comment-header">
            <cite id="dsq-cite-34344">
                <span id="dsq-author-user-34344">Saket Pandey</span>
            </cite>
        </div>
        <div id="dsq-comment-body-34344" class="dsq-comment-body">
            <div id="dsq-comment-message-34344" class="dsq-comment-message"><p>although trivial, but for ppl looking code in java</p>
<p>    public Link getNthNode(int N){<br />
        Link nthNode = null;<br />
        Link firstNode = head;<br />
        int cnt = 1;<br />
        while(firstNode != null){<br />
  if(cnt == N){<br />
    nthNode = head;<br />
  }<br />
  if(cnt &gt; N){<br />
    nthNode = nthNode.getNext();<br />
  }<br />
  firstNode = firstNode.getNext();<br />
  ++cnt;<br />
        }<br />
        return nthNode;<br />
    }</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-29882">
        <div id="dsq-comment-header-29882" class="dsq-comment-header">
            <cite id="dsq-cite-29882">
                <span id="dsq-author-user-29882">neo</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29882" class="dsq-comment-body">
            <div id="dsq-comment-message-29882" class="dsq-comment-message"><p>Recursive solution<br />
typedef struct node n; </p>
<p>n* getn(n* head,int *k)<br />
{<br />
   //Base case<br />
   if(head==NULL)<br />
    return NULL;<br />
    else<br />
    {<br />
       //tail recursion<br />
       n* t = getn(head-&gt;next,k);<br />
       if(t!=NULL)<br />
          return t;<br />
       if(*k==1)<br />
         return head;<br />
       else<br />
         *k=*k-1;<br />
        return NULL;<br />
    }<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-28175">
        <div id="dsq-comment-header-28175" class="dsq-comment-header">
            <cite id="dsq-cite-28175">
                <span id="dsq-author-user-28175">sanjeen fsdjfu</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28175" class="dsq-comment-body">
            <div id="dsq-comment-message-28175" class="dsq-comment-message"><p>I am not sure about the requirement.But on my opinion it must print nth from the last element inserted into the linked list,but this code prints nth from first.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-28174">
        <div id="dsq-comment-header-28174" class="dsq-comment-header">
            <cite id="dsq-cite-28174">
                <span id="dsq-author-user-28174">Guest</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28174" class="dsq-comment-body">
            <div id="dsq-comment-message-28174" class="dsq-comment-message"><p>I am not sure,this code is for printing nth from last,but it is printing nth from first.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-27706">
        <div id="dsq-comment-header-27706" class="dsq-comment-header">
            <cite id="dsq-cite-27706">
                <span id="dsq-author-user-27706">Underground</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27706" class="dsq-comment-body">
            <div id="dsq-comment-message-27706" class="dsq-comment-message"><p>Above program would break if the SLL contains loop !</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-27341">
        <div id="dsq-comment-header-27341" class="dsq-comment-header">
            <cite id="dsq-cite-27341">
                <span id="dsq-author-user-27341">Guest</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27341" class="dsq-comment-body">
            <div id="dsq-comment-message-27341" class="dsq-comment-message"><p>Shouldn&#8217;t count be initialized to 1 in Method 2 ????</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-hemanthreddy odd alt thread-odd thread-alt depth-1" id="dsq-comment-24500">
        <div id="dsq-comment-header-24500" class="dsq-comment-header">
            <cite id="dsq-cite-24500">
                <span id="dsq-author-user-24500">hemanthreddy</span>
            </cite>
        </div>
        <div id="dsq-comment-body-24500" class="dsq-comment-body">
            <div id="dsq-comment-message-24500" class="dsq-comment-message"><p>n value less than zero case is not handled here</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-rahulcynosure even thread-even depth-1" id="dsq-comment-15805">
        <div id="dsq-comment-header-15805" class="dsq-comment-header">
            <cite id="dsq-cite-15805">
                <span id="dsq-author-user-15805">rahulcynosure</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15805" class="dsq-comment-body">
            <div id="dsq-comment-message-15805" class="dsq-comment-message"><p>void printnthfromlast(struct Node * head,int n)<br />
{<br />
        struct Node * temp = head;<br />
        int count=0;<br />
        while(head)<br />
        {<br />
                if(count>=n)<br />
                        temp=temp->next;<br />
                head=head->next;<br />
                count++;<br />
        }<br />
        if(count>=n)<br />
                printf(&#8220;%d&#8221;,temp->data);<br />
}</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-18656">
        <div id="dsq-comment-header-18656" class="dsq-comment-header">
            <cite id="dsq-cite-18656">
                <span id="dsq-author-user-18656">neelabh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-18656" class="dsq-comment-body">
            <div id="dsq-comment-message-18656" class="dsq-comment-message"><p>Explanation of above code: In your coding first you initialize temp=head and count=0.<br />
in while loop you are incrementing head node until meet to last node. in the while loop there is if condition in if condition will increment temp pointer until count&gt;=n means it will maintain n node distance between head and temp pointer. after reaching last node temp will indicate the Nth node from last node.<br />
Very nice solution given by you.  </p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-12502">
        <div id="dsq-comment-header-12502" class="dsq-comment-header">
            <cite id="dsq-cite-12502">
                <span id="dsq-author-user-12502">Kumar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12502" class="dsq-comment-body">
            <div id="dsq-comment-message-12502" class="dsq-comment-message"><p>In Method 2: second while loop it should be<br />
   while(ref_ptr -&gt; next != NULL)</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-12504">
        <div id="dsq-comment-header-12504" class="dsq-comment-header">
            <cite id="dsq-cite-12504">
                <span id="dsq-author-user-12504">Kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12504" class="dsq-comment-body">
            <div id="dsq-comment-message-12504" class="dsq-comment-message"><p>Please take a closer look at the program.  The condition is correct.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-27342">
        <div id="dsq-comment-header-27342" class="dsq-comment-header">
            <cite id="dsq-cite-27342">
                <span id="dsq-author-user-27342">Mohinder</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27342" class="dsq-comment-body">
            <div id="dsq-comment-message-27342" class="dsq-comment-message"><p>Only if count is 1.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt thread-even depth-1" id="dsq-comment-6425">
        <div id="dsq-comment-header-6425" class="dsq-comment-header">
            <cite id="dsq-cite-6425">
                <span id="dsq-author-user-6425">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6425" class="dsq-comment-body">
            <div id="dsq-comment-message-6425" class="dsq-comment-message"><p>@Anuj Bansal &#038; Agniswar:  Thanks for inputs.  We have added method 1 to the original post.  Keep it up!</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-9660">
        <div id="dsq-comment-header-9660" class="dsq-comment-header">
            <cite id="dsq-cite-9660">
                <span id="dsq-author-user-9660">Nishant Kumar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9660" class="dsq-comment-body">
            <div id="dsq-comment-message-9660" class="dsq-comment-message"><p>Time complexity should be O(n^2) for recursive method. Am i right ? </p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-12503">
        <div id="dsq-comment-header-12503" class="dsq-comment-header">
            <cite id="dsq-cite-12503">
                <span id="dsq-author-user-12503">Kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12503" class="dsq-comment-body">
            <div id="dsq-comment-message-12503" class="dsq-comment-message"><p>It is a simple O(n) program.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-6420">
        <div id="dsq-comment-header-6420" class="dsq-comment-header">
            <cite id="dsq-cite-6420">
                <span id="dsq-author-user-6420">Anuj Bansal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6420" class="dsq-comment-body">
            <div id="dsq-comment-message-6420" class="dsq-comment-message"><p>One recursive solution could be as follows:</p>
<pre> <code language="C">
void Nth(NODEPTR node, int n) {
    static int i =0;
    if(node == NULL) 
       return;
    Nth(node-&gt;next, n);
    if(++i == n)
       printf(&quot;%d&quot;, node-&gt;info);
} 
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-kartik odd alt depth-2" id="dsq-comment-6424">
        <div id="dsq-comment-header-6424" class="dsq-comment-header">
            <cite id="dsq-cite-6424">
                <span id="dsq-author-user-6424">kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6424" class="dsq-comment-body">
            <div id="dsq-comment-message-6424" class="dsq-comment-message"><p>@Anuj Bansal: Thanks for sharing the recursive solution.  This solution first recursively traverses the list and then gets the nth node.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-7909">
        <div id="dsq-comment-header-7909" class="dsq-comment-header">
            <cite id="dsq-cite-7909">
                <span id="dsq-author-user-7909">zaid</span>
            </cite>
        </div>
        <div id="dsq-comment-body-7909" class="dsq-comment-body">
            <div id="dsq-comment-message-7909" class="dsq-comment-message"><p>@anuj bansal:what is the time complexity for the above code??????</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-9659">
        <div id="dsq-comment-header-9659" class="dsq-comment-header">
            <cite id="dsq-cite-9659">
                <span id="dsq-author-user-9659">Nishant Kumar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9659" class="dsq-comment-body">
            <div id="dsq-comment-message-9659" class="dsq-comment-message"><p>Time complexity should be O(n^2) for recursive method. Am i right ? </p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-4" id="dsq-comment-10048">
        <div id="dsq-comment-header-10048" class="dsq-comment-header">
            <cite id="dsq-cite-10048">
                <span id="dsq-author-user-10048">Yogesh Batra</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10048" class="dsq-comment-body">
            <div id="dsq-comment-message-10048" class="dsq-comment-message"><p>No, Time complexity is Linear. It traverses the list twice. once forward and then backward. O(2n)~O(n)  </p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-agniswar odd alt thread-even depth-1" id="dsq-comment-5489">
        <div id="dsq-comment-header-5489" class="dsq-comment-header">
            <cite id="dsq-cite-5489">
                <span id="dsq-author-user-5489">Agniswar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5489" class="dsq-comment-body">
            <div id="dsq-comment-message-5489" class="dsq-comment-message"><p>I think we can solve this problem in this way too-<br />
Nth node from the end essentially means (len-N)th node from the front where len is the length of the list.<br />
So,we simply need one pointer to find the (len-N)th node instead of the 2 pointers mentioned in the solution above.Plz tell me if i am wrong !</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-kartik even depth-2" id="dsq-comment-6423">
        <div id="dsq-comment-header-6423" class="dsq-comment-header">
            <cite id="dsq-cite-6423">
                <span id="dsq-author-user-6423">kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6423" class="dsq-comment-body">
            <div id="dsq-comment-message-6423" class="dsq-comment-message"><p>@Agniswar:  Generally, we only have header node of a given Linked list, we don&#8217;t know the length.  We can get the length first by traversing the complete list and then get the (len &#8211; N)th node.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/nth-node-from-the-end-of-a-linked-list/';
var disqus_identifier = '824 http://geeksforgeeks.org/?p=824';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Nth node from the end of a Linked List";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.200 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:27:42 -->

<!-- Compression = gzip -->
<!-- super cache -->