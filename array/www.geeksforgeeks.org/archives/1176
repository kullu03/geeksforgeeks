<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Count set bits in an integer - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/count-set-bits-in-an-integer/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Count set bits in an integer - GeeksforGeeks" />
<meta property="og:description" content="Write an efficient program to count number of 1s in binary representation of an integer. 1. Simple Method Loop through all bits in an integer, check if a bit is set and if it is then increment the set bit count. See below program. Time Complexity: (-)(logn) (Theta of logn) 2. Brian Kernighan&#8217;s Algorithm: Subtraction &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/count-set-bits-in-an-integer/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:tag" content="Bit Magic" />
<meta property="article:tag" content="setBitCount" />
<meta property="article:section" content="Bit Magic" />
<meta property="article:published_time" content="2009-08-19T00:31:22+00:00" />
<meta property="article:modified_time" content="2011-01-09T14:48:29+00:00" />
<meta property="og:updated_time" content="2011-01-09T14:48:29+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.513 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417110933 142.129.53.190';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Count set bits in an integer</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Write an efficient program to count number of 1s in binary representation of an integer.<br />
<span id="more-1176"></span><br />
<strong>1. Simple Method</strong> Loop through all bits in an integer, check if a bit is set and if it is then increment the set bit count.  See below program.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
/* Function to get no of set bits in binary
   representation of passed binary no. */
int countSetBits(unsigned int n)
{
  unsigned int count = 0;
  while(n)
  {
    count += n &amp; 1;
    n &gt;&gt;= 1;
  }
  return count;
}

/* Program to test function countSetBits */
int main()
{
    int i = 9;
    printf(&quot;%d&quot;, countSetBits(i));
    getchar();
    return 0;
}
</pre>
<p><strong>Time Complexity:</strong>  (-)(logn) (Theta of logn)</p>
<p><strong>2. Brian Kernighan&#8217;s Algorithm:</strong><br />
Subtraction of 1 from a number toggles all the bits (from right to left) till the rightmost set bit(including the righmost set bit).  So if we subtract a number by 1 and do bitwise &#038; with itself (n &#038; (n-1)), we unset the righmost set bit.  If we do n &#038; (n-1) in a loop and count the no of times loop executes we get the set bit count.<br />
Beauty of the this solution is number of times it loops is equal to the number of set bits in a given integer.</p>
<pre> 
   1  Initialize count: = 0
   2  <strong>If</strong> integer n is not zero
      (a) Do bitwise &#038; with (n-1) and assign the value back to n
          n: = n&#038;(n-1)
      (b) Increment count by 1
      (c) go to step 2
   3  <strong>Else</strong> return count
 </pre>
<p><strong>Implementation of Brian Kernighan&#8217;s Algorithm:</strong></p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include&lt;stdio.h&gt;

/* Function to get no of set bits in binary
   representation of passed binary no. */
int countSetBits(int n)
{
    unsigned int count = 0;
    while (n)
    {
      n &amp;= (n-1) ;
      count++;
    }
    return count;
}

/* Program to test function countSetBits */
int main()
{
    int i = 9;
    printf(&quot;%d&quot;, countSetBits(i));
    getchar();
    return 0;
}
</pre>
<p><strong>Example for Brian Kernighan&#8217;s Algorithm: </strong></p>
<pre>
   n =  9 (1001)
   count = 0

   Since 9 > 0, subtract by 1 and do bitwise &#038; with (9-1)
   n = 9&#038;8  (1001 &#038; 1000)
   n = 8
   count  = 1

   Since 8 > 0, subtract by 1 and do bitwise &#038; with (8-1)
   n = 8&#038;7  (1000 &#038; 0111)
   n = 0
   count = 2

   Since n = 0, return count which is 2 now.
</pre>
<p><strong>Time Complexity:</strong>  O(logn)</p>
<p><strong>3. Using Lookup table: </strong>  We can count bits in O(1) time using lookup table. Please see<a href="http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetTable"> http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetTable</a> for details.</p>
<p>You can find one use of counting set bits at <a href="http://geeksforgeeks.org/?p=1465">http://geeksforgeeks.org/?p=1465</a><br />
<strong>References:</strong><br />
<a href="http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetNaive">http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetNaive</a></p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/check-binary-representation-number-palindrome/" title="Check if binary representation of a number is palindrome">Check if binary representation of a number is palindrome</a></li><li><a href="http://www.geeksforgeeks.org/swap-two-nibbles-byte/" title="Swap two nibbles in a byte">Swap two nibbles in a byte</a></li><li><a href="http://www.geeksforgeeks.org/how-to-turn-off-a-particular-bit-in-a-number/" title="How to turn off a particular bit in a number?">How to turn off a particular bit in a number?</a></li><li><a href="http://www.geeksforgeeks.org/divisibility-9-using-bitwise-operators/" title="Check if a number is multiple of 9 using bitwise operators">Check if a number is multiple of 9 using bitwise operators</a></li><li><a href="http://www.geeksforgeeks.org/swap-two-numbers-without-using-temporary-variable/" title="How to swap two numbers without using a temporary variable?">How to swap two numbers without using a temporary variable?</a></li><li><a href="http://www.geeksforgeeks.org/divide-and-conquer-set-2-karatsuba-algorithm-for-fast-multiplication/" title="Divide and Conquer | Set 4 (Karatsuba algorithm for fast multiplication)">Divide and Conquer | Set 4 (Karatsuba algorithm for fast multiplication)</a></li><li><a href="http://www.geeksforgeeks.org/find-position-of-the-only-set-bit/" title="Find position of the only set bit">Find position of the only set bit</a></li><li><a href="http://www.geeksforgeeks.org/swap-all-odd-and-even-bits/" title="Swap all odd and even bits">Swap all odd and even bits</a></li></ul>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/bit-magic/" rel="tag">Bit Magic</a>, <a href="http://www.geeksforgeeks.org/tag/setbitcount/" rel="tag">setBitCount</a></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fcount-set-bits-in-an-integer%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/count-set-bits-in-an-integer/" data-text="Count set bits in an integer" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/count-set-bits-in-an-integer/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-30549">
        <div id="dsq-comment-header-30549" class="dsq-comment-header">
            <cite id="dsq-cite-30549">
                <span id="dsq-author-user-30549">Sapan Kumar Das</span>
            </cite>
        </div>
        <div id="dsq-comment-body-30549" class="dsq-comment-body">
            <div id="dsq-comment-message-30549" class="dsq-comment-message"><p>checkout this link &#8230; it gives some good logic and explanation as well</p>
<p><a href="http://www.codextream.com/?p=651" rel="nofollow">http://www.codextream.com/?p=651</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-15216">
        <div id="dsq-comment-header-15216" class="dsq-comment-header">
            <cite id="dsq-cite-15216">
                <span id="dsq-author-user-15216">Ritesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15216" class="dsq-comment-body">
            <div id="dsq-comment-message-15216" class="dsq-comment-message"><p>We can use the gcc buitin method</p>
<p>int __builtin_popcount (unsigned int x)</p>
<p>Returns the number of 1-bits in x.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-14903">
        <div id="dsq-comment-header-14903" class="dsq-comment-header">
            <cite id="dsq-cite-14903">
                <span id="dsq-author-user-14903">G.Prasath</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14903" class="dsq-comment-body">
            <div id="dsq-comment-message-14903" class="dsq-comment-message"><p>#include</p>
<p>   main()<br />
   {<br />
   	int a,count=0,i;<br />
   	printf(&#8220;\nEnter the number! &#8220;);<br />
   	scanf(&#8220;%d&#8221;,&amp;a);</p>
<p>   	for( i=0 ; i&gt;=1,i++ )<br />
   		count+= a&amp;1;</p>
<p>   	if(a==-1)<br />
        printf(&#8220;\n Number is negative! Total 1&#8217;s = %d &#8220;,a);<br />
	else<br />
        printf(&#8220;\n Total 1&#8217;s = %d &#8220;,count);</p>
<p>   }</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-14905">
        <div id="dsq-comment-header-14905" class="dsq-comment-header">
            <cite id="dsq-cite-14905">
                <span id="dsq-author-user-14905">G.Prasath</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14905" class="dsq-comment-body">
            <div id="dsq-comment-message-14905" class="dsq-comment-message"><p>The for loop statement is :</p>
<p>for( i=0 ; i&gt;=1,i++ )</p>
<p>SOrry guys!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-14799">
        <div id="dsq-comment-header-14799" class="dsq-comment-header">
            <cite id="dsq-cite-14799">
                <span id="dsq-author-user-14799">nikhil</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14799" class="dsq-comment-body">
            <div id="dsq-comment-message-14799" class="dsq-comment-message"><p>i thought of this solution..<br />
int setBits(int number){<br />
int count=0;<br />
while(number!=0){<br />
if(number%2!=0)<br />
count++;<br />
number=number/2;<br />
}<br />
return count;<br />
}</p>
<p>comments are most welcome!!</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-10715">
        <div id="dsq-comment-header-10715" class="dsq-comment-header">
            <cite id="dsq-cite-10715">
                <span id="dsq-author-user-10715">seeker7</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10715" class="dsq-comment-body">
            <div id="dsq-comment-message-10715" class="dsq-comment-message"><p>how is the complexity of the first algorithm logn * theta(logn).<br />
Please explain &#8230;</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-9805">
        <div id="dsq-comment-header-9805" class="dsq-comment-header">
            <cite id="dsq-cite-9805">
                <span id="dsq-author-user-9805">Mahesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9805" class="dsq-comment-body">
            <div id="dsq-comment-message-9805" class="dsq-comment-message"><p>#include</p>
<p>int main()<br />
{<br />
int num,cnt=0,i=1;<br />
pf(&#8220;Enter your num value:&#8221;);<br />
sf(&#8220;%d&#8221;,&amp;num);</p>
<p>while(i&lt;=32)<br />
{<br />
if(num&amp;(1&lt;&lt;i))<br />
cnt++;<br />
i++;<br />
}<br />
pf(&quot;total set bits are:%d&quot;,cnt);<br />
retrun 0;<br />
}</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-26733">
        <div id="dsq-comment-header-26733" class="dsq-comment-header">
            <cite id="dsq-cite-26733">
                <span id="dsq-author-user-26733">Satish Yadav</span>
            </cite>
        </div>
        <div id="dsq-comment-body-26733" class="dsq-comment-body">
            <div id="dsq-comment-message-26733" class="dsq-comment-message"><p>What if number is not represented in 32 bit?</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-9456">
        <div id="dsq-comment-header-9456" class="dsq-comment-header">
            <cite id="dsq-cite-9456">
http://facebook.com/sourabh.mehrotra                <span id="dsq-author-user-9456">Sourabh mehrotra</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9456" class="dsq-comment-body">
            <div id="dsq-comment-message-9456" class="dsq-comment-message"><p>#include<br />
#include </p>
<p>int main(int argc,char **str)<br />
{<br />
    int num=17,i,sum=0,aux,b;<br />
    b=countbits(num);<br />
    b&#8211;;<br />
    sum=b*pow(2,b-1);<br />
    aux=1&lt;&lt;b;<br />
    printf(&quot;%d\n&quot;,aux);<br />
    while(aux0)<br />
    {<br />
        if(n&amp;0x1)<br />
            cnt++;<br />
        n=n&gt;&gt;1;<br />
    }<br />
    return cnt;<br />
}</p>
<p>int countbits(int n)<br />
{<br />
    int i=1,x=1;<br />
    while(x&lt;n)<br />
    {<br />
        i++;<br />
        x=x&lt;&lt;1;<br />
    }<br />
    if(n==1)<br />
        return i;<br />
    return i-1;<br />
}</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-9804">
        <div id="dsq-comment-header-9804" class="dsq-comment-header">
            <cite id="dsq-cite-9804">
                <span id="dsq-author-user-9804">Mahesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9804" class="dsq-comment-body">
            <div id="dsq-comment-message-9804" class="dsq-comment-message"><p>#include</p>
<p>int main()<br />
{<br />
int num,cnt=0,i=1;<br />
pf(&#8220;#nEnter your num value:&#8221;);<br />
sf(&#8220;%d&#8221;,&amp;num);</p>
<p>while(i&lt;=32)<br />
{<br />
if(num&amp;(i&lt;&lt;i))<br />
cnt++;<br />
i++;<br />
}<br />
pf(&quot;#ntotal set bits are:%d&quot;,cnt);<br />
retrun 0;<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-4627">
        <div id="dsq-comment-header-4627" class="dsq-comment-header">
            <cite id="dsq-cite-4627">
                <span id="dsq-author-user-4627">Amit Gupta</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4627" class="dsq-comment-body">
            <div id="dsq-comment-message-4627" class="dsq-comment-message"><p>Hi!</p>
<p>I think the complexity of solution 1 is O(logN*logN) and the second solution is O(bits_set*logN).</p>
<p>In solution 1, each bitwise AND costs logN, and this is to be done logN times.</p>
<p>In solution 2, we do same bitwise AND, only this time, it&#8217;s required to be done only _no_of_bits_set times.</p>
<p>Do people agree on this?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-3807">
        <div id="dsq-comment-header-3807" class="dsq-comment-header">
            <cite id="dsq-cite-3807">
                <span id="dsq-author-user-3807">raghu</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3807" class="dsq-comment-body">
            <div id="dsq-comment-message-3807" class="dsq-comment-message"><p>@Sandeep,Kartik&#8230;GEEKSFORGEEKS..&amp; all geeks ..can any1 explain me this O(1) methos of counting no of 1s or set bits in a number using look up table..</p>
<p><a href="http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetTable" rel="nofollow">http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetTable</a> for details</p>
<p>Please help &amp; reply ASAP.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-3828">
        <div id="dsq-comment-header-3828" class="dsq-comment-header">
            <cite id="dsq-cite-3828">
                <span id="dsq-author-user-3828">abc</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3828" class="dsq-comment-body">
            <div id="dsq-comment-message-3828" class="dsq-comment-message"><p>Given is a 32 bit number&#8230;that means a 4 byte integer.<br />
p[0], p[1], p[2], p[3] are the 4 bytes of the integer<br />
so for example:</p>
<pre> <code language="C">
v = 10010100100010001011101100111111
the 4 bytes are:
p[0] = 00111111 = 63
p[1] = 10111011 = 187
p[2] = 10001000 = 136
p[3] = 10010100 = 148

so number of bits set in v = number of bits set in p[0] + 
							 number of bits set in p[1] +
							 number of bits set in p[2] +
							 number of bits set in p[3]

If BitSetsTable is an array where BitSetsTable[i] = number of set bits in i, then

number of bits set in v = BitSetsTable[p[0]] + 
						  BitSetsTable[p[1]] +
						  BitSetsTable[p[2]] +
						  BitSetsTable[p[3]]

Now how to fill up the BitSetsTable:
remember i/2 is nothing but right shift by 1. So for any i, number of bits set = 
	(right most bit, 0 or 1) + number of bits set in i/2 (that is nothing but the rest of the number without the right most bit)
So you have a pre-populated table which you can use

</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-6634">
        <div id="dsq-comment-header-6634" class="dsq-comment-header">
            <cite id="dsq-cite-6634">
                <span id="dsq-author-user-6634">vpshastry</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6634" class="dsq-comment-body">
            <div id="dsq-comment-message-6634" class="dsq-comment-message"><p>can some one explain this initialization??</p>
<pre> <code language="C">
static const unsigned char BitsSetTable256[256] = 
{
#   define B2(n) n,     n+1,     n+1,     n+2
#   define B4(n) B2(n), B2(n+1), B2(n+1), B2(n+2)
#   define B6(n) B4(n), B4(n+1), B4(n+1), B4(n+2)
    B6(0), B6(1), B6(1), B6(2)
};
</code> </pre>
<p>from<br />
<a href="http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetTable" rel="nofollow">http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetTable</a></p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-venki even depth-4" id="dsq-comment-6675">
        <div id="dsq-comment-header-6675" class="dsq-comment-header">
            <cite id="dsq-cite-6675">
http://geeksforgeeks.org/?page_id=2                <span id="dsq-author-user-6675">Venki</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6675" class="dsq-comment-body">
            <div id="dsq-comment-message-6675" class="dsq-comment-message"><p>Read the following post <a href="http://www.geeksforgeeks.org/archives/11263" rel="nofollow">http://www.geeksforgeeks.org/archives/11263</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-3679">
        <div id="dsq-comment-header-3679" class="dsq-comment-header">
            <cite id="dsq-cite-3679">
                <span id="dsq-author-user-3679">abc</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3679" class="dsq-comment-body">
            <div id="dsq-comment-message-3679" class="dsq-comment-message"><p>This can be done in O(1):</p>
<pre> <code language="C">
for 32 bit numbers:
int countSetBits(unsigned int u)
{
    unsigned int uCount = 0;
    uCount = u - ((u &gt;&gt; 1) &amp;&amp; 033333333333) - ((u &gt;&gt; 2) &amp;&amp; 011111111111);
    uCount = ((uCount + (uCount &gt;&gt; 3)) &amp;&amp; 030707070707)%63;
    return uCount;
}

for 64 bit numbers:
int countSetBits(unsigned long long u)
{
    unsigned long long uCount = 0;
    uCount = u - ((u &gt;&gt; 1) &amp;&amp; 0x7777777777777777) - ((u &gt;&gt; 2) &amp;&amp; 0x3333333333333333) - ((u &gt;&gt; 3) &amp;&amp; 01111111111111111);
    uCount = ((uCount + (uCount &gt;&gt; 4)) &amp;&amp; 0x0F0F0F0F0F0F0F0F)%255;
    return uCount;
}
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-28951">
        <div id="dsq-comment-header-28951" class="dsq-comment-header">
            <cite id="dsq-cite-28951">
                <span id="dsq-author-user-28951">Rishabh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28951" class="dsq-comment-body">
            <div id="dsq-comment-message-28951" class="dsq-comment-message"><p>can anyone explain  this method ? Why dont we often &#8220;cite&#8221; this method as time complexity is O(1). ?</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-venki odd alt thread-even depth-1" id="dsq-comment-2204">
        <div id="dsq-comment-header-2204" class="dsq-comment-header">
            <cite id="dsq-cite-2204">
http://wemeanourthoughts.blogspot.com/                <span id="dsq-author-user-2204">Venki</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2204" class="dsq-comment-body">
            <div id="dsq-comment-message-2204" class="dsq-comment-message"><p>Another method is documented in the following link</p>
<p><a href="http://math-puzzles-computing.blogspot.com/2010/09/counting-bits-in-integer.html" rel="nofollow">http://math-puzzles-computing.blogspot.com/2010/09/counting-bits-in-integer.html</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-sreemathi-kumar even thread-odd thread-alt depth-1" id="dsq-comment-2133">
        <div id="dsq-comment-header-2133" class="dsq-comment-header">
            <cite id="dsq-cite-2133">
                <span id="dsq-author-user-2133">sreemathi kumar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2133" class="dsq-comment-body">
            <div id="dsq-comment-message-2133" class="dsq-comment-message"><p>This will also work out.</p>
<pre> <code language="C">int countbits(int n)
{
int count=0;
int m=1;
while(n)
{
 if(n &amp; m)
 {
  count++;
  n=n^m;   //unset the bit set(from rightmost)
 }
 m&lt;&lt;=1;
}
return count;
}</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-1891">
        <div id="dsq-comment-header-1891" class="dsq-comment-header">
            <cite id="dsq-cite-1891">
                <span id="dsq-author-user-1891">hariom</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1891" class="dsq-comment-body">
            <div id="dsq-comment-message-1891" class="dsq-comment-message"><p>How come the time complexity of Brian Kernighan’s Algorithm is O(logn).<br />
Shouldn&#8217;t it be O(no_of_set_bits) ??</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-venki even depth-2" id="dsq-comment-1895">
        <div id="dsq-comment-header-1895" class="dsq-comment-header">
            <cite id="dsq-cite-1895">
                <span id="dsq-author-user-1895">Venki</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1895" class="dsq-comment-body">
            <div id="dsq-comment-message-1895" class="dsq-comment-message"><p>@hariom, It is worst case complexity. Since atmost the number can have log(N) bits set to 1.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-1921">
        <div id="dsq-comment-header-1921" class="dsq-comment-header">
            <cite id="dsq-cite-1921">
                <span id="dsq-author-user-1921">hariom</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1921" class="dsq-comment-body">
            <div id="dsq-comment-message-1921" class="dsq-comment-message"><p>@venki<br />
I suppose ,I am unable to understand your point here.<br />
The max no of set bits are 32 or 64(i.e. N) depending on the no of bits in the number..<br />
How can it be log(N)??</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-venki even depth-4" id="dsq-comment-1925">
        <div id="dsq-comment-header-1925" class="dsq-comment-header">
            <cite id="dsq-cite-1925">
                <span id="dsq-author-user-1925">Venki</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1925" class="dsq-comment-body">
            <div id="dsq-comment-message-1925" class="dsq-comment-message"><p>@hariom, As you mentioned the complexity is O(no_of_set_bits). The factor no_of_set_bits is proportional to log(number), hence the complexity. This is also worst case complexity, the loop will iterate atmost [log(number) + 1] times.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-vkjk89 odd alt depth-5" id="dsq-comment-6614">
        <div id="dsq-comment-header-6614" class="dsq-comment-header">
            <cite id="dsq-cite-6614">
                <span id="dsq-author-user-6614">vkjk89</span>
            </cite>
        </div>
        <div id="dsq-comment-body-6614" class="dsq-comment-body">
            <div id="dsq-comment-message-6614" class="dsq-comment-message"><p>@Hariom:-<br />
Just to explain you by example.<br />
Say no of bits = 4<br />
hence Max N = 15 ( 1111)<br />
so loop will execute 4 times<br />
and logN=log15=4(approx).<br />
and worst case complexity=logN</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-rka143 even thread-odd thread-alt depth-1" id="dsq-comment-1850">
        <div id="dsq-comment-header-1850" class="dsq-comment-header">
            <cite id="dsq-cite-1850">
                <span id="dsq-author-user-1850">rka143</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1850" class="dsq-comment-body">
            <div id="dsq-comment-message-1850" class="dsq-comment-message"><p>The solution one go into infinite loop when value of n is negative.<br />
The correct solution should be like this:</p>
<pre> <code language="C">
int countSetBits(int n)  
{ 
   int mask=1;
   unsigned int count=0;
   while (mask)
   {
       if (n&amp;mask)
           count++;
       mask&lt;&lt;=1;
   }
   return count;
}
</code> </pre>
<p>please let me know if there is any problem in this solution</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-venki odd alt depth-2" id="dsq-comment-1855">
        <div id="dsq-comment-header-1855" class="dsq-comment-header">
            <cite id="dsq-cite-1855">
                <span id="dsq-author-user-1855">Venki</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1855" class="dsq-comment-body">
            <div id="dsq-comment-message-1855" class="dsq-comment-message"><p>Good catch RKA. The following change will correct the issue,</p>
<pre> <code language="C">
/* Function to get no of set bits in binary
   representation of passed binary no. */
int countSetBits(unsigned int n)
{
  unsigned int count = 0;
  while(n)
  {
    count += n &amp; 1;
    n &gt;&gt;= 1;
  }
  return count;
}

/* Program to test function countSetBits */
int main()
{
    int i = -9;
    printf(&quot;%d&quot;, countSetBits(i));
    getchar();
    return 0;
}
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor even depth-3" id="dsq-comment-1999">
        <div id="dsq-comment-header-1999" class="dsq-comment-header">
            <cite id="dsq-cite-1999">
                <span id="dsq-author-user-1999">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-1999" class="dsq-comment-body">
            <div id="dsq-comment-message-1999" class="dsq-comment-message"><p>@rka143 &#038; @Venki</p>
<p>Thanks for the correction guys.  We have updated the post.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-3" id="dsq-comment-20947">
        <div id="dsq-comment-header-20947" class="dsq-comment-header">
            <cite id="dsq-cite-20947">
                <span id="dsq-author-user-20947">David</span>
            </cite>
        </div>
        <div id="dsq-comment-body-20947" class="dsq-comment-body">
            <div id="dsq-comment-message-20947" class="dsq-comment-message"><p>No changes are necessary, I think. &#8220;Unsigned int&#8221; argument prevents it from ever being negative. But way to GEEK out on the original algorithms. That is the only way to catch some crazy corner cases.</p>
<pre> <code language="C">
UNSIGNED int n
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-975">
        <div id="dsq-comment-header-975" class="dsq-comment-header">
            <cite id="dsq-cite-975">
                <span id="dsq-author-user-975">Sharad Chandra</span>
            </cite>
        </div>
        <div id="dsq-comment-body-975" class="dsq-comment-body">
            <div id="dsq-comment-message-975" class="dsq-comment-message"><p>Check this:<br />
<a href="http://gurmeetsingh.wordpress.com/2008/08/05/fast-bit-counting-routines/" rel="nofollow">http://gurmeetsingh.wordpress.com/2008/08/05/fast-bit-counting-routines/</a><br />
<a href="http://stackoverflow.com/questions/109023/best-algorithm-to-count-the-number-of-set-bits-in-a-32-bit-integer" rel="nofollow">http://stackoverflow.com/questions/109023/best-algorithm-to-count-the-number-of-set-bits-in-a-32-bit-integer</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/count-set-bits-in-an-integer/';
var disqus_identifier = '1176 http://geeksforgeeks.org/?p=1176';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Count set bits in an integer";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.202 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:25:33 -->

<!-- Compression = gzip -->
<!-- super cache -->