<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Dynamic Programming | Set 18 (Partition problem) - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/dynamic-programming-set-18-partition-problem/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Dynamic Programming | Set 18 (Partition problem) - GeeksforGeeks" />
<meta property="og:description" content="Partition problem is to determine whether a given set can be partitioned into two subsets such that the sum of elements in both subsets is same. Examples arr[] = {1, 5, 11, 5} Output: true The array can be partitioned as {1, 5, 5} and {11} arr[] = {1, 5, 3} Output: false The array &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/dynamic-programming-set-18-partition-problem/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:tag" content="Dynamic Programming" />
<meta property="article:section" content="Arrays" />
<meta property="article:published_time" content="2012-07-04T17:42:33+00:00" />
<meta property="article:modified_time" content="2012-08-06T13:50:09+00:00" />
<meta property="og:updated_time" content="2012-08-06T13:50:09+00:00" />
<meta property="og:image" content="http://d2o58evtke57tz.cloudfront.net/wp-content/uploads/Partition_Prob_DP_table_example2.jpg" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.490 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417111057 49.204.220.233';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Dynamic Programming | Set 18 (Partition problem)</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Partition problem is to determine whether a given set can be partitioned into two subsets such that the sum of elements in both subsets is same. <span id="more-21579"></span></p>
<p>Examples</p>
<pre>
arr[] = {1, 5, 11, 5}
Output: true 
The array can be partitioned as {1, 5, 5} and {11}

arr[] = {1, 5, 3}
Output: false 
The array cannot be partitioned into equal sum sets.
</pre>
<p>Following are the two main steps to solve this problem:<br />
1) Calculate sum of the array.  If sum is odd, there can not be two subsets with equal sum, so return false.<br />
2) If sum of array elements is even, calculate sum/2 and find a subset of array with sum equal to sum/2. </p>
<p>The first step is simple. The second step is crucial, it can be solved either using recursion or Dynamic Programming.</p>
<p><strong>Recursive Solution</strong><br />
Following is the recursive property of the second step mentioned above.</p>
<pre>
Let isSubsetSum(arr, n, sum/2) be the function that returns true if 
there is a subset of arr[0..n-1] with sum equal to sum/2

The isSubsetSum problem can be divided into two subproblems
 a) isSubsetSum() without considering last element 
    (reducing n to n-1)
 b) isSubsetSum considering the last element 
    (reducing sum/2 by arr[n-1] and n to n-1)
If any of the above the above subproblems return true, then return true. 
isSubsetSum (arr, n, sum/2) = isSubsetSum (arr, n-1, sum/2) ||
                              isSubsetSum (arr, n-1, sum/2 - arr[n-1])
</pre>
<pre class="brush: cpp; highlight: [4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]; title: ; notranslate" title="">
// A recursive solution for partition problem
#include &lt;stdio.h&gt;

// A utility function that returns true if there is a subset of arr[]
// with sun equal to given sum
bool isSubsetSum (int arr[], int n, int sum)
{
   // Base Cases
   if (sum == 0)
     return true;
   if (n == 0 &amp;&amp; sum != 0)
     return false;

   // If last element is greater than sum, then ignore it
   if (arr[n-1] &gt; sum)
     return isSubsetSum (arr, n-1, sum);

   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element
   */
   return isSubsetSum (arr, n-1, sum) || isSubsetSum (arr, n-1, sum-arr[n-1]);
}

// Returns true if arr[] can be partitioned in two subsets of
// equal sum, otherwise false
bool findPartiion (int arr[], int n)
{
    // Calculate sum of the elements in array
    int sum = 0;
    for (int i = 0; i &lt; n; i++)
       sum += arr[i];

    // If sum is odd, there cannot be two subsets with equal sum
    if (sum%2 != 0)
       return false;

    // Find if there is subset with sum equal to half of total sum
    return isSubsetSum (arr, n, sum/2);
}

// Driver program to test above function
int main()
{
  int arr[] = {3, 1, 5, 9, 12};
  int n = sizeof(arr)/sizeof(arr[0]);
  if (findPartiion(arr, n) == true)
     printf(&quot;Can be divided into two subsets of equal sum&quot;);
  else
     printf(&quot;Can not be divided into two subsets of equal sum&quot;);
  getchar();
  return 0;
}
</pre>
<p>Output:
<pre>Can be divided into two subsets of equal sum</pre>
<p>Time Complexity: O(2^n) In worst case, this solution tries two possibilities (whether to include or exclude) for every element.</p>
<p></br><br />
<strong>Dynamic Programming Solution</strong><br />
The problem can be solved using dynamic programming when the sum of the elements is not too big.  We can create a 2D array part[][] of size (sum/2)*(n+1). And we can construct the solution in bottom up manner such that every filled entry has following property</p>
<pre>
part[i][j] = true if a subset of {arr[0], arr[1], ..arr[j-1]} has sum 
             equal to i, otherwise false
</pre>
<pre class="brush: cpp; highlight: [4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]; title: ; notranslate" title="">
// A Dynamic Programming solution to partition problem
#include &lt;stdio.h&gt;

// Returns true if arr[] can be partitioned in two subsets of
// equal sum, otherwise false
bool findPartiion (int arr[], int n)
{
    int sum = 0;
    int i, j;
  
    // Caculcate sun of all elements
    for (i = 0; i &lt; n; i++)
      sum += arr[i];
    
    if (sum%2 != 0)  
       return false;
  
    bool part[sum/2+1][n+1];
    
    // initialize top row as true
    for (i = 0; i &lt;= n; i++)
      part[0][i] = true;
      
    // initialize leftmost column, except part[0][0], as 0
    for (i = 1; i &lt;= sum/2; i++)
      part[i][0] = false;     
     
     // Fill the partition table in botton up manner 
     for (i = 1; i &lt;= sum/2; i++)  
     {
       for (j = 1; j &lt;= n; j++)  
       {
         part[i][j] = part[i][j-1];
         if (i &gt;= arr[j-1])
           part[i][j] = part[i][j] || part[i - arr[j-1]][j-1];
       }        
     }    
     
    /* // uncomment this part to print table 
     for (i = 0; i &lt;= sum/2; i++)  
     {
       for (j = 0; j &lt;= n; j++)  
          printf (&quot;%4d&quot;, part[i][j]);
       printf(&quot;\n&quot;);
     } */ 
     
     return part[sum/2][n];
}     

// Driver program to test above funtion
int main()
{
  int arr[] = {3, 1, 1, 2, 2, 1};
  int n = sizeof(arr)/sizeof(arr[0]);
  if (findPartiion(arr, n) == true)
     printf(&quot;Can be divided into two subsets of equal sum&quot;);
  else
     printf(&quot;Can not be divided into two subsets of equal sum&quot;);
  getchar();
  return 0;
}
</pre>
<p>Output:
<pre>Can be divided into two subsets of equal sum</pre>
<p>Following diagram shows the values in partition table. The diagram is taken form the <a href="http://en.wikipedia.org/wiki/Partition_problem">wiki page of partition problem</a>.<br />
<a href="http://d2o58evtke57tz.cloudfront.net/wp-content/uploads/Partition_Prob_DP_table_example2.jpg"><img src="http://d2o58evtke57tz.cloudfront.net/wp-content/uploads/Partition_Prob_DP_table_example2.jpg" alt="" width="500" height="350" class="aligncenter size-full wp-image-21596" /></a></p>
<p>Time Complexity: O(sum*n)<br />
Auxiliary Space: O(sum*n)<br />
Please note that this solution will not be feasible for arrays with big sum.</p>
<p><strong>References:</strong><br />
<a href="http://en.wikipedia.org/wiki/Partition_problem">http://en.wikipedia.org/wiki/Partition_problem</a></p>
<p></br><br />
Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array-set-2-expected-linear-time/" title="K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)">K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)</a></li><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array/" title="K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1">K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1</a></li><li><a href="http://www.geeksforgeeks.org/time-complexity-insertion-sort-inversions/" title="Time complexity of insertion sort when there are O(n) inversions?">Time complexity of insertion sort when there are O(n) inversions?</a></li><li><a href="http://www.geeksforgeeks.org/check-two-given-sets-disjoint/" title="How to check if two given sets are disjoint?">How to check if two given sets are disjoint?</a></li><li><a href="http://www.geeksforgeeks.org/minimum-number-platforms-required-railwaybus-station/" title="Minimum Number of Platforms Required for a Railway/Bus Station">Minimum Number of Platforms Required for a Railway/Bus Station</a></li><li><a href="http://www.geeksforgeeks.org/given-two-sorted-arrays-number-x-find-pair-whose-sum-closest-x/" title="Find the closest pair from two sorted arrays">Find the closest pair from two sorted arrays</a></li><li><a href="http://www.geeksforgeeks.org/print-elements-sorted-order-row-column-wise-sorted-matrix/" title="Print all elements in sorted order from row and column wise sorted matrix">Print all elements in sorted order from row and column wise sorted matrix</a></li><li><a href="http://www.geeksforgeeks.org/length-largest-subarray-contiguous-elements-set-1/" title="Length of the largest subarray with contiguous elements | Set 1">Length of the largest subarray with contiguous elements | Set 1</a></li></ul>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/dynamic-programming/" rel="tag">Dynamic Programming</a></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fdynamic-programming-set-18-partition-problem%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/dynamic-programming-set-18-partition-problem/" data-text="Dynamic Programming | Set 18 (Partition problem)" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/dynamic-programming-set-18-partition-problem/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-34704">
        <div id="dsq-comment-header-34704" class="dsq-comment-header">
            <cite id="dsq-cite-34704">
                <span id="dsq-author-user-34704">Rohit Sharma</span>
            </cite>
        </div>
        <div id="dsq-comment-body-34704" class="dsq-comment-body">
            <div id="dsq-comment-message-34704" class="dsq-comment-message"><p>here is the code with time complexity-0(nlog(n))</p>
<p>==================================</p>
<p>algorithm&#8212;</p>
<p>1-find sum of array.</p>
<p>   if odd return false;</p>
<p>sum=sum/2;</p>
<p>2.sort array by using any method(quick_sort).</p>
<p>3.apply knapsack or greedy algorithm similar to find sub array with given sum.</p>
<p>here is code !!</p>
<p>==============</p>
<p>#include<br />
#include</p>
<p>bool sub_array_sum(int [],int);</p>
<p>int main()</p>
<p>{</p>
<p>	int a[100],n,i,sum;</p>
<p>	printf(&#8220;nEnter the value of n :&#8221;);</p>
<p>	scanf(&#8220;%d&#8221;,&amp;n);</p>
<p>	printf(&#8220;nEnter the elements :n&#8221;);</p>
<p>	for(i=0;i&lt;n;i++)</p>
<p>	 scanf(&quot;%d&quot;,&amp;a[i]);</p>
<p>	if(sub_array_sum(a,n) == true)</p>
<p>	 printf(&quot;nPartition possible !!&quot;);</p>
<p>	else </p>
<p>	 printf(&quot;nNo partition is possible !!&quot;);</p>
<p>	return 0;</p>
<p>}</p>
<p>int compare(const void *a,int const void *b)<br />
{<br />
return (*(int *)a &#8211; *(int *)b);<br />
}</p>
<p>int findSubArray(int a[], int n, int sum)<br />
{<br />
    /* Initialize curr_sum as value of first element<br />
       and starting point as 0 */<br />
    int curr_sum = a[0], start = 0, i;</p>
<p>    /* Add elements one by one to curr_sum and if the curr_sum exceeds the<br />
       sum, then remove starting element */<br />
    for (i = 1; i  sum &amp;&amp; start &lt; i-1)<br />
        {<br />
            curr_sum = curr_sum &#8211; a[start];<br />
            start++;<br />
        }</p>
<p>        // If curr_sum becomes equal to sum, then return true<br />
        if (curr_sum == sum)<br />
        {<br />
            printf (&quot;Sum found between indexes %d and %d&quot;, start, i-1);<br />
            return 1;<br />
        }</p>
<p>        // Add this element to curr_sum<br />
        if (i &lt; n)<br />
          curr_sum = curr_sum + a[i];<br />
    }</p>
<p>    // If we reach here, then no subarray<br />
    printf(&quot;No subarray found&quot;);<br />
    return 0;<br />
}</p>
<p>bool sub_array_sum(int a[],int n)<br />
{</p>
<p>	int i,sum=0;</p>
<p>	for(i=0;i&lt;n;i++)</p>
<p>	 sum += a[i];</p>
<p>	if(sum % 2 == 1)</p>
<p>	 return false;</p>
<p>    qsort(a,n,sizeof(int),compare);</p>
<p>    printf(&quot;nThe array after sorting !!&quot;);</p>
<p>	for(i=0;i&lt;n;i++)</p>
<p>	 printf(&quot;%d &quot;,a[i]);</p>
<p>	return findSubArray(a,n,sum/2);<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-31572">
        <div id="dsq-comment-header-31572" class="dsq-comment-header">
            <cite id="dsq-cite-31572">
                <span id="dsq-author-user-31572">prashant</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31572" class="dsq-comment-body">
            <div id="dsq-comment-message-31572" class="dsq-comment-message"><p>here is the naive recursive approach which returns the min differnece detween two partiotins</p>
<p>/*</p>
<p>int min(int a,int b)</p>
<p>{</p>
<p>	return a&gt;b?b:a;</p>
<p>}</p>
<p>int fun(int arr[],int low,int high,int s1,int s2)</p>
<p>{</p>
<p>	if(low&gt;high)</p>
<p>	   return s1&gt;s2?(s1-s2):(s2-s1);</p>
<p>	return min(fun(arr,low+1,high,s1+arr[low],s2),fun(arr,low+1,high,s1,s2+arr[low]));</p>
<p>}</p>
<p>int main()</p>
<p>{</p>
<p>	int arr[]={3, 1, 5, 9, 12};</p>
<p>	int n=sizeof(arr)/sizeof(arr[0]);</p>
<p>	cout&lt;&lt;fun(arr,0,n-1,0,0)&lt;&lt;&quot; is the min parttiotion,n&quot;;</p>
<p>	return 0;</p>
<p>}</p>
<p>*/</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-28765">
        <div id="dsq-comment-header-28765" class="dsq-comment-header">
            <cite id="dsq-cite-28765">
                <span id="dsq-author-user-28765">Aja Huang</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28765" class="dsq-comment-body">
            <div id="dsq-comment-message-28765" class="dsq-comment-message"><p>There is a much faster and simpler solution using STL bitset.<br />
<a href="https://github.com/swem/UVa-Online-Judge/blob/master/10664.cpp" rel="nofollow">https://github.com/swem/UVa-Online-Judge/blob/master/10664.cpp</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-25587">
        <div id="dsq-comment-header-25587" class="dsq-comment-header">
            <cite id="dsq-cite-25587">
                <span id="dsq-author-user-25587">sumit dey</span>
            </cite>
        </div>
        <div id="dsq-comment-body-25587" class="dsq-comment-body">
            <div id="dsq-comment-message-25587" class="dsq-comment-message"><p>Here is the java version of the same problem, it will also print the solution of the subset which has leads to the solution. No need of sorted input and it works for negative solution. The printed solution will print the one of the subset, other subset will be the excluded element.</p>
<pre> <code language="Java">
/**
 * 
 */


import java.util.LinkedHashMap;
import java.util.Map;

public class PartitionSumSubsetProblem {

	public static class CachedDataAttr {
		int sum;
		int indexOfArray;
		int bfrSumDiff;

		CachedDataAttr(int pSum, int pIndexOfArry, int pAfterSumDiff) {
			this.sum = pSum;
			this.indexOfArray = pIndexOfArry;
			this.bfrSumDiff = pAfterSumDiff;
		}

		@Override
		public boolean equals(Object o) {

			if (o instanceof CachedDataAttr) {
				CachedDataAttr arg = (CachedDataAttr) o;
				this.sum = arg.sum;
				this.indexOfArray = arg.indexOfArray;
			}
			return false;
		}

		public String toString() {
			return &quot;sum =&quot; + this.sum + &quot; :: index = &quot; + (this.indexOfArray + 1)
					+ &quot; :: bfrSumDiff= &quot; + this.bfrSumDiff + &quot;\t&quot;;
		}
	}


	/**
	 * @param args
	 */
	public static void main(String[] args) {

		int arr[] = { 5,5,4,3,3};//{ 11, 1, 5, 11, 5, -11, 0, 2 }

		System.out
				.println(sumOfSubsetIsPossible(arr) ? &quot;Solution is possible&quot; : &quot;No subset exists&quot;);

	}

	private static boolean sumOfSubsetIsPossible(int[] arr) {

		if (arr == null || arr.length == 0)
			return false;
		int size = arr.length;
		int sum = 0;
		for (int i = 0; i &lt; size; i++)
			sum = sum + arr[i];
		if (sum % 2 == 1)
			return false;
		Map&lt;PartitionSumSubsetProblem.CachedDataAttr, Boolean&gt; CachedData = new LinkedHashMap&lt;PartitionSumSubsetProblem.CachedDataAttr, Boolean&gt;();

		boolean result = mainLogisOfSumOfSubsetIsPossible(arr, sum / 2, size - 1, CachedData);

		System.out.println(CachedData);
		printSolution(CachedData, arr);
		return result;

	}

	private static void printSolution(Map&lt;CachedDataAttr, Boolean&gt; cachedData, int[] arr) {

		int sum = 0;

		for (Map.Entry&lt;CachedDataAttr, Boolean&gt; cachedMap : cachedData.entrySet()) {

			if (sum == cachedMap.getKey().sum &amp;&amp; cachedMap.getValue()) {
				// find the next sum value
				if (sum + arr[cachedMap.getKey().indexOfArray] == cachedMap.getKey().bfrSumDiff) {
					sum = sum + arr[cachedMap.getKey().indexOfArray];
					System.out.print(arr[cachedMap.getKey().indexOfArray] + &quot;,&quot;);
				}
			}
		}

		System.out.println(&quot;\b&quot;);

	}

	/**
	 *  This methods contain the main logic for the problem
	 * @param arr
	 * @param sum
	 * @param size
	 * @param cachedData
	 * @return
	 */
	private static boolean mainLogisOfSumOfSubsetIsPossible(int[] arr, int sum, int size,
			Map&lt;CachedDataAttr, Boolean&gt; cachedData) {

		// base cases , when sum==0, we found the solution
		if (sum == 0)
			return true;
		// base case if size &lt;0 &amp;&amp; sum!=0, we have not include few elements that
		if (size &lt; 0 &amp;&amp; sum != 0)
			return false;
		// base case, if the solution is already computed, return the solution
		PartitionSumSubsetProblem.CachedDataAttr exData = new PartitionSumSubsetProblem.CachedDataAttr(
				sum, size, sum);// excluded
		PartitionSumSubsetProblem.CachedDataAttr inData = new PartitionSumSubsetProblem.CachedDataAttr(
				sum - arr[size], size, sum);// include
		if (cachedData.containsKey(exData))
			return cachedData.get(exData);
		if (cachedData.containsKey(inData))
			return cachedData.get(inData);

		boolean includeSolution = mainLogisOfSumOfSubsetIsPossible(arr, sum - arr[size], size - 1,
				cachedData);
		boolean excludeSolution = includeSolution
				|| mainLogisOfSumOfSubsetIsPossible(arr, sum, size - 1, cachedData);
		cachedData.put(inData, includeSolution);
		if (!includeSolution)
			cachedData.put(exData, excludeSolution);
		return excludeSolution;
	}

}

</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-21290">
        <div id="dsq-comment-header-21290" class="dsq-comment-header">
            <cite id="dsq-cite-21290">
                <span id="dsq-author-user-21290">Aman Jain</span>
            </cite>
        </div>
        <div id="dsq-comment-body-21290" class="dsq-comment-body">
            <div id="dsq-comment-message-21290" class="dsq-comment-message"><p>if array contain -ve elements too, then this code can work for it too..<br />
sum can be any value.. </p>
<p>#include&lt;iostream&gt;<br />
using namespace std;<br />
int func(int *arr,int n,int sum)<br />
{<br />
    int x=0;<br />
    int y=0;</p>
<p>    int i,j;<br />
    for(i=1;i&lt;=n;i++)<br />
    {<br />
        if(arr[i]&gt;=0)<br />
        {<br />
            x+=arr[i];</p>
<p>        }<br />
        else<br />
        {<br />
            y-=arr[i];<br />
        }<br />
    }<br />
    if(sum&gt;x||sum&lt;(-y))<br />
    {<br />
        return 0;<br />
    }<br />
    int dp[n+1][x+y+1];<br />
    for(i=0;i&lt;=n;i++)<br />
    {<br />
        for(j= -y+y; j-y&lt;=x ;j++)<br />
        {<br />
            if(i==0 &amp;&amp; (j-y)==0)<br />
            {<br />
                dp[i][j]=1;</p>
<p>            }<br />
            else if(i==0 &amp;&amp;(j-y)!=0)<br />
            {<br />
                dp[i][j]=0;<br />
            }<br />
            else if(i!=0&amp;&amp; (j-y)==0)<br />
            {<br />
                dp[i][j]=1;<br />
            }<br />
            else<br />
            {<br />
                if((j-y)-arr[i]&lt;=x &amp;&amp; (j-y)-arr[i]&gt;=(-y))<br />
                {<br />
                    dp[i][j]= dp[i-1][j]  | dp[i-1][j-arr[i]];<br />
                }<br />
                else<br />
                {<br />
                    dp[i][j]= dp[i-1][j];<br />
                }<br />
            }</p>
<p>        }<br />
    }<br />
    return(dp[n][sum+y]);</p>
<p>}<br />
int main()<br />
{<br />
    int t;<br />
    cin&gt;&gt;t;<br />
    while(t&#8211;)<br />
    {<br />
        int n,sum,i;<br />
        cin&gt;&gt;n;<br />
        int arr[n+1];<br />
        for(i=1;i&lt;=n;i++)<br />
        {<br />
            cin&gt;&gt;arr[i];<br />
        }<br />
        cin&gt;&gt;sum;<br />
        cout&lt;&lt;func(arr,n,sum)&lt;&lt;&quot;\n&quot;;<br />
    }</p>
<p>}</p>
</div>
        </div>

    </li><!-- #comment-## -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
<ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-31918">
        <div id="dsq-comment-header-31918" class="dsq-comment-header">
            <cite id="dsq-cite-31918">
                <span id="dsq-author-user-31918">anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31918" class="dsq-comment-body">
            <div id="dsq-comment-message-31918" class="dsq-comment-message"><p>if sum1 = sum2, then what to do? add to which sum?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-31920">
        <div id="dsq-comment-header-31920" class="dsq-comment-header">
            <cite id="dsq-cite-31920">
                <span id="dsq-author-user-31920">anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31920" class="dsq-comment-body">
            <div id="dsq-comment-message-31920" class="dsq-comment-message"><p>for this {5, 5, 4, 3, 3} .. ??</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-abhishek08aug odd alt thread-odd thread-alt depth-1" id="dsq-comment-17706">
        <div id="dsq-comment-header-17706" class="dsq-comment-header">
            <cite id="dsq-cite-17706">
                <span id="dsq-author-user-17706">abhishek08aug</span>
            </cite>
        </div>
        <div id="dsq-comment-body-17706" class="dsq-comment-body">
            <div id="dsq-comment-message-17706" class="dsq-comment-message"><p>Intelligent <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_biggrin.gif" alt=":D" class="wp-smiley" /></p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-15134">
        <div id="dsq-comment-header-15134" class="dsq-comment-header">
            <cite id="dsq-cite-15134">
                <span id="dsq-author-user-15134">googlybhai</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15134" class="dsq-comment-body">
            <div id="dsq-comment-message-15134" class="dsq-comment-message"><p>Solution will work only for +ve numbers. So either we should change the problem statement or change the solution.</p>
</div>
        </div>

    </li><!-- #comment-## -->
<ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-29883">
        <div id="dsq-comment-header-29883" class="dsq-comment-header">
            <cite id="dsq-cite-29883">
                <span id="dsq-author-user-29883">Siddhartha&#8217;s Father</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29883" class="dsq-comment-body">
            <div id="dsq-comment-message-29883" class="dsq-comment-message"><p>What are you son? Blind! Your Array contains 3 elements.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-12618">
        <div id="dsq-comment-header-12618" class="dsq-comment-header">
            <cite id="dsq-cite-12618">
                <span id="dsq-author-user-12618">anand</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12618" class="dsq-comment-body">
            <div id="dsq-comment-message-12618" class="dsq-comment-message"><pre> <code language="C">

public class PartitionProblem {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		int A[] =  {5, 5, 4, 3, 3};
		System.out.println(isSubSet(A, A.length));
	}

	private static boolean isSubSet(int[] A, int length) {
		int i,partialSum,sum = 0;
		
		for(i=0;i&lt;length;i++){
			sum +=A[i];
		}
		if(sum%2 == 1)return false;
		partialSum = sum/2;
		
		qSort(A,length);
		for(i = 0; i &lt; length; i++){
			partialSum -= A[i];
			if(partialSum &lt; 0)
				return false;
			else if(partialSum == 0)
				return true;
		}
		return false;
	}
}
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-15110">
        <div id="dsq-comment-header-15110" class="dsq-comment-header">
            <cite id="dsq-cite-15110">
                <span id="dsq-author-user-15110">Patrick</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15110" class="dsq-comment-body">
            <div id="dsq-comment-message-15110" class="dsq-comment-message"><p>nice solution&#8230;. thanks</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-15153">
        <div id="dsq-comment-header-15153" class="dsq-comment-header">
            <cite id="dsq-cite-15153">
                <span id="dsq-author-user-15153">kT</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15153" class="dsq-comment-body">
            <div id="dsq-comment-message-15153" class="dsq-comment-message"><p>@ anand,</p>
<p>I think your solution will fail for i/p : 3,4,8,9.<br />
Please check and sorry if my observation is incorrect.</p>
<p>Thanks.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-15198">
        <div id="dsq-comment-header-15198" class="dsq-comment-header">
            <cite id="dsq-cite-15198">
                <span id="dsq-author-user-15198">Patrick</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15198" class="dsq-comment-body">
            <div id="dsq-comment-message-15198" class="dsq-comment-message"><p>@KT:<br />
I modified anand&#8217;s code and now it&#8217;s working for all cases.</p>
<pre> <code language="C">
bool subPartition(int *A, int len){
	int sum=0,partitionSum;
	for(int i=0; i&lt;len;i++){
		sum=sum+A[i];
	}
	if(sum%2==1)
		return false;
	else{
		partitionSum=sum/2;
		qsort(A,len); //sort in decreasing order
		for(int i=0; i&lt;len;i++){
			while(partitionSum&lt;A[i] &amp;&amp; i&lt;len){
				i++;
            }
			partitionSum=partitionSum-A[i];
			if(partitionSum&lt;0)
				return false;
			else if(partitionSum==0)
				return true;
		}
		if(partitionSum!=0)
		    return false;   
	}
	
}
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-4" id="dsq-comment-16935">
        <div id="dsq-comment-header-16935" class="dsq-comment-header">
            <cite id="dsq-cite-16935">
                <span id="dsq-author-user-16935">Rahul Singh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-16935" class="dsq-comment-body">
            <div id="dsq-comment-message-16935" class="dsq-comment-message"><p>Patrick, what you are suggesting is a greedy approach. It won&#8217;t work for the following test case {2,3,4,5,7,9}.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-11976">
        <div id="dsq-comment-header-11976" class="dsq-comment-header">
            <cite id="dsq-cite-11976">
                <span id="dsq-author-user-11976">Raja</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11976" class="dsq-comment-body">
            <div id="dsq-comment-message-11976" class="dsq-comment-message"><p>Hi,</p>
<p>I would like to know In what cases sum is less than an array element(it might happen if the array contains -ve numbers).</p>
<p> // If last element is greater than sum, then ignore it<br />
   if (arr[n-1] &gt; sum)<br />
     return isSubsetSum (arr, n-1, sum);</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-11863">
        <div id="dsq-comment-header-11863" class="dsq-comment-header">
            <cite id="dsq-cite-11863">
                <span id="dsq-author-user-11863">Nikhil</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11863" class="dsq-comment-body">
            <div id="dsq-comment-message-11863" class="dsq-comment-message"><p>// If last element is greater than sum, then ignore it<br />
   if (arr[n-1] &gt; sum)<br />
     return isSubsetSum (arr, n-1, sum);<br />
 Regarding this code,I think we should return false as question says we need to divide it into two subsets.If we are ignoring any element,the we will create more than 2 subsets.</p>
<p>Please correct me if I am wrong!!!</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-11862">
        <div id="dsq-comment-header-11862" class="dsq-comment-header">
            <cite id="dsq-cite-11862">
                <span id="dsq-author-user-11862">Nikhil</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11862" class="dsq-comment-body">
            <div id="dsq-comment-message-11862" class="dsq-comment-message"><p>// If last element is greater than sum, then ignore it<br />
   if (arr[n-1] &gt; sum)<br />
     return isSubsetSum (arr, n-1, sum);<br />
 Regarding this code,I think we should return false as question says we need to divide it into two subsets.If we are ignoring any element,the we will create more than 2 subsets.</p>
<p>Please correct me if I am wrong!!!</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-11660">
        <div id="dsq-comment-header-11660" class="dsq-comment-header">
            <cite id="dsq-cite-11660">
http://facebook.com                <span id="dsq-author-user-11660">Nishant Mittal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11660" class="dsq-comment-body">
            <div id="dsq-comment-message-11660" class="dsq-comment-message"><p>*can be done by recursion with O(n^2).<br />
int32_t check_sum ( int32_t array[] , int32_t i , int32_t sum ) {<br />
	if (i&lt;max) {<br />
		check_sum ( array , i+1 , sum );<br />
		sum=sum-array[i];<br />
		if ( sum ==0 ) return ans=1;<br />
		check_sum ( array , i+1 , sum );<br />
	}<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-10687">
        <div id="dsq-comment-header-10687" class="dsq-comment-header">
            <cite id="dsq-cite-10687">
                <span id="dsq-author-user-10687">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10687" class="dsq-comment-body">
            <div id="dsq-comment-message-10687" class="dsq-comment-message"><p>im wondering if the condition should be:</p>
<pre> <code language="C">      
if (i &gt;= arr[j-1])
           part[i][j] = part[i][j-1] || part[i - arr[j-1]][j-1];
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-10525">
        <div id="dsq-comment-header-10525" class="dsq-comment-header">
            <cite id="dsq-cite-10525">
                <span id="dsq-author-user-10525">Mayautobot</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10525" class="dsq-comment-body">
            <div id="dsq-comment-message-10525" class="dsq-comment-message"><p>&#8220;Please note that this solution will not be feasible for arrays with big sum.&#8221;</p>
<p>&#8212;&gt;What can be the approach for finding solution with large sum?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-10139">
        <div id="dsq-comment-header-10139" class="dsq-comment-header">
            <cite id="dsq-cite-10139">
                <span id="dsq-author-user-10139">Simpson</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10139" class="dsq-comment-body">
            <div id="dsq-comment-message-10139" class="dsq-comment-message"><p>#include<br />
#include<br />
#include<br />
int compare(const void * a, const void * b)<br />
{<br />
  return ( *(int*)a &#8211; *(int*)b );<br />
}<br />
int main()<br />
{<br />
    int a[7];<br />
    int sum_even ,sum,m,n,i,flag;<br />
     sum_even=sum=m=flag=0;<br />
     n=6;<br />
    for( i=0;i&lt;7;i++)<br />
    {<br />
         scanf(&quot;%d&quot;,&amp;a[i]);<br />
         }</p>
<p>         qsort(a,7,sizeof(int),compare);<br />
         for( i=0;i&lt;7;i++)<br />
    {<br />
         printf(&quot;%d&quot;,a[i]);<br />
         }<br />
          for(i=0;i&lt;7;i++)<br />
         {<br />
           sum_even+=a[i];<br />
           }<br />
           if(sum_even%2==0)<br />
           {<br />
             sum=(sum_even/2);<br />
         while(m&lt;=n)<br />
         {<br />
            if((a[m]+a[n])==sum)<br />
             {<br />
               flag=1;<br />
               break;<br />
               }<br />
               if((a[m]+a[n])&lt;sum)<br />
                 m++;<br />
                 else<br />
                 n&#8211;;<br />
            }<br />
                 if(flag==1)<br />
                  printf(&quot;possible&quot;);<br />
            }<br />
                 else<br />
                 printf(&quot;not possible&quot;);<br />
                 getch();<br />
                 return 0;<br />
                 }</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-10558">
        <div id="dsq-comment-header-10558" class="dsq-comment-header">
            <cite id="dsq-cite-10558">
                <span id="dsq-author-user-10558">keshav</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10558" class="dsq-comment-body">
            <div id="dsq-comment-message-10558" class="dsq-comment-message"><p>Plz clearify ur method.</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-9908">
        <div id="dsq-comment-header-9908" class="dsq-comment-header">
            <cite id="dsq-cite-9908">
                <span id="dsq-author-user-9908">Abhinav Priyadarshi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9908" class="dsq-comment-body">
            <div id="dsq-comment-message-9908" class="dsq-comment-message"><p>i think there is a error in explanation of part[i][j], it should be<br />
part[i][j] = true if a subset of {arr[0], arr[1], ..arr[j-1]} has sum equal to **** i *****, otherwise false &#8216;</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-9909">
        <div id="dsq-comment-header-9909" class="dsq-comment-header">
            <cite id="dsq-cite-9909">
                <span id="dsq-author-user-9909">Abhinav Priyadarshi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9909" class="dsq-comment-body">
            <div id="dsq-comment-message-9909" class="dsq-comment-message"><p>***** are used to highlight.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-10045">
        <div id="dsq-comment-header-10045" class="dsq-comment-header">
            <cite id="dsq-cite-10045">
                <span id="dsq-author-user-10045">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-10045" class="dsq-comment-body">
            <div id="dsq-comment-message-10045" class="dsq-comment-message"><p>@Abhinav Priyadarshi: Thanks for pointing this out. We have corrected the explanation. Keep it up!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-9888">
        <div id="dsq-comment-header-9888" class="dsq-comment-header">
            <cite id="dsq-cite-9888">
                <span id="dsq-author-user-9888">Ankit Gupta</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9888" class="dsq-comment-body">
            <div id="dsq-comment-message-9888" class="dsq-comment-message"><p>Hi, I am using a top-down recursive memoization to populate the cache array below.</p>
<p>I want to know :<br />
1. Whether following solution is correctly implemented.<br />
2. I don&#8217;t see the sub-problems being reused in the cache array so a bottom up approach may be having most of the entries unused (and populated nonethless).</p>
<pre> <code language="C">
int arr[] = {3, 1, 1, 2, 2, 1};
int N, S;
int cache[MAXN][MAXSUM];

bool partition(int pos, int sum)
{
    if (sum == S&gt;&gt;1) {
        return true;
    }

    if (pos == N || sum &gt; S&gt;&gt;1) {
        return false;
    }

    if (cache[pos][sum] != -1) {
        return cache[pos][sum];
    }

    cache[pos][sum] = partition(pos+1, sum+arr[pos]) || partition(pos+1, sum);
    return cache[pos][sum];
}

</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-9889">
        <div id="dsq-comment-header-9889" class="dsq-comment-header">
            <cite id="dsq-cite-9889">
                <span id="dsq-author-user-9889">Ankit Gupta</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9889" class="dsq-comment-body">
            <div id="dsq-comment-message-9889" class="dsq-comment-message"><p>I have initialized cache to -1 and S to total Sum.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-9832">
        <div id="dsq-comment-header-9832" class="dsq-comment-header">
            <cite id="dsq-cite-9832">
                <span id="dsq-author-user-9832">atul</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9832" class="dsq-comment-body">
            <div id="dsq-comment-message-9832" class="dsq-comment-message"><p>space optimized DP approach :-</p>
<pre> <code language="C">

part[0]=1;
for(i=0;i&lt;n;i++)
{
   for(j=sum;j&gt;=arr[i];j--)
   {
        part[j]=part[j] | part[j-arr[i]]
   }
}
if(part[sum])
   printf(&quot;\nsubset exists\n&quot;);
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-9833">
        <div id="dsq-comment-header-9833" class="dsq-comment-header">
            <cite id="dsq-cite-9833">
                <span id="dsq-author-user-9833">atul</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9833" class="dsq-comment-body">
            <div id="dsq-comment-message-9833" class="dsq-comment-message"><p>here sum=Total_Sum/2;</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-penhaunt even depth-2" id="dsq-comment-25172">
        <div id="dsq-comment-header-25172" class="dsq-comment-header">
            <cite id="dsq-cite-25172">
                <span id="dsq-author-user-25172">penhaunt</span>
            </cite>
        </div>
        <div id="dsq-comment-body-25172" class="dsq-comment-body">
            <div id="dsq-comment-message-25172" class="dsq-comment-message"><p>aap god hain <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-penhaunt odd alt depth-2" id="dsq-comment-25173">
        <div id="dsq-comment-header-25173" class="dsq-comment-header">
            <cite id="dsq-cite-25173">
                <span id="dsq-author-user-25173">penhaunt</span>
            </cite>
        </div>
        <div id="dsq-comment-body-25173" class="dsq-comment-body">
            <div id="dsq-comment-message-25173" class="dsq-comment-message"><p>aap to chaa gye sir <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-9460">
        <div id="dsq-comment-header-9460" class="dsq-comment-header">
            <cite id="dsq-cite-9460">
                <span id="dsq-author-user-9460">Wayne</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9460" class="dsq-comment-body">
            <div id="dsq-comment-message-9460" class="dsq-comment-message"><p>Condn- sum should be divisible by 2;</p>
<p>We know the &#8220;sum&#8221; right !!! sum = sum of all the elements in array</p>
<p>Cant we use sum of subset problem (knapsack) to find out the subset which has &#8220;sum/2&#8243; value. it would become so easy because we know that the rest of elements sum is &#8220;sum/2&#8243;, </p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-9470">
        <div id="dsq-comment-header-9470" class="dsq-comment-header">
            <cite id="dsq-cite-9470">
                <span id="dsq-author-user-9470">sonal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9470" class="dsq-comment-body">
            <div id="dsq-comment-message-9470" class="dsq-comment-message"><p>I think that is what the given DP code is doing <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-9495">
        <div id="dsq-comment-header-9495" class="dsq-comment-header">
            <cite id="dsq-cite-9495">
                <span id="dsq-author-user-9495">Wayne</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9495" class="dsq-comment-body">
            <div id="dsq-comment-message-9495" class="dsq-comment-message"><p>Oops .. My Bad &#8230;</p>
<p>But why are they using 2D array &#8230;. I guess 1D array of SUM/2 is enough. ??? </p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-9436">
        <div id="dsq-comment-header-9436" class="dsq-comment-header">
            <cite id="dsq-cite-9436">
                <span id="dsq-author-user-9436">sindabad</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9436" class="dsq-comment-body">
            <div id="dsq-comment-message-9436" class="dsq-comment-message"><pre> <code language="C">
Sort the data in descending order
for(i=1 to n)
{
if(sum(set1) &gt; sum(set2))
include the number in set2
else
if(sum(set2) &gt; sum(set1))
include the number in set1
else
return 1;
}
retunr 0;
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-9437">
        <div id="dsq-comment-header-9437" class="dsq-comment-header">
            <cite id="dsq-cite-9437">
                <span id="dsq-author-user-9437">kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9437" class="dsq-comment-body">
            <div id="dsq-comment-message-9437" class="dsq-comment-message"><p>this will not work for {5, 5, 4, 3, 3}</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-9428">
        <div id="dsq-comment-header-9428" class="dsq-comment-header">
            <cite id="dsq-cite-9428">
                <span id="dsq-author-user-9428">Venki</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9428" class="dsq-comment-body">
            <div id="dsq-comment-message-9428" class="dsq-comment-message"><p>How is different from fair work load problem?</p>
<p><a href="http://topcoder.bgcoder.com/print.php?id=383" rel="nofollow">http://topcoder.bgcoder.com/print.php?id=383</a></p>
<p>Reference: The Algorithm Design Manual by Skiena.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-9898">
        <div id="dsq-comment-header-9898" class="dsq-comment-header">
            <cite id="dsq-cite-9898">
                <span id="dsq-author-user-9898">Ankit Gupta</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9898" class="dsq-comment-body">
            <div id="dsq-comment-message-9898" class="dsq-comment-message"><p>Hi, thanks for sharing the problem.<br />
I can think of a recursive backtracking solution (do not know if it&#8217;s right) :</p>
<pre> <code language="C">
If workers == 0
    return 0
else
    calculate all possible partition(folders, N, sum/N) say newfolders
    // sum is total count of the elements in folders and N is #workers.
    foreach newfolders
        max = maximum of (sum(folders)-sum(newfolders), getMostWork(newfolders, workers-1))
                and max
    return max
</code> </pre>
<p>Can you hint at a solution ?</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/dynamic-programming-set-18-partition-problem/';
var disqus_identifier = '21579 http://www.geeksforgeeks.org/?p=21579';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Dynamic Programming | Set 18 (Partition problem)";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.208 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:27:37 -->

<!-- Compression = gzip -->
<!-- super cache -->