<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>Find the number of islands - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/find-number-of-islands/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Find the number of islands - GeeksforGeeks" />
<meta property="og:description" content="Given a boolean 2D matrix, find the number of islands. This is an variation of the standard problem: &#8220;Counting number of connected components in a undirected graph&#8221;. Before we go to the problem, let us understand what is a connected component. A connected component of an undirected graph is a subgraph in which every two &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/find-number-of-islands/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:tag" content="Graph" />
<meta property="article:section" content="Arrays" />
<meta property="article:section" content="Graph" />
<meta property="article:published_time" content="2012-10-17T15:23:33+00:00" />
<meta property="article:modified_time" content="2014-02-09T19:36:21+00:00" />
<meta property="og:updated_time" content="2014-02-09T19:36:21+00:00" />
<meta property="og:image" content="http://d2o58evtke57tz.cloudfront.net/wp-content/uploads/islands.png" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.499 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417110995 124.125.158.138';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Find the number of islands</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>Given a boolean 2D matrix, find the number of islands.</p>
<p>This is an variation of the standard problem: &#8220;Counting number of connected components in a undirected graph&#8221;.<span id="more-25783"></span></p>
<p>Before we go to the problem, let us understand what is a connected component. A <a href="http://en.wikipedia.org/wiki/Connected_component_(graph_theory)">connected component</a> of an undirected graph is a subgraph in which every two vertices are connected to each other by a path(s), and which is connected to no other vertices outside the subgraph.<br />
For example, the graph shown below has three connected components. </p>
<p><a href="http://d2o58evtke57tz.cloudfront.net/wp-content/uploads/islands.png"><img src="http://d2o58evtke57tz.cloudfront.net/wp-content/uploads/islands.png" alt="" title="islands" width="240" height="208" class="aligncenter size-full wp-image-25785" /></a></p>
<p>A graph where all vertices are connected with each other, has exactly one connected component, consisting of the whole graph. Such graph with only one connected component is called as Strongly Connected Graph.</p>
<p>The problem can be easily solved by applying DFS() on each component. In each DFS() call, a component or a sub-graph is visited. We will call DFS on the next un-visited component. The number of calls to DFS() gives the number of connected components. BFS can also be used.</p>
<p><strong><em>What is an island?</em></strong><br />
A group of connected 1s forms an island.  For example, the below matrix contains 5 islands</p>
<pre>
	                {<strong>1</strong>,<strong> 1</strong>, 0, 0, 0},
                        {0, <strong>1</strong>, 0, 0, <strong>1</strong>},
                        {<strong>1</strong>, 0, 0, <strong>1</strong>, <strong>1</strong>},
                        {0, 0, 0, 0, 0},
                        {<strong>1</strong>, 0, <strong>1</strong>, 0, <strong>1</strong>}
</pre>
<p>A cell in 2D matrix can be connected to 8 neighbors. So, unlike standard DFS(), where we  recursively call for all adjacent vertices, here we can recursive call for 8 neighbors only. We keep track of the visited 1s so that they are not visited again.</p>
<pre class="brush: cpp; highlight: [36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57]; title: ; notranslate" title="">
// Program to count islands in boolean 2D matrix

#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;stdbool.h&gt;

#define ROW 5
#define COL 5

// A function to check if a given cell (row, col) can be included in DFS
int isSafe(int M[][COL], int row, int col, bool visited[][COL])
{
    return (row &gt;= 0) &amp;&amp; (row &lt; ROW) &amp;&amp;     // row number is in range
           (col &gt;= 0) &amp;&amp; (col &lt; COL) &amp;&amp;     // column number is in range
           (M[row][col] &amp;&amp; !visited[row][col]); // value is 1 and not yet visited
}

// A utility function to do DFS for a 2D boolean matrix. It only considers
// the 8 neighbors as adjacent vertices
void DFS(int M[][COL], int row, int col, bool visited[][COL])
{
    // These arrays are used to get row and column numbers of 8 neighbors 
    // of a given cell
    static int rowNbr[] = {-1, -1, -1,  0, 0,  1, 1, 1};
    static int colNbr[] = {-1,  0,  1, -1, 1, -1, 0, 1};

    // Mark this cell as visited
    visited[row][col] = true;

    // Recur for all connected neighbours
    for (int k = 0; k &lt; 8; ++k)
        if (isSafe(M, row + rowNbr[k], col + colNbr[k], visited) )
            DFS(M, row + rowNbr[k], col + colNbr[k], visited);
}

// The main function that returns count of islands in a given boolean
// 2D matrix
int countIslands(int M[][COL])
{
    // Make a bool array to mark visited cells.
    // Initially all cells are unvisited
    bool visited[ROW][COL];
    memset(visited, 0, sizeof(visited));

    // Initialize count as 0 and travese through the all cells of
    // given matrix
    int count = 0;
    for (int i = 0; i &lt; ROW; ++i)
        for (int j = 0; j &lt; COL; ++j)
            if (M[i][j] &amp;&amp; !visited[i][j]) // If a cell with value 1 is not
            {                              // visited yet, then new island found
                DFS(M, i, j, visited);     // Visit all cells in this island.
                ++count;                   // and increment island count
            }

    return count;
}

// Driver program to test above function
int main()
{
    int M[][COL]= {  {1, 1, 0, 0, 0},
        {0, 1, 0, 0, 1},
        {1, 0, 0, 1, 1},
        {0, 0, 0, 0, 0},
        {1, 0, 1, 0, 1}
    };

    printf(&quot;Number of islands is: %d\n&quot;, countIslands(M));

    return 0;
}
</pre>
<p>Output:
<pre>Number of islands is: 5</pre>
<p>Time complexity: O(ROW x COL)</p>
<p>Reference:<br />
<a href="http://en.wikipedia.org/wiki/Connected_component_%28graph_theory%29">http://en.wikipedia.org/wiki/Connected_component_%28graph_theory%29</a></p>
<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array-set-2-expected-linear-time/" title="K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)">K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)</a></li><li><a href="http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array/" title="K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1">K&#8217;th Smallest/Largest Element in Unsorted Array | Set 1</a></li><li><a href="http://www.geeksforgeeks.org/time-complexity-insertion-sort-inversions/" title="Time complexity of insertion sort when there are O(n) inversions?">Time complexity of insertion sort when there are O(n) inversions?</a></li><li><a href="http://www.geeksforgeeks.org/check-two-given-sets-disjoint/" title="How to check if two given sets are disjoint?">How to check if two given sets are disjoint?</a></li><li><a href="http://www.geeksforgeeks.org/minimum-number-platforms-required-railwaybus-station/" title="Minimum Number of Platforms Required for a Railway/Bus Station">Minimum Number of Platforms Required for a Railway/Bus Station</a></li><li><a href="http://www.geeksforgeeks.org/given-two-sorted-arrays-number-x-find-pair-whose-sum-closest-x/" title="Find the closest pair from two sorted arrays">Find the closest pair from two sorted arrays</a></li><li><a href="http://www.geeksforgeeks.org/print-elements-sorted-order-row-column-wise-sorted-matrix/" title="Print all elements in sorted order from row and column wise sorted matrix">Print all elements in sorted order from row and column wise sorted matrix</a></li><li><a href="http://www.geeksforgeeks.org/length-largest-subarray-contiguous-elements-set-1/" title="Length of the largest subarray with contiguous elements | Set 1">Length of the largest subarray with contiguous elements | Set 1</a></li></ul>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/graph/" rel="tag">Graph</a></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Ffind-number-of-islands%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/find-number-of-islands/" data-text="Find the number of islands" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/find-number-of-islands/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-34672">
        <div id="dsq-comment-header-34672" class="dsq-comment-header">
            <cite id="dsq-cite-34672">
                <span id="dsq-author-user-34672">Aditya Murgai</span>
            </cite>
        </div>
        <div id="dsq-comment-body-34672" class="dsq-comment-body">
            <div id="dsq-comment-message-34672" class="dsq-comment-message"><p>// Program to count islands in boolean 2D matrix</p>
<p>#include<br />
#include<br />
#include </p>
<p>#define ROW 5<br />
#define COL 5</p>
<p>void countRec(bool aux[][COL],int i ,int j)<br />
{<br />
 printf(&#8220;i=%d j=%dn&#8221;, i,j);<br />
 if((i&gt;=ROW)||(j&gt;=COL)||(i&lt;0)||(j&lt;0)||(aux[i][j]==0))<br />
 return;</p>
<p> aux[i][j]=0;<br />
 countRec(aux,i+1 ,j);<br />
 countRec(aux,i ,j+1);<br />
 countRec(aux,i+1 ,j+1);<br />
 countRec(aux,i-1 ,j);<br />
 countRec(aux,i-1 ,j+1);<br />
 countRec(aux,i-1 ,j-1);<br />
 countRec(aux,i+1 ,j-1);<br />
 countRec(aux,i ,j-1);</p>
<p>}</p>
<p>int countIslands(int M[][COL])<br />
{<br />
    // Make a bool array to mark visited cells.<br />
    // Initially all cells are unvisited<br />
    bool visited[ROW][COL];<br />
    memset(visited, 0, sizeof(visited));<br />
    int count=0;</p>
<p>    for (int i = 0; i &lt; ROW; ++i)<br />
        for (int j = 0; j &lt; COL; ++j)<br />
        {<br />
         visited[i][j]=M[i][j];<br />
        }</p>
<p>        for (int i = 0; i &lt; ROW; ++i)<br />
        for (int j = 0; j &lt; COL; ++j)<br />
        {</p>
<p>         if(visited[i][j])<br />
         {<br />
          count++;<br />
          countRec(visited,i ,j);<br />
         }<br />
        }</p>
<p>    return count;<br />
}</p>
<p>// Driver program to test above function<br />
int main()<br />
{<br />
    int M[][COL]= {  {1, 1, 0, 0, 0},<br />
        {0, 1, 0, 0, 1},<br />
        {1, 0, 0, 1, 1},<br />
        {0, 0, 0, 0, 0},<br />
        {1, 0, 1, 0, 1}<br />
    };</p>
<p>    printf(&quot;Number of islands is: %dn&quot;, countIslands(M));</p>
<p>    return 0;<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-31651">
        <div id="dsq-comment-header-31651" class="dsq-comment-header">
            <cite id="dsq-cite-31651">
                <span id="dsq-author-user-31651">cooldude</span>
            </cite>
        </div>
        <div id="dsq-comment-body-31651" class="dsq-comment-body">
            <div id="dsq-comment-message-31651" class="dsq-comment-message"><p>i gave the same answer that is provided here in amazon written test and the idiots rejected me without asking that u can optimize the solution</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-29846">
        <div id="dsq-comment-header-29846" class="dsq-comment-header">
            <cite id="dsq-cite-29846">
                <span id="dsq-author-user-29846">Vijay Apurva</span>
            </cite>
        </div>
        <div id="dsq-comment-body-29846" class="dsq-comment-body">
            <div id="dsq-comment-message-29846" class="dsq-comment-message"><p>we can do this with out any extra space &#8230;</p>
<p>#include </p>
<p>#include </p>
<p>#define ROW 5</p>
<p>#define COL 5</p>
<p>bool isSafe(int M[ROW][COL], int row, int col)</p>
<p>{</p>
<p>    if((row &gt;= 0) &amp;&amp; (row = 0) &amp;&amp; (col &lt; COL)){</p>
<p>    if(M[row][col]==1)</p>
<p>    return true ;</p>
<p>    return false ;</p>
<p>    }</p>
<p>   return false ;</p>
<p>}</p>
<p>void DFS(int M[ROW][COL], int row, int col)</p>
<p>{</p>
<p>     int rowNbr[] = {-1, -1, -1,  0, 0,  1, 1, 1};</p>
<p>     int colNbr[] = {-1,  0,  1, -1, 1, -1, 0, 1};</p>
<p>     M[row][col]=2;</p>
<p>    for (int k = 0; k &lt; 8; k++)</p>
<p>        if (isSafe(M, row + rowNbr[k], col + colNbr[k])){</p>
<p>            DFS(M, row + rowNbr[k], col + colNbr[k]);</p>
<p>            }</p>
<p>}</p>
<p>int countIslands(int M[ROW][COL])</p>
<p>{</p>
<p>    int count = 0;</p>
<p>    for (int i = 0; i &lt; ROW; ++i)</p>
<p>        for (int j = 0; j &lt; COL; ++j)</p>
<p>            if (M[i][j]==1)</p>
<p>            {</p>
<p>                DFS(M, i, j);</p>
<p>                ++count;</p>
<p>            }</p>
<p>    return count;</p>
<p>}</p>
<p>int main()</p>
<p>{</p>
<p>    int M[ROW][COL]= {  {1, 1, 0, 0, 0},</p>
<p>        {0, 1, 0, 0, 1},</p>
<p>        {1, 0, 0, 1, 1},</p>
<p>        {0, 0, 0, 0, 0},</p>
<p>        {1, 1, 1, 1, 1}</p>
<p>    };</p>
<p>    printf(&quot;Number of islands is: %dn&quot;, countIslands(M));</p>
<p>    return 0;</p>
<p>}</p>
</div>
        </div>

    </li><!-- #comment-## -->
</li><!-- #comment-## -->
<ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-32436">
        <div id="dsq-comment-header-32436" class="dsq-comment-header">
            <cite id="dsq-cite-32436">
                <span id="dsq-author-user-32436">Bhagwat Singh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-32436" class="dsq-comment-body">
            <div id="dsq-comment-message-32436" class="dsq-comment-message"><p>use of static : its donot take extra  memory at each invocation it only takes once in all .</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-32437">
        <div id="dsq-comment-header-32437" class="dsq-comment-header">
            <cite id="dsq-cite-32437">
                <span id="dsq-author-user-32437">Bhagwat Singh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-32437" class="dsq-comment-body">
            <div id="dsq-comment-message-32437" class="dsq-comment-message"><p>one time initialization</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-20822">
        <div id="dsq-comment-header-20822" class="dsq-comment-header">
            <cite id="dsq-cite-20822">
                <span id="dsq-author-user-20822">vivek</span>
            </cite>
        </div>
        <div id="dsq-comment-body-20822" class="dsq-comment-body">
            <div id="dsq-comment-message-20822" class="dsq-comment-message"><p>#include<br />
#include<br />
#include<br />
using namespace std;<br />
#define C 5<br />
#define R 5<br />
int allvisited(set&amp;s)<br />
{<br />
        int i;<br />
        for( i=0;i&lt;C&amp;&amp;!s.insert(i).second;i++);<br />
        return (i==C);<br />
}<br />
int no_island(int a[][C])<br />
{<br />
        sets;<br />
        stackS;<br />
        int i;<br />
        int count =0;<br />
        S.push(0);<br />
        while(!allvisited(s))<br />
        {<br />
                while(!S.empty())<br />
                {<br />
                        i = S.top();<br />
                        S.pop();<br />
                        if(s.insert(i).second==true)<br />
                        {<br />
                                for(int j=0;j&lt;C;j++)<br />
                                {<br />
                                        if(j==i)continue;<br />
                                        if(a[i][j]&amp;&amp;s.insert(j).second==true)<br />
                                        {<br />
                                                S.push(j);<br />
                                        }<br />
                                }<br />
                        }<br />
                }<br />
                count++;<br />
        }<br />
        return count;<br />
}<br />
int main()<br />
{<br />
    int M[][C]= {  {1, 1, 0, 0, 0},<br />
        {0, 1, 0, 0, 1},<br />
        {1, 0, 0, 1, 1},<br />
        {0, 0, 0, 0, 0},<br />
        {1, 0, 1, 0, 1}<br />
    };</p>
<p>    cout&lt;&lt;&quot;Number of islands is &quot;&lt;&lt;no_island(M)&lt;&lt;endl;<br />
     return 0;<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-17479">
        <div id="dsq-comment-header-17479" class="dsq-comment-header">
            <cite id="dsq-cite-17479">
                <span id="dsq-author-user-17479">Prateek Sharma</span>
            </cite>
        </div>
        <div id="dsq-comment-body-17479" class="dsq-comment-body">
            <div id="dsq-comment-message-17479" class="dsq-comment-message"><p>python Code&#8230;&#8230;</p>
<pre> <code language="C">
def recursion(a,i,j):
    if i&gt;=0 and i&lt;len(a) and j&gt;=0 and j&lt;len(a[i]):
        if a[i][j] ==1:
            a[i][j] =2
            recursion(a,i,j+1)
            recursion(a,i,j-1)
            recursion(a,i+1,j)
            recursion(a,i-1,j)
            recursion(a,i-1,j-1)
            recursion(a,i-1,j+1)
            recursion(a,i+1,j-1)
            recursion(a,i+1,j+1)
        
            
def findingIslands(a):
    count =0
    for i in range(len(a)):
        for j in range(len(a[i])):
            if a[i][j] ==1:
                count = count+1
                recursion(a,i,j)
    print &quot;Number of Islands:&quot; +str(count)
def main():
    array =[[1,0,1],
            [1,1,1],
            [0,0,1]]
    findingIslands(array)
if __name__ == '__main__':
    main()
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-16823">
        <div id="dsq-comment-header-16823" class="dsq-comment-header">
            <cite id="dsq-cite-16823">
                <span id="dsq-author-user-16823">ravi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-16823" class="dsq-comment-body">
            <div id="dsq-comment-message-16823" class="dsq-comment-message"><p>plzzzz help how to implement above code by adjency list plzzzzzzz helpppp <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_sad.gif" alt=":(" class="wp-smiley" /></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-16765">
        <div id="dsq-comment-header-16765" class="dsq-comment-header">
            <cite id="dsq-cite-16765">
http://myvedham.blogspot.in                <span id="dsq-author-user-16765">Karthic</span>
            </cite>
        </div>
        <div id="dsq-comment-body-16765" class="dsq-comment-body">
            <div id="dsq-comment-message-16765" class="dsq-comment-message"><p>Check the following page for java implementation without recursion..<br />
<a href="http://myvedham.blogspot.in/2013/03/find-number-of-islands-connected-1s-java.html?view=sidebar" rel="nofollow">http://myvedham.blogspot.in/2013/03/find-number-of-islands-connected-1s-java.html?view=sidebar</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-15300">
        <div id="dsq-comment-header-15300" class="dsq-comment-header">
            <cite id="dsq-cite-15300">
                <span id="dsq-author-user-15300">Tahir</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15300" class="dsq-comment-body">
            <div id="dsq-comment-message-15300" class="dsq-comment-message"><p>My program is compiling but i cannot got the accourate result because i think so there is some mistake for returning the function value,Please correct it and send back to me.</p>
<pre> <code language="C">
/* 

#include
#include
#include
#include
#include
#define ROW 10
#define COL 10
int markIsland(int M[][COL], int i, int j, int m, int n);
int countIslands(int M[][COL], int m, int n);

int markIsland(int M[][COL], int i, int j, int m, int n)
{
M[i][j] = -1;

if(i-1 &gt;= 0)
{

if(j-1 &gt;= 0 &amp;&amp; M[i-1][j-1] == 1)
markIsland(M, i-1, j-1, m, n);

if(M[i-1][j] == 1)
markIsland(M, i-1, j, m, n);

if(j+1 &lt; n &amp;&amp; M[i-1][j+1] == 1)
markIsland(M, i-1, j+1, m, n);
}

if(i+1 = 0 &amp;&amp; M[i+1][j-1] == 1)
markIsland(M, i+1, j-1, m, n);

if(M[i+1][j] == 1)
markIsland(M, i+1, j, m, n);

if(j+1 = 0 &amp;&amp; M[i][j-1] == 1)
markIsland(M, i, j-1, m, n);

if(j+1 &lt; n &amp;&amp; M[i][j+1] == 1)
markIsland(M, i, j+1, m, n);
}

int countIslands(int M[][COL], int m, int n)
{
int count = 0;

for(int i=0; i&lt;m; i++)
for(int j=0; j&lt;n; j++)
if(M[i][j] == -1)
M[i][j] = 1;
{
count++;

}

return count;
}

int main()
{

int m, i,j,n, c, d,f, matrix[10][10];
m = ROW;
n = COL;

srand(time(NULL));
printf(&quot;Enter the number of rows and columns of matrix\n &quot;);

for( i = 0 ; i &lt; m ; i++ )
{
for( j = 0 ; j &lt; n ; j++ )
{
printf(&quot;%d\t&quot;,rand() % 2);
}
}

printf(&quot;Number of islands is: %d &quot;, countIslands(matrix, m, n));
getch();

}
Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-15301">
        <div id="dsq-comment-header-15301" class="dsq-comment-header">
            <cite id="dsq-cite-15301">
                <span id="dsq-author-user-15301">Tahir</span>
            </cite>
        </div>
        <div id="dsq-comment-body-15301" class="dsq-comment-body">
            <div id="dsq-comment-message-15301" class="dsq-comment-message"><p>#include<br />
#include<br />
#include<br />
#include<br />
#include </p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-12316">
        <div id="dsq-comment-header-12316" class="dsq-comment-header">
            <cite id="dsq-cite-12316">
                <span id="dsq-author-user-12316">Palash</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12316" class="dsq-comment-body">
            <div id="dsq-comment-message-12316" class="dsq-comment-message"><p>It can be done in O(1) space by modifying the matrix and then restoring it back.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-12320">
        <div id="dsq-comment-header-12320" class="dsq-comment-header">
            <cite id="dsq-cite-12320">
                <span id="dsq-author-user-12320">Palash</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12320" class="dsq-comment-body">
            <div id="dsq-comment-message-12320" class="dsq-comment-message"><p>Oh, but I didn&#8217;t take into account the stack/queue space. It&#8217;ll still be O(n^2). I just wanted to say that visited array can be avoided.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-12088">
        <div id="dsq-comment-header-12088" class="dsq-comment-header">
            <cite id="dsq-cite-12088">
                <span id="dsq-author-user-12088">MJ</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12088" class="dsq-comment-body">
            <div id="dsq-comment-message-12088" class="dsq-comment-message"><p>Can you plz explain the role of the below two arrays and how they are computed?</p>
<p>static int rowNbr[] = {-1, -1, -1,  0, 0,  1, 1, 1};<br />
static int colNbr[] = {-1,  0,  1, -1, 1, -1, 0, 1};</p>
<p>Also plz explain the below two lines more elaborately. I am not able to understand it</p>
<p>&#8220;A cell in 2D matrix can be connected to 8 neighbors. So, unlike standard DFS(), where we recursively call for all adjacent vertices, here we can recursive call for 8 neighbors only&#8221;</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-12090">
        <div id="dsq-comment-header-12090" class="dsq-comment-header">
            <cite id="dsq-cite-12090">
                <span id="dsq-author-user-12090">Aashish</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12090" class="dsq-comment-body">
            <div id="dsq-comment-message-12090" class="dsq-comment-message"><p>The two arrays are used to compute the neighbors of a cell. The values of the arrays are added to the X and Y co-ordinates of a cell to get its neighbor.</p>
<p>A cell can be connected to another cell only through 8 ways. So, start from any cell, try to cover all connected cells which contain 1.</p>
<p>e.g. If a cell is located at M[row][col], its neighbor can be calculated by:<br />
M[row + rowNbr[i] ][col + colNbr[i] ]<br />
Where 0 &lt;= i &lt; 8</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-vibhu-tiwari odd alt depth-2" id="dsq-comment-14751">
        <div id="dsq-comment-header-14751" class="dsq-comment-header">
            <cite id="dsq-cite-14751">
                <span id="dsq-author-user-14751">Vibhu Tiwari</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14751" class="dsq-comment-body">
            <div id="dsq-comment-message-14751" class="dsq-comment-message"><p>Basically these 8 neighbors identify the 8 directions that is N,S,NW,NE,SW,SE,W,E in order to check whether the node is connected to any of these adjacent neighbors in all these directions</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-12079">
        <div id="dsq-comment-header-12079" class="dsq-comment-header">
            <cite id="dsq-cite-12079">
                <span id="dsq-author-user-12079">sreeram</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12079" class="dsq-comment-body">
            <div id="dsq-comment-message-12079" class="dsq-comment-message"><p>we can optimise by reducing the visited matrix by replacing 1 by 0 when ever we are done  with it &#8230;.(of course it modifies the original matrix)</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-12044">
        <div id="dsq-comment-header-12044" class="dsq-comment-header">
            <cite id="dsq-cite-12044">
                <span id="dsq-author-user-12044">geek</span>
            </cite>
        </div>
        <div id="dsq-comment-body-12044" class="dsq-comment-body">
            <div id="dsq-comment-message-12044" class="dsq-comment-message"><p>complexity is wrong</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-11833">
        <div id="dsq-comment-header-11833" class="dsq-comment-header">
            <cite id="dsq-cite-11833">
                <span id="dsq-author-user-11833">Rahul</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11833" class="dsq-comment-body">
            <div id="dsq-comment-message-11833" class="dsq-comment-message"><p>my code..<br />
amortized analysis gives complexity of O(Row x Col)</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */

#include&lt;iostream&gt;
using namespace std;
#define R 6
#define C 6

int findIsland(int M[R][C] , int Cp[R][C]);
void explore(int M[R][C] , int Cp[R][C] , int i, int j);

main()
{
int island = 0;
int M[R][C] =	{
				{1,1,0,0,1,0},
				{1,0,0,0,1,0},
				{1,1,0,1,1,0},
				{0,0,1,0,0,1},
				{0,0,1,1,0,1},
				{1,1,0,1,1,1}
				};

int Cp[R][C] =	{
				{0,0,0,0,0,0},
				{0,0,0,0,0,0},
				{0,0,0,0,0,0},
				{0,0,0,0,0,0},
				{0,0,0,0,0,0},
				{0,0,0,0,0,0}	
				};
				
island = findIsland(M,Cp);
cout&lt;&lt;island;
}

int findIsland(int M[R][C] , int Cp[R][C])
{
int count = 0;
int i, j;
for(i=0;i&lt;R;i++)
	for(j=0;j&lt;C;j++)
		{
		if((M[i][j]==1) &amp;&amp; (Cp[i][j] == 0))
			{
			explore(M, Cp, i, j);
			count++;
			}
		}
return count;
}

void explore(int M[R][C] , int Cp[R][C] , int i, int j)
{
if(i&gt;=0 &amp;&amp; i&lt;R &amp;&amp; j&gt;=0 &amp;&amp; j&lt;C)
	{
		if(M[i][j] == 0)
			return;
		else
		{
			Cp[i][j] = 1;
			if((Cp[i+1][j] != 1) &amp;&amp; i+1&gt;=0 &amp;&amp; i+1&lt;R &amp;&amp; j&gt;=0 &amp;&amp; j&lt;C)
			explore(M, Cp, i+1, j);
			if((Cp[i][j+1] != 1) &amp;&amp; i&gt;=0 &amp;&amp; i&lt;R &amp;&amp; j+1&gt;=0 &amp;&amp; j+1&lt;C)
			explore(M, Cp, i, j+1);
			if((Cp[i-1][j] != 1) &amp;&amp; i-1&gt;=0 &amp;&amp; i-1&lt;R &amp;&amp; j&gt;=0 &amp;&amp; j&lt;C)
			explore(M, Cp, i-1, j);
			if((Cp[i][j-1] != 1) &amp;&amp; i&gt;=0 &amp;&amp; i&lt;R &amp;&amp; j-1&gt;=0 &amp;&amp; j-1&lt;C)
			explore(M, Cp, i, j-1);
		}
	}
}
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-11825">
        <div id="dsq-comment-header-11825" class="dsq-comment-header">
            <cite id="dsq-cite-11825">
                <span id="dsq-author-user-11825">sreeram</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11825" class="dsq-comment-body">
            <div id="dsq-comment-message-11825" class="dsq-comment-message"><p>i think for a particular position (i,j)   (i-1,j-1),(i-1,j),<br />
(i-1,j+1)  ,(i,j-1)  are redundant positions because we are visiting in that order only</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-11827">
        <div id="dsq-comment-header-11827" class="dsq-comment-header">
            <cite id="dsq-cite-11827">
                <span id="dsq-author-user-11827">Kartik</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11827" class="dsq-comment-body">
            <div id="dsq-comment-message-11827" class="dsq-comment-message"><p>@sreeram: Thanks for sharing your thoughts.  Your point seems to be valid.  I think, we can reduce the size of rowNbr[] and colNbr[] to 4.  Also, the for loop now runs 4 times. </p>
<pre> <code language="C">
void DFS(int M[][COL], int row, int col, bool visited[][COL])
{
    static int rowNbr[] = {0,  1, 1, 1};
    static int colNbr[] = {1, -1, 0, 1};
    
    visited[row][col] = true;
    
    for (int k = 0; k &lt; 4; ++k)
        if (isSafe(M, row + rowNbr[k], col + colNbr[k], visited) )
            DFS(M, row + rowNbr[k], col + colNbr[k], visited);
}
</code> </pre>
<p>I will check it further and update the post.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-shek8034 odd alt depth-3" id="dsq-comment-20918">
        <div id="dsq-comment-header-20918" class="dsq-comment-header">
            <cite id="dsq-cite-20918">
                <span id="dsq-author-user-20918">shek8034</span>
            </cite>
        </div>
        <div id="dsq-comment-body-20918" class="dsq-comment-body">
            <div id="dsq-comment-message-20918" class="dsq-comment-message"><p>@kartik : The method in the post is 100% correct. These values are not redundant. We have to check all the 8 neighbours.<br />
Verify it by this example<br />
M[][C]= {<br />
	{1, 0, 0, 1, 1},<br />
	{1, 0, 1, 0, 0},<br />
	{1, 0, 0, 1, 0},<br />
	{1, 1, 1, 1, 1},<br />
	{0, 0, 0, 0, 0}<br />
    };<br />
Total islands should be 1.<br />
But if you consider only 4 neighbours, it will fail and gives 2 islands.<br />
Thanks <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-11834">
        <div id="dsq-comment-header-11834" class="dsq-comment-header">
            <cite id="dsq-cite-11834">
                <span id="dsq-author-user-11834">Rahul</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11834" class="dsq-comment-body">
            <div id="dsq-comment-message-11834" class="dsq-comment-message"><p>@shreeram: its not redundant.. you can try the code..</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-11840">
        <div id="dsq-comment-header-11840" class="dsq-comment-header">
            <cite id="dsq-cite-11840">
                <span id="dsq-author-user-11840">a2</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11840" class="dsq-comment-body">
            <div id="dsq-comment-message-11840" class="dsq-comment-message"><p>It will fail for an input like this &#8211; </p>
<pre> <code language="C">
int M[][COL]= 
     {  {1, 1, 0, 0, 0},
        {0, 1, 0, 1, 0},
        {1, 0, 1, 1, 0},
        {0, 0, 0, 0, 0},
        {1, 0, 1, 0, 1}
    };
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-11841">
        <div id="dsq-comment-header-11841" class="dsq-comment-header">
            <cite id="dsq-cite-11841">
                <span id="dsq-author-user-11841">a2</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11841" class="dsq-comment-body">
            <div id="dsq-comment-message-11841" class="dsq-comment-message"><p>The &#8216; 1 &#8216; in the 2nd row and 4th column has been treated as an extra island. So the mentioned positions are necessary !</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-11824">
        <div id="dsq-comment-header-11824" class="dsq-comment-header">
            <cite id="dsq-cite-11824">
http://codes-to-problem.blogspot.in/                <span id="dsq-author-user-11824">niraj</span>
            </cite>
        </div>
        <div id="dsq-comment-body-11824" class="dsq-comment-body">
            <div id="dsq-comment-message-11824" class="dsq-comment-message"><p><a href="http://codes-to-problem.blogspot.in/2012/07/given-2d-matrix-which-has-only-1s-and.html" rel="nofollow">http://codes-to-problem.blogspot.in/2012/07/given-2d-matrix-which-has-only-1s-and.html</a></p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-22401">
        <div id="dsq-comment-header-22401" class="dsq-comment-header">
            <cite id="dsq-cite-22401">
                <span id="dsq-author-user-22401">Akshay Jindal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22401" class="dsq-comment-body">
            <div id="dsq-comment-message-22401" class="dsq-comment-message"><p>@Neeraj: thanks for the wonderful approach, the logic behind the implementation in the blog is the same as mentioned above in the post, but implementation is a lot easier and clear in the blog post.</p>
<p>Cheers</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/find-number-of-islands/';
var disqus_identifier = '25783 http://www.geeksforgeeks.org/?p=25783';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "Find the number of islands";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.198 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:26:35 -->

<!-- Compression = gzip -->
<!-- super cache -->