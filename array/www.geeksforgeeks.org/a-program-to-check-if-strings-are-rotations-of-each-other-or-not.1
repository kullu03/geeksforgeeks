<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
       <title>A Program to check if strings are rotations of each other or not - GeeksforGeeks</title>
       <style type="text/css" media="screen">
          @import url('http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/style.css');
    </style>
      <link href="http://d2o58evtke57tz.cloudfront.net/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon" />    
    
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/a-program-to-check-if-strings-are-rotations-of-each-other-or-not/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="A Program to check if strings are rotations of each other or not - GeeksforGeeks" />
<meta property="og:description" content="Given a string s1 and a string s2, write a snippet to say whether s2 is a rotation of s1 using only one call to strstr routine? (eg given s1 = ABCD and s2 = CDAB, return true, given s1 = ABCD, and s2 = ACBD , return false) Algorithm: areRotations(str1, str2) 1. Create a &hellip;" />
<meta property="og:url" content="http://www.geeksforgeeks.org/a-program-to-check-if-strings-are-rotations-of-each-other-or-not/" />
<meta property="og:site_name" content="GeeksforGeeks" />
<meta property="article:section" content="Strings" />
<meta property="article:published_time" content="2009-05-26T21:54:39+00:00" />
<meta property="article:modified_time" content="2013-06-20T10:56:34+00:00" />
<meta property="og:updated_time" content="2013-06-20T10:56:34+00:00" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel='stylesheet' id='wp-quicklatex-format-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=4.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='bbp-default-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/css/bbpress.css?ver=2.5.4-5380' type='text/css' media='screen' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0'></script>

<!-- Bad Behavior 2.2.16 run time: 1.501 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1417111168 122.171.125.48';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		<style type="text/css" id="syntaxhighlighteranchor"></style>
   <meta name="google-site-verification" content="rHK2v8_zzuAZQY8JHAzbllDN8u-aQxcn2Kqnp67Old0" />
</head>

<body>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p>  <h2 align="right"> <a href="http://geeksquiz.com/">GeeksQuiz</a></h2> 
   <a href="http://www.geeksforgeeks.org/wp-login.php">Login</a> 
         </p></b>  
         
         <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
 <li><a href="http://www.geeksforgeeks.org">Home</a></li>
  <li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
 <li><a href="http://www.geeksforgeeks.org/data-structures/">DS</a></li>
  <li><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
  <li><a href="http://www.geeksforgeeks.org/forums/">Q&A</a></li>
  <li><a href="http://www.geeksforgeeks.org/c/">C</a></li>
  <li><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
  <li><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
  <li><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
  <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a Q</a></li>
  <li><a href="http://www.geeksforgeeks.org/about/">About</a></li>
            </ul>

               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays/" title="Questions regarding Arrays">Array</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic/" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles/" title="View all posts filed under C/C++ Puzzles">C/C++</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles/" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact/" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list/" title="Linked List problems">Linked List</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs/" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output/" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings/" title="Questions related to strings">String</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree/" title="View all posts filed under Trees">Tree</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/graph/" title="View all posts filed under Graph">Graph</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	<div class="post" id="post">
							<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">A Program to check if strings are rotations of each other or not</h2>
					</div>			
					<div class="clear"></div>				  
				<div class="post-content" id="post-content">
					<p>     Given a string s1 and a string s2, write  a snippet to say whether s2 is a rotation of s1 using only one call to strstr routine?<br />
    (eg given s1 = ABCD and s2 = CDAB, return  true,  given s1 = ABCD, and s2 = ACBD , return false)</p>
<p><?php the_content('Read on...'); ?></p>
<p><strong><br />
Algorithm:</strong> areRotations(str1, str2)</p>
<pre>
    1. Create a temp string and store concatenation of str1 to
       str1 in temp.
                          temp = str1.str1
    2. If str2 is a substring of temp then str1 and str2 are 
       rotations of each other.

    Example:                 
                     str1 = "ABACD"
                     str2 = "CDABA"

     temp = str1.str1 = "ABACDABACD"
     Since str2 is a substring of temp, str1 and str2 are 
     rotations of each other.
</pre>
<p><strong>Implementation:</strong></p>
<pre class="brush: cpp; highlight: [5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35]; title: ; notranslate" title="">   
# include &lt;stdio.h&gt;
# include &lt;string.h&gt;
# include &lt;stdlib.h&gt;

/* Function checks if passed strings (str1 and str2)
   are rotations of each other */
int areRotations(char *str1, char *str2)
{
  int size1   = strlen(str1);
  int size2   = strlen(str2);
  char *temp;
  void *ptr;

  /* Check if sizes of two strings are same */
  if (size1 != size2)
     return 0;

  /* Create a temp string with value str1.str1 */
  temp   = (char *)malloc(sizeof(char)*(size1*2 + 1));
  temp[0] = '&#92;&#48;';
  strcat(temp, str1);
  strcat(temp, str1);

  /* Now check if str2 is a substring of temp */
  ptr = strstr(temp, str2);

  free(temp); // Free dynamically allocated memory

  /* strstr returns NULL if the second string is NOT a
    substring of first string */
  if (ptr != NULL)
    return 1;
  else
    return 0;
}

/* Driver program to test areRotations */
int main()
{
    char *str1 = &quot;AACD&quot;;
    char *str2 = &quot;ACDA&quot;;

    if (areRotations(str1, str2))
       printf(&quot;Strings are rotations of each other&quot;);
    else
       printf(&quot;Strings are not rotations of each other&quot;);

    getchar();
    return 0;
}
</pre>
<p>Output:
<pre>Strings are rotations of each other</pre>
<p><strong>Library Functions Used:</strong><br />
    strstr:<br />
    strstr finds a sub-string within a string.<br />
    Prototype: char * strstr(const char *s1, const char *s2);<br />
    See <a href="http://www.lix.polytechnique.fr/Labo/Leo.Liberti/public/computing/prog/c/C/MAN/strstr.htm">http://www.lix.polytechnique.fr/Labo/Leo.Liberti/public/computing/prog/c/C/MAN/strstr.htm</a> for more details</p>
<p>    strcat:<br />
    strncat concatenate two strings<br />
    Prototype: char *strcat(char *dest, const char *src);<br />
    See <a href="http://www.lix.polytechnique.fr/Labo/Leo.Liberti/public/computing/prog/c/C/MAN/strcat.htm">http://www.lix.polytechnique.fr/Labo/Leo.Liberti/public/computing/prog/c/C/MAN/strcat.htm</a> for more details</p>
<p><strong>Time Complexity:</strong> Time complexity of this problem depends on the implementation of strstr function.<br />
    If implementation of strstr is done using KMP matcher then complexity of the above program is (-)(n1 + n2) where n1 and n2 are lengths of strings. KMP matcher takes (-)(n) time to find a substrng in a string of length n where length of substring is assumed to be smaller than the string.</p>
		
&nbsp;
&nbsp;
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



&nbsp;
&nbsp;
&nbsp;
<h3>Related Topics:</h3><ul><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-5-longest-common-substring-2/" title="Suffix Tree Application 5 &#8211; Longest Common Substring">Suffix Tree Application 5 &#8211; Longest Common Substring</a></li><li><a href="http://www.geeksforgeeks.org/generalized-suffix-tree-1/" title="Generalized Suffix Tree 1">Generalized Suffix Tree 1</a></li><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-4-build-linear-time-suffix-array/" title="Suffix Tree Application 4 &#8211; Build Linear Time Suffix Array">Suffix Tree Application 4 &#8211; Build Linear Time Suffix Array</a></li><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-3-longest-repeated-substring/" title="Suffix Tree Application 3 &#8211; Longest Repeated Substring">Suffix Tree Application 3 &#8211; Longest Repeated Substring</a></li><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-2-searching-all-patterns/" title="Suffix Tree Application 2 &#8211; Searching All Patterns">Suffix Tree Application 2 &#8211; Searching All Patterns</a></li><li><a href="http://www.geeksforgeeks.org/suffix-tree-application-1-substring-check/" title="Suffix Tree Application 1 &#8211; Substring Check">Suffix Tree Application 1 &#8211; Substring Check</a></li><li><a href="http://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-6/" title="Ukkonen&#8217;s Suffix Tree Construction &#8211; Part 6">Ukkonen&#8217;s Suffix Tree Construction &#8211; Part 6</a></li><li><a href="http://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-5/" title="Ukkonen&#8217;s Suffix Tree Construction &#8211; Part 5">Ukkonen&#8217;s Suffix Tree Construction &#8211; Part 5</a></li></ul>
<p></p> 
<div>
<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.geeksforgeeks.org%2Fa-program-to-check-if-strings-are-rotations-of-each-other-or-not%2F&layout=button_count&show_faces=false&width=90&action=like&colorscheme=light" scrolling="no" frameborder="0" allowTransparency="true" style="border:none; overflow:hidden; width:90px; height:20px"></iframe>
<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.geeksforgeeks.org/a-program-to-check-if-strings-are-rotations-of-each-other-or-not/" data-text="A Program to check if strings are rotations of each other or not" data-count="horizontal" data-via="jakerutter">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
<g:plusone size="medium" href="http://www.geeksforgeeks.org/a-program-to-check-if-strings-are-rotations-of-each-other-or-not/"></g:plusone>
<!-- Place this render call where appropriate -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></div>





				</div>		  
			</div> <!-- end post main -->					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>			
        
			<div class="comments-main">		
 <b>Writing code in comment?</b> Please use <b><a href="http://ideone.com/">ideone.com</a></b> and share the link here.
				
<div id="disqus_thread">
            <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-33093">
        <div id="dsq-comment-header-33093" class="dsq-comment-header">
            <cite id="dsq-cite-33093">
                <span id="dsq-author-user-33093">sourabh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-33093" class="dsq-comment-body">
            <div id="dsq-comment-message-33093" class="dsq-comment-message"><p>I dont understand the logic here we are appending two strings and then find whether second string is substring of the concatenated string . Will it not always be contained in the temp?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-33094">
        <div id="dsq-comment-header-33094" class="dsq-comment-header">
            <cite id="dsq-cite-33094">
                <span id="dsq-author-user-33094">Sourabh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-33094" class="dsq-comment-body">
            <div id="dsq-comment-message-33094" class="dsq-comment-message"><p>sorry my bad its concatenating the first string twice.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-30409">
        <div id="dsq-comment-header-30409" class="dsq-comment-header">
            <cite id="dsq-cite-30409">
                <span id="dsq-author-user-30409">jugal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-30409" class="dsq-comment-body">
            <div id="dsq-comment-message-30409" class="dsq-comment-message"><p>s1 = &#8220;ABAB&#8221; &amp; s2 = &#8220;ABAB&#8221;.<br />
is s2 a rotation of s1??</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-27518">
        <div id="dsq-comment-header-27518" class="dsq-comment-header">
            <cite id="dsq-cite-27518">
                <span id="dsq-author-user-27518">Swagato Mondal</span>
            </cite>
        </div>
        <div id="dsq-comment-body-27518" class="dsq-comment-body">
            <div id="dsq-comment-message-27518" class="dsq-comment-message"><p>This code doesn&#8217;t work for a input as first string-&#8220;ABACD&#8221;,second string-&#8220;CDAB&#8221;!.This is false but this function returns true</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-28540">
        <div id="dsq-comment-header-28540" class="dsq-comment-header">
            <cite id="dsq-cite-28540">
                <span id="dsq-author-user-28540">pavansrinivas</span>
            </cite>
        </div>
        <div id="dsq-comment-body-28540" class="dsq-comment-body">
            <div id="dsq-comment-message-28540" class="dsq-comment-message"><p>No the solution is correct as we first check the lengths of two strings&#8230;</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt depth-2" id="dsq-comment-32412">
        <div id="dsq-comment-header-32412" class="dsq-comment-header">
            <cite id="dsq-cite-32412">
                <span id="dsq-author-user-32412">Ashish</span>
            </cite>
        </div>
        <div id="dsq-comment-body-32412" class="dsq-comment-body">
            <div id="dsq-comment-message-32412" class="dsq-comment-message"><p>not wrong.. concatenation of ABACD to itself is ABACDABACD, which have CDAB as sub-string.<br />
.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-22428">
        <div id="dsq-comment-header-22428" class="dsq-comment-header">
            <cite id="dsq-cite-22428">
                <span id="dsq-author-user-22428">Vivek Venkatesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-22428" class="dsq-comment-body">
            <div id="dsq-comment-message-22428" class="dsq-comment-message"><p>This can be done with a space complexity of O(1). </p>
<p>Also I believe I handled the special case of repeating characters. </p>
<pre> <code language="Java">

boolean isRotationWith(String input, String input2) {
		
		if(input.length() != input2.length()) {
			// Two Strings can be a rotation only if they are of same length
			return false; 
		}
		else {
			boolean found = false;
			int i; 
			int foundAt = 0; 
			for(i=0;i&lt;input.length();i++) {

				/*AIM: Find the position of 1st character in 'input2' string inside the 'input' string.  
				 * 
				 * Notes:
				 * ------ 
				 *  Traversing the input string fully is important because there may be repetition of characters
				 * 
				 * Assume suppose I break out of the loop once I find the first character: 
				 * 
				 * ABCD and CDAB will return perfect output. 
				 * 
				 * ACCD and CDAC, the code will return false even though it is supposed to be true
				 * So it is important to traverse the entire length and find out the farthest character of 'input' String that matches with the first character of 'input2' string
				*/

				if(input.charAt(i) == input2.charAt(0)) {
					found = true;
					foundAt = i; 
				}
			}
			
			i = foundAt; 
			if(found == false)
				return false; 
			
			boolean isRotation = true;
			for(int j=1;j&lt;input2.length();j++) {
				// Traverse the input2 string and check if each character is equal to the character traversal of input string starting from index 'i' 
				i = (i + 1) % input.length(); // Ensures Circular Traversal

				if(input2.charAt(j) != input.charAt(i)){
					isRotation = false; 
					break; 
				}
			}
			
			return isRotation; 
			
		}
	}

</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-jitendra-bits odd alt thread-even depth-1" id="dsq-comment-21822">
        <div id="dsq-comment-header-21822" class="dsq-comment-header">
            <cite id="dsq-cite-21822">
                <span id="dsq-author-user-21822">Jitendra.BITS</span>
            </cite>
        </div>
        <div id="dsq-comment-body-21822" class="dsq-comment-body">
            <div id="dsq-comment-message-21822" class="dsq-comment-message"><p>Is it advisable to use library functions like strlen, strcat, strcmp, strstr in the interviews?<br />
Or should we implement these functions themselves?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-34558">
        <div id="dsq-comment-header-34558" class="dsq-comment-header">
            <cite id="dsq-cite-34558">
                <span id="dsq-author-user-34558">Abhishek Kumar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-34558" class="dsq-comment-body">
            <div id="dsq-comment-message-34558" class="dsq-comment-message"><p>i also have same doubt bro&#8230;:/</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-20113">
        <div id="dsq-comment-header-20113" class="dsq-comment-header">
            <cite id="dsq-cite-20113">
                <span id="dsq-author-user-20113">oqardZ</span>
            </cite>
        </div>
        <div id="dsq-comment-body-20113" class="dsq-comment-body">
            <div id="dsq-comment-message-20113" class="dsq-comment-message"><p>Hi,</p>
<p>code given above has two problems with it:</p>
<p>1)</p>
<p>Line<br />
    temp = (char *) malloc( sizeof(char) * size1 * 2 + 1 );<br />
should actually be<br />
    temp = (char *) malloc( sizeof(char) * ( size1 * 2 + 1 ) );</p>
<p>2)</p>
<p>You have a memory leak. After call to strstr, next line should be:<br />
    free( temp );</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor even depth-2" id="dsq-comment-20117">
        <div id="dsq-comment-header-20117" class="dsq-comment-header">
            <cite id="dsq-cite-20117">
                <span id="dsq-author-user-20117">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-20117" class="dsq-comment-body">
            <div id="dsq-comment-message-20117" class="dsq-comment-message"><p>Thanks for pointing this out. We have updated the code. Keep it up!</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-20143">
        <div id="dsq-comment-header-20143" class="dsq-comment-header">
            <cite id="dsq-cite-20143">
                <span id="dsq-author-user-20143">oqardZ</span>
            </cite>
        </div>
        <div id="dsq-comment-body-20143" class="dsq-comment-body">
            <div id="dsq-comment-message-20143" class="dsq-comment-message"><p>Hi, please take a moment and re-check malloc line. You have misplaced parentheses again. <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":-)" class="wp-smiley" /></p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor even depth-4" id="dsq-comment-20154">
        <div id="dsq-comment-header-20154" class="dsq-comment-header">
            <cite id="dsq-cite-20154">
                <span id="dsq-author-user-20154">GeeksforGeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-20154" class="dsq-comment-body">
            <div id="dsq-comment-message-20154" class="dsq-comment-message"><p>Thanks, corrected!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-20035">
        <div id="dsq-comment-header-20035" class="dsq-comment-header">
            <cite id="dsq-cite-20035">
                <span id="dsq-author-user-20035">Tanusri</span>
            </cite>
        </div>
        <div id="dsq-comment-body-20035" class="dsq-comment-body">
            <div id="dsq-comment-message-20035" class="dsq-comment-message"><p>I have tried to cover different cases-</p>
<p>#include<br />
#include<br />
#include<br />
#include</p>
<p>bool rotate(char *s1,char *s2)<br />
{<br />
     if(strlen(s1)!=strlen(s2))<br />
     return 0;<br />
     int j=0,i=0;<br />
     int bitmap[26]={0};<br />
     while(i&lt; strlen(s2))<br />
     {<br />
          bitmap[s2[i]-65]=bitmap[s2[i]-65]+1;</p>
<p>          i++;</p>
<p>     }</p>
<p>    i=0;<br />
     while(i1)<br />
             {<br />
                 bitmap[s2[i]-65] =bitmap[s2[i]-65]- 1;<br />
                 i++;<br />
             }</p>
<p>             if(s1[j]==s2[i])<br />
             break;<br />
             else<br />
             i++;<br />
     }<br />
     while(j= strlen(s2))<br />
             {<br />
                  i=0;<br />
                  continue;<br />
             }</p>
<p>             else if(s1[j]==s2[i])<br />
             {<br />
                   i++;<br />
                   j++;<br />
             }<br />
             else if(s1[j]!=s2[i])<br />
             {<br />
                    return 0;<br />
             }<br />
     }<br />
    return 1;<br />
}<br />
main()<br />
{<br />
      char *s1=&#8221;AABB&#8221;;//&#8221;ABAB&#8221;;//&#8221;AA&#8221;;//&#8221;ABCDA&#8221;;//&#8221;ACAB&#8221;;//&#8221;ABACD&#8221;;<br />
      char *s2=&#8221;BAAB&#8221;;//&#8221;BABA&#8221;;//&#8221;AA&#8221;;//&#8221;AABCD&#8221;;//&#8221;ABAC&#8221;;//&#8221;ACDAB&#8221;;<br />
      if(rotate(s1,s2))<br />
      printf(&#8220;String is rotated&#8221;);<br />
      else<br />
      printf(&#8220;String is not rotated&#8221;);<br />
      getch();<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-18402">
        <div id="dsq-comment-header-18402" class="dsq-comment-header">
            <cite id="dsq-cite-18402">
                <span id="dsq-author-user-18402">rohit</span>
            </cite>
        </div>
        <div id="dsq-comment-body-18402" class="dsq-comment-body">
            <div id="dsq-comment-message-18402" class="dsq-comment-message"><p>@geeksforgeek:you also need to check strlen(s1)==strlen(s2)&#8230;eg-:ABCD,CD..fails for it..</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-18305">
        <div id="dsq-comment-header-18305" class="dsq-comment-header">
            <cite id="dsq-cite-18305">
                <span id="dsq-author-user-18305">gags</span>
            </cite>
        </div>
        <div id="dsq-comment-body-18305" class="dsq-comment-body">
            <div id="dsq-comment-message-18305" class="dsq-comment-message"><p>public static boolean isRotated(String original, String rotated) {<br />
		if (original == null || rotated == null)<br />
			return false;<br />
		if (original.length() != rotated.length())<br />
			return false;<br />
		int len = original.length();<br />
		for (int i = 0; i &lt; len; i++) {<br />
			if (rotated.charAt(i) == original.charAt(0)) {<br />
				if (check(original, rotated, i))<br />
					return true;<br />
			}<br />
		}<br />
		return false;<br />
	}</p>
<p>	private static boolean check(String original, String rotated, int start) {<br />
		int end = start &#8211; 1;<br />
		int len = original.length();<br />
		start++;<br />
		int i = 1;<br />
		while (start &lt; len) {<br />
			if (original.charAt(i) != rotated.charAt(start))<br />
				return false;<br />
			start++;<br />
			i++;<br />
		}<br />
		start = 0;<br />
		while (i &lt;= end) {<br />
			if (original.charAt(i) != rotated.charAt(start))<br />
				return false;<br />
		}<br />
		return true;</p>
<p>	}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment byuser comment-author-abhishek08aug even thread-odd thread-alt depth-1" id="dsq-comment-17943">
        <div id="dsq-comment-header-17943" class="dsq-comment-header">
            <cite id="dsq-cite-17943">
                <span id="dsq-author-user-17943">abhishek08aug</span>
            </cite>
        </div>
        <div id="dsq-comment-body-17943" class="dsq-comment-body">
            <div id="dsq-comment-message-17943" class="dsq-comment-message"><pre> <code language="C">
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;string.h&gt;
#define NO_OF_CHARS 256
 
int are_rotations(char * str1, char * str2) {
  int size1=strlen(str1);
  int size2=strlen(str2);

  if(size1!=size2) {
    return 0;
  }
  char * temp=(char *)malloc(sizeof(char)*size1*2+1);
  strcat(temp, str1);
  strcat(temp, str1);

  return strstr(temp, str2); 
}
 
int main() {
  char * str1=&quot;ABACD&quot;;
  char * str2=&quot;CDABA&quot;;

  if(are_rotations(str1, str2)) {
    printf(&quot;String are rotations of each other\n&quot;);
  } else {
    printf(&quot;String are not rotations of each other\n&quot;);
  }
  return 0;
}
</code> </pre>
<p>String are rotations of each other</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-13619">
        <div id="dsq-comment-header-13619" class="dsq-comment-header">
            <cite id="dsq-cite-13619">
                <span id="dsq-author-user-13619">Ramasubramani</span>
            </cite>
        </div>
        <div id="dsq-comment-body-13619" class="dsq-comment-body">
            <div id="dsq-comment-message-13619" class="dsq-comment-message"><p>Awesome Logic.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-13422">
        <div id="dsq-comment-header-13422" class="dsq-comment-header">
            <cite id="dsq-cite-13422">
                <span id="dsq-author-user-13422">arun</span>
            </cite>
        </div>
        <div id="dsq-comment-body-13422" class="dsq-comment-body">
            <div id="dsq-comment-message-13422" class="dsq-comment-message"><p>awesome logic</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-5840">
        <div id="dsq-comment-header-5840" class="dsq-comment-header">
            <cite id="dsq-cite-5840">
                <span id="dsq-author-user-5840">radhakrishna</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5840" class="dsq-comment-body">
            <div id="dsq-comment-message-5840" class="dsq-comment-message"><p>traverse array from 0 to n-1 for str1 and from n-1 to 0 for str2 (both at once)<br />
keep xoring str1 and str2 elements till u get 0<br />
if index resulted reaches boundary not rotated string<br />
else {<br />
   compare rest of elements and if all same print rotated<br />
}</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-9108">
        <div id="dsq-comment-header-9108" class="dsq-comment-header">
            <cite id="dsq-cite-9108">
                <span id="dsq-author-user-9108">joker</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9108" class="dsq-comment-body">
            <div id="dsq-comment-message-9108" class="dsq-comment-message"><p>@radhakrishna<br />
your  algo won&#8217;t work.try it on some case&#8217;s which have even number repeated character.</p>
<p>eg. AA  ,  BB<br />
now xoring will give 0. but they are not rotation of each other.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-5171">
        <div id="dsq-comment-header-5171" class="dsq-comment-header">
            <cite id="dsq-cite-5171">
                <span id="dsq-author-user-5171">Don</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5171" class="dsq-comment-body">
            <div id="dsq-comment-message-5171" class="dsq-comment-message"><p>if(length(string1)  length(string2))<br />
   return false;</p>
<p>for i = 0:length(string1)<br />
  if(string1[i] == string2[0])<br />
    break;</p>
<p>for j=0:length(string2)<br />
  i++;<br />
  if(string1[j]  string2[i%length(string2)]<br />
     return false;</p>
<p>return true;</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-5172">
        <div id="dsq-comment-header-5172" class="dsq-comment-header">
            <cite id="dsq-cite-5172">
                <span id="dsq-author-user-5172">Don</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5172" class="dsq-comment-body">
            <div id="dsq-comment-message-5172" class="dsq-comment-message"><p>Darn html! here it is again:</p>
<p>if(length(string1) != length(string2))<br />
 return false;</p>
<p>for i = 0:length(string1)<br />
 if(string1[i] == string2[0])<br />
 break;</p>
<p>for j=0:length(string2)<br />
 i++;<br />
 if(string1[j] != string2[i%length(string2)]<br />
 return false;</p>
<p>return true;</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-3" id="dsq-comment-8373">
        <div id="dsq-comment-header-8373" class="dsq-comment-header">
            <cite id="dsq-cite-8373">
                <span id="dsq-author-user-8373">atul</span>
            </cite>
        </div>
        <div id="dsq-comment-body-8373" class="dsq-comment-body">
            <div id="dsq-comment-message-8373" class="dsq-comment-message"><p>it will fails for following test case :-</p>
<p>char str1[]=&#8221;ABCDA&#8221;;<br />
char str2[]=&#8221;AABCD&#8221;;</p>
<pre> <code language="C">
/* Paste your code here (You may delete these lines if not writing code) */
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-5069">
        <div id="dsq-comment-header-5069" class="dsq-comment-header">
            <cite id="dsq-cite-5069">
                <span id="dsq-author-user-5069">Swapna</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5069" class="dsq-comment-body">
            <div id="dsq-comment-message-5069" class="dsq-comment-message"><p>#include<br />
#include</p>
<p>using namespace std;</p>
<p>int recurse(char *s1 , char *s2, char *s2_orig) {<br />
        if(*s1 == &#8221;)<br />
                return 1;<br />
        if(*s1 == *s2)<br />
        {<br />
                s1 += 1;<br />
                if(*(s2 + 1) == &#8221;)<br />
                        s2 = s2_orig;<br />
                else<br />
                        s2 += 1;<br />
                return recurse(s1, s2, s2_orig);<br />
        }<br />
        return 0;<br />
}</p>
<p>int main(void)<br />
{<br />
        int i;</p>
<p>        char s1[100];<br />
        char s2[100];</p>
<p>        cin &gt;&gt; s1 ;<br />
        cin &gt;&gt; s2;</p>
<p>        i = 0;</p>
<p>        while(s1[0] != s2[i] &amp;&amp; s2[i] != &#8221;)<br />
        {<br />
                i++;<br />
        }</p>
<p>        if (s2[i] == &#8221; || (strlen(s1) != strlen(s2)))<br />
                cout &lt;&lt; &quot;NO&quot; &lt;&lt; endl;<br />
        else<br />
        {<br />
                recurse(s1, s2 + i, s2) ? cout &lt;&lt; &quot;YES&quot; &lt;&lt; endl : cout &lt;&lt; &quot;NO&quot; &lt;&lt; endl;<br />
        }<br />
}</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-4919">
        <div id="dsq-comment-header-4919" class="dsq-comment-header">
            <cite id="dsq-cite-4919">
                <span id="dsq-author-user-4919">zoso</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4919" class="dsq-comment-body">
            <div id="dsq-comment-message-4919" class="dsq-comment-message"><pre> <code language="C">

#include&lt;conio.h&gt;
#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
int rot(char *s1, char *s2)
{
    int n1=strlen(s1),i=0,j=0;
    if(strlen(s2)!=n1)
      return 0;
    else
    {
        while(s1[i])
        {

            int k=i;
            while(s1[k]==s2[j]&amp;&amp;(k!=(i+n1-1)%n1))
            {
                k=(k+1)%n1;
                j++;
            }
            if(k==(i+n1-1)%n1)
            return 1;
            ++i;
        }
        return 0;
    }
}

int main()
{
    char s1[20], s2[20];
    printf(&quot;Enter String 1: &quot;);
    gets(s1);
    printf(&quot;Enter String 2: &quot;);
    gets(s2);
    if(rot(s1,s2))
    printf(&quot;\nStrings are rotation of each other&quot;);
    else
    printf(&quot;\nStrings are not rotation of each other&quot;);
}
</code> </pre>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-5071">
        <div id="dsq-comment-header-5071" class="dsq-comment-header">
            <cite id="dsq-cite-5071">
                <span id="dsq-author-user-5071">zoso</span>
            </cite>
        </div>
        <div id="dsq-comment-body-5071" class="dsq-comment-body">
            <div id="dsq-comment-message-5071" class="dsq-comment-message"><p>one thing missed is that in rot() the inner while loop will have a j=0 statement.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-4847">
        <div id="dsq-comment-header-4847" class="dsq-comment-header">
            <cite id="dsq-cite-4847">
                <span id="dsq-author-user-4847">Sunil</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4847" class="dsq-comment-body">
            <div id="dsq-comment-message-4847" class="dsq-comment-message"><p>Awesome logic <img src="http://d2o58evtke57tz.cloudfront.net/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> i m loving geeksforgeeks portal</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-4629">
        <div id="dsq-comment-header-4629" class="dsq-comment-header">
            <cite id="dsq-cite-4629">
                <span id="dsq-author-user-4629">rams</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4629" class="dsq-comment-body">
            <div id="dsq-comment-message-4629" class="dsq-comment-message"><pre> <code language="C">
void Prefix(char P[],int Pre[])
{
    int k=0,q;
    int m=strlen(P);
    Pre[0]=0;

    for(q=1; q0 &amp; &amp; P[k]!=P[q])
        k=Pre[k];
    if(P[k]==P[q])
        k++;
    Pre[q]=k;
}
}




int KMP(char T[],char P[])
{
    int n,m,i,j,k,q;
    int Pre[100]= {0};
    q=0;
    n=strlen(T);
    m=strlen(P);
    for(i=0; i0 &amp; &amp; P[q]!=T[i])
        q=Pre[q];
    if(P[q]==T[i])
        q++;
    if(q==m)
        return 1;
}
return 0;
       }

       int IsRotations(char *s1,char *s2)
{
    char *temp,*temp2=s1;
    int k,n,i;
    n=strlen(s1);
    for(i=n; i&lt; =2*n-1; i++)
    {
        *(s1+i)=*(temp2+i-n);
    }
    *(s1+i)='';
    puts(s1);
    k=KMP(s1,s2);
    return k;
}
int main(void)
{
    char s1[10],s2[10];
    int i;
    gets(s1);
    gets(s2);
    puts(s1);
    puts(s2);

    i=IsRotations(s1,s2);
    if(i==0)
        printf(&quot; NOT ROTATIONS&quot;);
    else
        printf(&quot; Rotations&quot;);
    return 0;
}
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-4561">
        <div id="dsq-comment-header-4561" class="dsq-comment-header">
            <cite id="dsq-cite-4561">
                <span id="dsq-author-user-4561">priyadarshi</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4561" class="dsq-comment-body">
            <div id="dsq-comment-message-4561" class="dsq-comment-message"><pre> <code language="C">
int are_rotations(char *s1,char *s2)
{
	int len,i,j,k;
   if(strlen(s1)!=strlen(s2))
   	return 0;
   len=strlen(s1);
   for(i=0;i&lt;len;i++)
   {
   	if(s2[i]==s1[0])
   	{
      	for(j=1,k=i+1;j&lt;len;j++,k=(k+1)%len)
         {
         	if(s1[j]!=s2[k])
            	break;
         }
         if(j==len)
         	return 1;
      }
   }
   return 0;
}
/*this program runs in O(n) in best case, when all elements are distinct 
&amp; the strings are rotations of each other, but the time reduces to O(n^2) 
otherwise.*/
</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-3762">
        <div id="dsq-comment-header-3762" class="dsq-comment-header">
            <cite id="dsq-cite-3762">
                <span id="dsq-author-user-3762">Algoseekar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3762" class="dsq-comment-body">
            <div id="dsq-comment-message-3762" class="dsq-comment-message"><p>@GeeksForGeeks,Sandeep,&#8230;.Its O(n^2) Solution can you let me know how we can do it in O(n) Please reply asap.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-3878">
        <div id="dsq-comment-header-3878" class="dsq-comment-header">
            <cite id="dsq-cite-3878">
                <span id="dsq-author-user-3878">aimless</span>
            </cite>
        </div>
        <div id="dsq-comment-body-3878" class="dsq-comment-body">
            <div id="dsq-comment-message-3878" class="dsq-comment-message"><p>if you want O(n) then don&#8217;t go for strstr<br />
-&gt;have an array of chars say arr[256] &#8211; i am not considering DOUBLE BYTE or UNICODE chars.<br />
-&gt;initialize with zero.<br />
-&gt;when you read one string for every occurrence increment arr[str1[i]]++<br />
-&gt;for second char decrement arr[str[i]]&#8211;<br />
-&gt;if string length is same you shall meet a situation when you will have to decrement arr[] when an element is already zero. report it. else at the end every element will be zero.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-2841">
        <div id="dsq-comment-header-2841" class="dsq-comment-header">
            <cite id="dsq-cite-2841">
                <span id="dsq-author-user-2841">donbosio</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2841" class="dsq-comment-body">
            <div id="dsq-comment-message-2841" class="dsq-comment-message"><p>@geeks:in the comments u wrote that strstr() returns null if second is a substring of first isn&#8217;tthat wrong?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-sandeep odd alt depth-2" id="dsq-comment-2850">
        <div id="dsq-comment-header-2850" class="dsq-comment-header">
            <cite id="dsq-cite-2850">
                <span id="dsq-author-user-2850">Sandeep</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2850" class="dsq-comment-body">
            <div id="dsq-comment-message-2850" class="dsq-comment-message"><p>@donbosio: Thanks for pointing this out. I have corrected the typo.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-2493">
        <div id="dsq-comment-header-2493" class="dsq-comment-header">
            <cite id="dsq-cite-2493">
                <span id="dsq-author-user-2493">Ritesh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2493" class="dsq-comment-body">
            <div id="dsq-comment-message-2493" class="dsq-comment-message"><p>if  str1 = &#8220;abc&#8221;<br />
and str2 = &#8220;cba&#8221;<br />
will it work?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-2818">
        <div id="dsq-comment-header-2818" class="dsq-comment-header">
            <cite id="dsq-cite-2818">
                <span id="dsq-author-user-2818">Srish</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2818" class="dsq-comment-body">
            <div id="dsq-comment-message-2818" class="dsq-comment-message"><p>@Ritesh:</p>
<p>Yes it should work perfectly fine in that case, &#8220;abc&#8221; and &#8220;cba&#8221; are not rotations. It returns 0.<br />
&#8220;cba&#8221; will not be found in &#8220;abcabc&#8221; so it will return 0.<br />
&#8220;abc&#8221; and &#8220;cab&#8221; infact would return 1.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment byuser comment-author-geeksforgeeks bypostauthor even thread-even depth-1" id="dsq-comment-303">
        <div id="dsq-comment-header-303" class="dsq-comment-header">
            <cite id="dsq-cite-303">
                <span id="dsq-author-user-303">geeksforgeeks</span>
            </cite>
        </div>
        <div id="dsq-comment-body-303" class="dsq-comment-body">
            <div id="dsq-comment-message-303" class="dsq-comment-message"><p>@manoj: Your solution may not work for strings with duplicate characters.  For example, it will return false for following strings but they are rotations of each other.</p>
<p>s = &#8220;ACAB&#8221;<br />
t = &#8220;ABAC&#8221;</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-297">
        <div id="dsq-comment-header-297" class="dsq-comment-header">
            <cite id="dsq-cite-297">
                <span id="dsq-author-user-297">manoj</span>
            </cite>
        </div>
        <div id="dsq-comment-body-297" class="dsq-comment-body">
            <div id="dsq-comment-message-297" class="dsq-comment-message"><p>Forgot to mention that when first string finishes, start it again from 0th index.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-296">
        <div id="dsq-comment-header-296" class="dsq-comment-header">
            <cite id="dsq-cite-296">
                <span id="dsq-author-user-296">manoj</span>
            </cite>
        </div>
        <div id="dsq-comment-body-296" class="dsq-comment-body">
            <div id="dsq-comment-message-296" class="dsq-comment-message"><p>following would work without temp string and strstr function.</p>
<p>s = &#8220;ABACD&#8221;<br />
t = &#8220;CDABA&#8221;</p>
<p>1. start from s and t<br />
2. compare first counter at &#8216;A&#8217; of s and second at &#8216;C&#8217; of t<br />
3. if equal, increment both, else increment first only.<br />
4. if at any point they do not match after first match, then return false, else true.</p>
<p>This is O(m+n) time and no space algorithm.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-2408">
        <div id="dsq-comment-header-2408" class="dsq-comment-header">
            <cite id="dsq-cite-2408">
                <span id="dsq-author-user-2408">hsg</span>
            </cite>
        </div>
        <div id="dsq-comment-body-2408" class="dsq-comment-body">
            <div id="dsq-comment-message-2408" class="dsq-comment-message"><p>this will not work for string1: ABACD<br />
and String 2 : ACDAB<br />
even though its a rotation.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-4838">
        <div id="dsq-comment-header-4838" class="dsq-comment-header">
            <cite id="dsq-cite-4838">
                <span id="dsq-author-user-4838">Sergey</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4838" class="dsq-comment-body">
            <div id="dsq-comment-message-4838" class="dsq-comment-message"><p>No, it works perfectly. And why it should not?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-4" id="dsq-comment-9183">
        <div id="dsq-comment-header-9183" class="dsq-comment-header">
            <cite id="dsq-cite-9183">
                <span id="dsq-author-user-9183">abc</span>
            </cite>
        </div>
        <div id="dsq-comment-body-9183" class="dsq-comment-body">
            <div id="dsq-comment-message-9183" class="dsq-comment-message"><p>in case to work for<br />
String1:ABACD<br />
String2:ACDAB</p>
<p>we must work out such that if there is any mismatch of charecterin String1(for i!=0) &#8220;i&#8221; must be set as 0.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even depth-2" id="dsq-comment-14110">
        <div id="dsq-comment-header-14110" class="dsq-comment-header">
            <cite id="dsq-cite-14110">
                <span id="dsq-author-user-14110">mohitk</span>
            </cite>
        </div>
        <div id="dsq-comment-body-14110" class="dsq-comment-body">
            <div id="dsq-comment-message-14110" class="dsq-comment-message"><p>^ Really nice optimization by manoj.<br />
Changes the algorithm to O(1) space, while maintaining O(n) time.</p>
<p>code for the same, hope I have covered everything:</p>
<pre> <code language="Java">

public boolean isRotation(String s1, String s2)
	{
		// If 2nd string is null
		if (s2 == null)
			return true;
			
		// If 1st string is null or the strings have unequal length
		if(s1 == null || (s1.length() != s2.length()))
			return false;
			
		int i = 0, j = 0;
		boolean first_flg = false;
		
		// Loop till we reach the end of the 2nd string
		while(j &lt; s2.length())
		{
			
			// Same chars, increment the 2nd pointer
			if(s1.charAt(i) == s2.charAt(j))		
				j++;
			
			// Else, 2nd pointer is set to start
			else
				j = 0;
			
			// If the 1st pointer reaches the end
			if(i == s1.length() - 1 )
			{
				// If first pointer's 2nd pass through the string [enacting as a concat of a string to itself]
				if(first_flg == true)
				{
					// If 2nd pointer is not at the end
					if (j != s2.length() - 1)
						return false;
					
					// Else, 2nd pointer also at the end - TRUE
					return true;
				}
				
				// If first pointer's 1st pass through the string
				else
				{
					// Set the flag, and initialize to start for the 2nd pass
					first_flg = true;
					i = -1;
				}
			}
			
			// Increment the 1st pointer
			i++;
		}
		return true;
	}

</code> </pre>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'http://www.geeksforgeeks.org/a-program-to-check-if-strings-are-rotations-of-each-other-or-not/';
var disqus_identifier = '429 http://geeksforgeeks.org/?p=429';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'geeksforgeeks';
var disqus_title = "A Program to check if strings are rotations of each other or not";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
	
					
			
			

		</div> <!-- end post -->	

<br></br>
	
</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    </div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=138031159685820";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like-box" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="250" data-height="170" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="false"></div></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding “extern” keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/"> Lowest Common Ancestor in a BST.</span></a> </li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/GeeksforGeeks" class="twitter-follow-button" data-show-count="false">Follow @GeeksforGeeks</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>         


<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="text-21" class="widget widget_text"><h2 class="widgettitle">Recent Comments</h2>
			<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>
		</li>
<li id="text-22" class="widget widget_text">			<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- LinkAd -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:90px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="2606115235"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</li>

</ul>					  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'geeksforgeeks';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://d2o58evtke57tz.cloudfront.net/wp-content/plugins/bbpress/templates/default/js/editor.js?ver=2.5.4-5380'></script>
				  
		</div> <!--end wrapper-->
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	</body>

</html>
<!-- Dynamic page generated in 0.211 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-27 23:29:28 -->

<!-- Compression = gzip -->
<!-- super cache -->